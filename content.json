{"posts":[{"title":"一句经典的动漫语","text":"当我败给青稚的时候我就在想…..这以后的旅途如果还有这么强的敌人的话..我必须变得更强！否则我就无法保护同伴…有些同伴即便不历害..我也希望他们能够跟我在一起！如果我没有足够的力量！我就无法保护他们！！！","link":"/2006/08/29/a-sentence-from-one-piece/"},{"title":"20161205学习纪录","text":"Objective关于今天的课程，你记得什么？1、记得郑老师的两个要求：（1）在学习过程中不要擅自改动代码，不然会掉坑里；（2）在上每课之前要先做作业，至少做三遍。在完成课程学习后要重复学习，最少学三遍。2、知道了提问题要注意方式，包括提问的地方、提问要准备哪些材料，以及不能做哪些事情。3、全栈营需要注册slack来进行线上答疑，而这个只有vip会员才会有邀请码。4、学习要有敬畏之心，千万不能傲慢，最好带着“绝望的心态”来认真对待老师的每一个要求。5、读第一期学员的学习笔记巩固了三个概念：拼图理论、持续奖励、重复练习。6、logdown注册过程中一定要点选验证码。7、大部分学习的相关网站需要使用VPN。8、OS 10.12 在使用过程中会出现莫名其妙的BUG，这个后期课程会提供相应的修正指南。9、学习可能需要用到MAC电脑，因为很多顶级的程序及工具都是用OS的。10、在学习过程中，第一遍复制粘贴，第二遍手打，第三遍才开始去理解程序的意义。 完成了什么？1、注册了LOGDOWN。2、注册了全栈营。3、读了郑老师的两篇文章及往期同学的一篇心得。4、完成了三个作业。 Reflective你要如何形容今天的情绪？今天很开心，在一个行业工作了五年，对自己的性格不断加深了解，发现自己其实更适合做个程序员，但苦于自己是零基础，所以之前的全栈线下班就想报名了，但是有工作在身又不敢裸辞。而后上个月一股气买了MACBOOK PRO就是为了下次有机会上全栈班做准备，没想到这么快就开了，而且是线上的！开心的不能再开心了。 今天的高峰是什么？今天的高峰是知道全栈营后立马填写优惠码问卷，而后马上注册了全栈营开始学习。 今天的低点是什么？今天的地点是在注册LOGDOWN的过程中，一开始没有开VPN验证码半天没有出现，虽然有英文提示验证码不对，但是花了不少时间才想到开VPN试试，结果验证码立马就出现了。 Interpretive我们今天学到了什么？今天学到了注册LOGDOWN，学习编程需要的一些基础的准备工作，更重要的是学到了学习应该抱有的心态。 今天一个重要的领悟是什么？学习的过程中千万不能有负面的、否定的想法，不然学习很难前进，按着老师的路数前进就好。 Decisional我们会如何用一句话形容今天的工作？千呼万唤始出来，从今迈步从头越。 有哪些工作需要明天继续努力？1、激活我的LOGDOWN部落格；2、购买VIP会员；3、下载安装XCODE。","link":"/2016/12/06/1176466/"},{"title":"20161207学习纪录","text":"Objective关于今天的课程，你记得什么？1、记得了几个软件大致的作用：xcode,homebrew,git,imagemagick,command line tools,postgresSQL,rvm,ruby。2、还有这些软件正确安装的判断方法。 完成了什么？1、安装了上述几个软件，最重要的是xcode花了两个晚上才装好！2、听了郑老师元学习课第一节及答疑。 Reflective你要如何形容今天的情绪？今天安装的时候碰到了很多小问题，所幸都解决了。想到，郑老师说的铁板其实不是踢不破的。 今天的高峰是什么？今天的高峰是在安装homebrew过程遇到困难，通过自己阅读terminal中的信息发现并正确安装。 今天的低点是什么？今天的地点是没有弄明白安装ruby究竟是用2.3.1还是2.3.3比较适合自己的电脑，最后选择了教材上的2.3.1； Interpretive我们今天学到了什么？学到了terminal是一个非常实用的工具，并且大部分代码都是在这里输入，同时想到windows其实也是这个样子的，另外在terminal使用过程中，看到了很多代码细节其实是英语，逻辑性远强于那些可视化的界面。 今天一个重要的领悟是什么？今天学到了学习过程中要扎扎实实的做好作业，不要急于冒进。 Decisional我们会如何用一句话形容今天的工作？稳扎稳打装套件。 有哪些工作需要明天继续努力？1、继续完成套件安装；","link":"/2016/12/07/1181024/"},{"title":"20161208学习纪录","text":"Objective关于今天的课程，你记得什么？1、记得slack的基本使用方法 完成了什么？1、获取邀请信并激活slack,安装并第一次使用。 Reflective你要如何形容今天的情绪？今天工作比较忙，没有时间上课，但是把slack给安装了。 今天的高峰是什么？阅读slack的英文界面没有太大的压力。 今天的低点是什么？加入线下群的时候发现没有广州，这个确实还是小失望。 Interpretive我们今天学到了什么？slack的安装使用。 今天一个重要的领悟是什么？在数字化时代，深圳比广州更有未来。 Decisional我们会如何用一句话形容今天的工作？今天进步一点点。 有哪些工作需要明天继续努力？争取明天完成第一个模块的学习。","link":"/2016/12/08/1184913/"},{"title":"20161209学习纪录","text":"Objective关于今天的课程，你记得什么？1、记得要运行两个terminal，一个跑rails，另一个创建命令；2、记得创建留言板其实是在自己的电脑上跑，自己的电脑就相当于是一台服务器；3、记得每一个程序其实都是在一个专案里面在跑；4、cd、ls、pwd、rm、rmdir、rails s等命令，以及后缀的使用模式。 完成了什么？1、创建了一个rails专案；2、创建了自己的留言板；3、完成了一部分的GIT基础设定；4、学会了如何在mbp上删除一些看不见的文件夹。 Reflective你要如何形容今天的情绪？今天有一些烦躁，因为今天才认真的对待自己的教材上没有显示图片的问题，和客服解决后发现之前有的一些步骤自己根据文字进行出现了错误，修正错误的时候心中有一股无名火，好在控制住了，不然又该乱发脾气或者抱怨了。 今天的高峰是什么？运行留言板的时候，想起了自己在约十四年前，也就是大约两辈子（七年就是一辈子）前的理想就是当一名程序员。 今天的低点是什么？处理完自己的教材无法显示图片的问题后，发现自己在创建git基本设置时没有使用first_app目录，而是使用了用户根目录。 Interpretive我们今天学到了什么？学到了创建自己的留言板。 今天一个重要的领悟是什么？当程序员是自己青少年时期的梦想。 Decisional我们会如何用一句话形容今天的工作？进两步退一步的华尔兹。 有哪些工作需要明天继续努力？争取完成第一模块的学习，并写一篇博客。","link":"/2016/12/09/20161209-learning-record/"},{"title":"报错纪录：在错误的文件夹执行命令","text":"错误时间：2016年12月9日错误内容： 在执行GIT命令： git config --global user.name &quot;你的名字&quot; git config --global user.email 你的email@XXXX.XXXX git init 时没有在正确的目录下进行，而是在用户根目录下进行。 错误危害： 1、创建了冗余的文件夹； 2、有可能损坏系统文件； 3、有可能导致某些app后续无法使用。 错误教训： 在terminal中输入指令要明确当前所处的位置，不确定则弄明确了以后再进行操作，弄不明确的暂时不操作。","link":"/2016/12/09/error-recording-execute-commands-in-the-wrong-folder/"},{"title":"20161210学习纪录","text":"Objective关于今天的课程，你记得什么？1、先是建立本地的git，在再github上建立账户，并将代码上传。在代码上传的过程中必须在专案文件夹中，可以将不同时期的程序上传，上传的是程序的所有相关附件。在这个过程中先需要进行一些本地操作，之后才能上传到github上相应的地方。2、heroku的注册及使用，我们平时编写的程序都是在本地编写的，所以在运行的过程中只有自己的电脑可以看，而网路上的其他人其实是看不见的，为了解决这个问题就必须要把程序上传到服务器上，本课中的是云服务，是以前服务器的提升。和本地的ruby不同，heroku上的gem文件使用的是pg，所以还需要进行另外的一些操作保证程序在后台云服务器上的正常运行。3、在使用网络服务时，必须先给本地的电脑记录相应的权限密码，同时要获取ssh-key,并提供给网站服务器作为印鉴卡，以确保数据的安全。 完成了什么？1、完成了git本地设置；2、注册了github；3、获取了ssh-key,并上传到github及heroku；4、注册了heroku;5、将昨日编写的专案上传到了github；6、将昨日编写的留言板专案上部署到了heroku上，并成功运行；7、了解了terminal终端的其他版本，及知道了字体及背景等内容是可以更换的；8、完成了rails第一课：环境建置的学习； Reflective你要如何形容今天的情绪？今天总算是把基础工作建置给完成了，看了看老师留的作业日期，发现后面的功课内容还是挺紧的。因为编程对于我的意义已经不再是爱好那么简单了，已经是梦想及未来，所以早上早早就睡不着了，人生又开始有了奋斗的感觉，所以今天一时还没有适应这个状态，神经有些紧绷，需要给自己适当的放松，毕竟细水长流。 今天的高峰是什么？今天的高峰是完成留言板程序的部署。 今天的低点是什么？今天的低点是在进行学习的时候速率较低，注意力一度难以集中。 Interpretive我们今天学到了什么？将留言板程序的过程代码上送到github，并将程序部署到heroku上以便于可以运行。 今天一个重要的领悟是什么？遇到迈不过去的困难多试几次没准就行了。 Decisional我们会如何用一句话形容今天的工作？单节课程密度大幅提升，新手小哥缓慢匍匐。 有哪些工作需要明天继续努力？明天开始rails第二课学习。","link":"/2016/12/10/20161210-learning-record/"},{"title":"20161211学习纪录","text":"Objective关于今天的课程，你记得什么？1、第二课的一些课前说明；2、ruby运算的一些基本指令；3、重复之前first_app的工作，重新建立一个专案并上传到之前申请的git运算中；4、记住这一边课程主要是复制粘贴，用于提高初始学习的加速度。 完成了什么？1、完开始了rails第二课的学习；2、了解了第二课学习前的注意事项；3、把xdite的学习要求重新看了两遍；4、熟悉了下irb的一些基本运算指令；5、建立了新的rails专案，并上传到上一届课申请的git中；6、在本体建立了投票统计网页，并试运行； Reflective你要如何形容今天的情绪？今天开始了第二课的学习，一开始非常快，这就是xdite老师说的初始加速度，但是由于紧张的过快，心中有些紧张，所以在第五小节就停了下来，明天再继续加快速度吧。 今天的高峰是什么？一口气将学习内容过道第5小节，但xdite老师说这些内容需要12个小时啊。 今天的低点是什么？学习太多感觉大脑有些透支的感觉。 Interpretive我们今天学到了什么？学习了irb的一些运算指令，以及了解了一些基本指令的释义，虽然xdite老师说不要看这些，但不知道是不是自己之前有编程经验所以看起来也能吸收。。。明天起还是先不看了。 今天一个重要的领悟是什么？对于编程自己好像还是有点基础的，大学没有白认真学习但在学习课程的时候还是假想自己是零基础吧。 Decisional我们会如何用一句话形容今天的工作？相比第一课，进展快的吓人。 有哪些工作需要明天继续努力？继续rails第二课的学习。","link":"/2016/12/12/1201691/"},{"title":"20161212学习纪录","text":"Objective关于今天的课程，你记得什么？1、设定显示首页；2、建立投票；3、投票和主题间要建立关联；4、使用atom改动几个语句来影响网页的链接； 完成了什么？1、建立投票；2、设定主页；3、增加图标；4、设定创建及更新返回页；5、将程序上传到了heroku; Reflective你要如何形容今天的情绪？今天听了元学习第二课，发现可能自己昨天上课太着急了。第一遍应该只是进行复制粘贴，有个大体的了解。第二遍才是关注细节，第三遍则才是理解语句的意义。 今天的高峰是什么？学习了在slack上向助教正确提问的方式，并且一次成功。 今天的低点是什么？因为自己的os之前买回来的时候（或者是自己不自觉的时候）升级了的原因，运行程序的过程中出现错误，花费了一些时间，好在及时向助教发问，不然又会花费更多的时间。 Interpretive我们今天学到了什么？1、学到了学习的方法，并进一步用于实践；2、学到了页面间其实是通过不同的命令模块相互连接的；3、发现了rails可以变运行边修改的特性； 今天一个重要的领悟是什么？初学新东西的时候，最好能放空自己，弄得好像自己什么都不会那样。我想这背后的机理就是先暂时不启动左脑识别回路吧。 Decisional我们会如何用一句话形容今天的工作？理性解决了遇到的莫名其妙的困难。 有哪些工作需要明天继续努力？完成rails第二课的第一遍学习，并完成剩下的几篇部落格。","link":"/2016/12/12/1201751/"},{"title":"20161213学习纪录","text":"Objective关于今天的课程，你记得什么？1、记得修改了一些app里的文件，主要是view里的文件；2、对超链接进行了修改，修改方式比想象中简单多了；3、初级课程中有两个作业是需要完成中级教程才可以做的，而初级教程的提交时间是12/18，所以这周的学习任务较重； 完成了什么？1、完成了rails课程第二课：初级教程；2、修改了网页的超链接；3、修改了网页的显示内容，不显示主题的内部内容；4、删除了一部分冗余功能；5、将更新的内容上送到了keroku服务器并正常运行； Reflective你要如何形容今天的情绪？学习的时候心情一般，没有大起大落。但看到需要完成第三课才能倒回来做附加题的时候确实犹豫了一下，因为第二课提交作业的时间是18号，时间确实是有些紧了，需要加快进度。 今天的高峰是什么？一气呵成的完成了作业。 今天的低点是什么？看到要完成第三课的内容才能做第二课的附加题这一点。 Interpretive我们今天学到了什么？1、模模糊糊体会到了网页中的操作及超链接是怎么回事；2、真正学会了将更新后的内容部署到服务器上，之前虽然也看过这部分内容，但是没看进去。 今天一个重要的领悟是什么？学习记不得，但也慢不得。 Decisional我们会如何用一句话形容今天的工作？一般一般。 有哪些工作需要明天继续努力？正式开始第三课的实做，并完成十篇部落格中的最后一篇。","link":"/2016/12/13/20161213-learning-record/"},{"title":"20161214学习纪录","text":"Objective关于今天的课程，你记得什么？1、在我们之前做的粗糙网页上套用了bootstrap,提供了一些外观模板；2、在os 10.12 在执行一些命令式会卡住，比如rails new/g…，这个是后可以按住control+c停止程序，并进入gem停用含有string的两串代码；3、修改app里面的一些语句能改动到显示的网页效果； 完成了什么？1、建立了新的专案；2、套用了bootstrap;3、做出了一个有外观的主页；4、加入了提醒；5、建立了一个话题；6、学会修复了一个bug; Reflective你要如何形容今天的情绪？今天较为平静，能安下心来一步一步学习，并且自己通过帮助文档解决了一个问题。 今天的高峰是什么？不去在意解说，安装xdite的方法进行了两章的内容。 今天的低点是什么？碰到卡住的问题时，第一次强制结束乱处理，没有理智的处理，自己乱处理的问题可能会非常大。 Interpretive我们今天学到了什么？1、学会了套用bootstrap；2、了解了程序其实是很多的功能组合，是一个开放的环境而不是封闭的只能用既定套路解决问题的。3、学会了atom里颜色的变化原来是代表文件更新情况的；4、学会并处理了卡顿的bug； 今天一个重要的领悟是什么？学习要先调动右脑模仿，通过高频小套路活动成就感和满足感，并不断重复练习，在这个过程中通过拼图理论不断完善补充自己的相关知识，这个方法适用于所有知识，包括开车，只是开车的时候要在安全可控的环境下，并且确保无危险。 Decisional我们会如何用一句话形容今天的工作？虽然过程中碰到了小挫折，但总体上还算是顺利的。 有哪些工作需要明天继续努力？争取完成rails第三课的第4、5章的学习。","link":"/2016/12/13/20161214-learning-record/"},{"title":"20161215学习纪录","text":"Objective关于今天的课程，你记得什么？1、使用网页的时候安装gem可以提供很多的帮助；2、开源真的是帮助程序员提高效率的好东西；3、程序中冗余的代码可以通过partial以及一段程序码解决；4、rails有自己的网页命名规则，所以在做网页的时候要进行权限设定和页面设定，确保操作和权限相一致；5、每个app里面的不同文件夹有不同的功效，比如：views放着显示的代码、controller控制着操作的代码、model放着一些模块，具体模块是什么我现在还没有理解到； 完成了什么？1、完成了第三节课4、5章的内容；2、给昨天做的专案新增了功能；3、没话了专案而界面；4、套用了devise的注册系统；5、设定了用户权限；6、优化了代码去掉了冗余； Reflective你要如何形容今天的情绪？随着自己一步一步的学习，跟着做的东西越来越有模样，心中有一小股喜悦暗暗在翻腾。 今天的高峰是什么？第4章前面5节，进入了心流状态，不知不觉就完成了，反而后面开始关注章节进度专注度降低。 今天的低点是什么？做的第五章时个人疲劳了，xdite老师说每天要做4个小时，我目前还没到，想想前两期全栈线下班的同学，那必然是更加的超脑啊，话说回来，高考的超脑状态也是很高啊，只是没有这个有意思，所以加大量应该还是可能的。 Interpretive我们今天学到了什么？1、套用devise注册系统；2、为用户设定权限；3、通过套用bootstrap美化界面； 今天一个重要的领悟是什么？现在的学习进度绝对远没有高考的强度大，所以内心不要害怕脑力跟不上，注意中间休息一定能持续加快学习的耐力值。 Decisional我们会如何用一句话形容今天的工作？效率有所提高。 有哪些工作需要明天继续努力？争取完成rails第三课的第6、7章的学习。","link":"/2016/12/15/1210706/"},{"title":"20161218学习纪录","text":"Objective关于今天的课程，你记得什么？1、设置了下拉菜单功能并建立了相应的页面；2、为内容进行了排序；3、建立了组及所属关系； 完成了什么？1、完成了第三节课6、7、8章的内容；2、排查出了一个教材设计的bug问题，也可能是我的理解有问题，这个以后再弄；3、给讨论组内容排序；4、设定讨论组设定权限；5、添加了一些视图界面； Reflective你要如何形容今天的情绪？山重水复疑无路，柳暗花明又一村。 今天的高峰是什么？通过不断摸黑尝试，最后自己通过rails console分析查找出bug的原因。 今天的低点是什么？求助助教们花了大量的时间依然没能解决问题，情绪有些失落与愤怒，好在后面自己解决了。 Interpretive我们今天学到了什么？1、使用rails console查找问题；2、关联文件relationships； 今天一个重要的领悟是什么？所谓的摸石头过河以及摸黑走夜路，指的就是什么信息都没有的情况下各种试，寻找有利信息并寻找解决方案，而不是一开始就要明确的方向。现实中的很多问题还是需要摸石头过河的。 Decisional我们会如何用一句话形容今天的工作？无用功太多。 有哪些工作需要明天继续努力？争取完成rails第三课的学习。","link":"/2016/12/19/20161218-learning-record/"},{"title":"20161219学习纪录","text":"Objective关于今天的课程，你记得什么？1、学了第三课；2、helper、partial这两个名词；3、heroku的删除方法；4、推送到github时，需要停止rails server； 完成了什么？1、完成了第三课；2、套用了helper和partial;3、上传代码及所有分支到github;4、上传代码到heroku并删除；5、提交了上第三课来的头两个作业； Reflective你要如何形容今天的情绪？松了口气，虽然过程中出了些挫折，但是说明第三课还是能完成的，拿出了作品。 今天的高峰是什么？完成了第三课。 今天的低点是什么？想试一试第八节附加题，发现自己水平可能还有点勉强，所以暂时跳过。 Interpretive我们今天学到了什么？1、有helper这个东西；2、实际操作删除heroku上的app； 今天一个重要的领悟是什么？通过高频小套路，400个小时就能成为胜任新手。 Decisional我们会如何用一句话形容今天的工作？如期进行。 有哪些工作需要明天继续努力？从第一课开始进行第二遍学习。","link":"/2016/12/19/20161219-learning-record/"},{"title":"20161220学习纪录","text":"Objective关于今天的课程，你记得什么？1、黄金学习的通道中提到的集中容易学习成功的方法：a、花大钱去上的课。b、有大量习作可练习的课程。c、有成就感的课程；2、学习中要放下你的傲慢，具体说就是要严格的按照老师的要求来、不要轻视老师制定的任何一个步骤；3、整个练习中的三遍其实只是最少要求，这是在未我们的编程打造拼图框架，所以相当重要。要练习五遍以上；4、强调进行第二遍的时候也不要去看解说！第三遍的时候才能开始看； 完成了什么？从第一课重新开始，进行第二遍学习，完成了第1、2节并阅读了Xidte老师的两篇文章。对老师提的要求加深印象。 Reflective你要如何形容今天的情绪？今天开始了第二遍的练习，原以为走第二遍的时候应该会变得更快也更急于完成，但在进行的过程中反而不慌不忙，力求只字不差的阅读教材上的每一个字。这也许就是心态的不一样了吧，因为自己已经完成了一遍，心中对于已经做过的教材是否能完成以及完成时间有了把握，加上已经完成了一次，所以第二次的过程中重心在于完善补充除了解说外的相应知识。 今天的高峰是什么？高峰在重度Xdite的放下《你的无效学习方式》的时候，想到自己大学期间一直是老老实实的完成老师的作业，忽然想明白了学东西的时候一定要把自己当成新手，最后假想自己是一张白纸，不要被其他的东西干扰。 今天的低点是什么？没有按照计划完成第一课的学习，晚上将太多的时间安排在了次要的讲座和直播室，没有为学习提前排空schedule。 Interpretive我们今天学到了什么？1、重温了黄金学习通道；2、在全栈营上提问的另一种方法——非vip方法；3、要提高对自己的要求，这些练习做三遍只是底线，应该计划完成更多遍； 今天一个重要的领悟是什么？在写作的一开始就公开写作，更进一步要传播自己的写作内容，光是有了这个想法就切切实实的让人更加认真的写。 Decisional我们会如何用一句话形容今天的工作？在其他事情上花费了太多的时间导致今日没有完成学习任务。 有哪些工作需要明天继续努力？完成第一课的第二遍学习，至少完成第二课第1节第二遍的学习。","link":"/2016/12/21/20161220-learning-record/"},{"title":"20161223学习纪录","text":"Objective关于今天的课程，你记得什么？1、在terminal中输入的语句其实也是有一些语法的，比如“git push heroku master”，就有主谓宾定四种成分，而且大部分的命令基本都是英文缩写，比如cd是change directory的缩写、ls是list stuff的缩写，甚至连ls -a这儿a都是all的缩写。这些语句和缩写其实挺简单的，弄明白它们的不但有助于记忆更不容易用错地方；2、本地和heroku上运行的资料库使用的是不同的版本，本地rails使用的是sqlite3,heroku使用的是pg.从这点可以看出，其实程序的框架是一样的，行中用于存放某些数据的子模块则可以变动，进一步的程序的灵魂其实还是在于语句。3、deploy部署，其实就是把把我们的东西放到网络上的某台服务器，教材里叫伺服器，我的理解应该是一样的东西吧。更本质的其实他们都是电脑而已，也就是说其实自己而电脑挂在晚上应该也是可以做服务器的，但是搭设起来可能会更加麻烦，应该不是简单的上传对某个平台那么简单。 完成了什么？完成了第一课第二遍学习。 Reflective你要如何形容今天的情绪？因为间隔了一天没有练习，今天大脑对这部分知识的渴求度明显提高，练习的时候更加专注于内容，而不是急于完成练习。在仔细理解语句的过程中发现自己对第一遍的很多命令开始理解你背后的语法语义，这个过程中充满了小确幸啊。 今天的高峰是什么？开始阅读教材图片里的语句，而且发现大部分其实自己能看明白，看不明白的嘛，也有信心下一遍看明白。 今天的低点是什么？没有，相对低点就是练习到一半的时候跑去弄了会论坛的东西，分心了吧。 Interpretive我们今天学到了什么？1、heroku的语句其实是有语法的，就是简单的主谓宾定；2、部署其实不一定要通过heroku，其实有很多个平台，而且只要有服务器和网络资源，貌似自己也可以从零开始搭建一个服务器出来；3、看了王秒写的提问指南，才知道崩溃了要大！声！喊！出！来！，想起之前崩溃的时候自己咬着牙最后自己把问题找出来其实怪打击积极性的，找出来还好，找不出来估计就容易放弃了。 今天一个重要的领悟是什么？Xdite老师说不要看解说，但是并没有说不要试着自己去理解程序的语句，关键在于不明白的时候不要纠结而是要记下来。另外，虽然人和人的悟性可能不一样，但一开始的时候假定自己的悟性低可以避免很多不必要的挫折。 Decisional我们会如何用一句话形容今天的工作？饥渴的大脑恨不得吸干每个字符后面的信息。 有哪些工作需要明天继续努力？明日周末，完成第二课的第二遍学习。","link":"/2016/12/24/20161223-learning-record/"},{"title":"20161221学习纪录","text":"Objective关于今天的课程，你记得什么？1、进行上机或者编程之前，一定要先把编程环境配置好，包括相应的软件、工具、套件等等，其中套件是需要不断发现积累的；2、除了X-code外，其他的工具都是在terminal里安装的，不论是通过网页还是通过terminal，本质上都是通过建立连接、传输文件、操作文件来完成这个下载过程的；3、git的本地名称及邮箱只是本地的一个标识，其实可以用多个标识，但是上传到gitHub时则需要注意GitHub上的账号；4、ruby其实是一种语言，rails则是接收这个语言的对象，其实我们是在用ruby同rails沟通以达到一些特定的操作；5、编辑器其实就是变成我们记录程序语言的工具，就类似就类似与word同.doc之类的关系。 完成了什么？进行了第一课第二遍完成了第3、4、5节的学习。 Reflective你要如何形容今天的情绪？今天的速度依旧比第一遍快很多，毕竟很多东西是之前做过的，但是因为白天工作的原因晚上还是有些疲劳，在完成第5节时觉得整个人其实已经意识模糊了，也可以说元认知能力开始出现缺失，果断睡觉去。 今天的高峰是什么？对很多第一遍是接触的工具、命令、代码开始加深了解。比如，编辑器、git init、ruby on rails.. 今天的低点是什么？依旧没有按照计划完成第一课的学习，白天工作耗费了比较大的心力、到后面是在是意识模糊了。 Interpretive我们今天学到了什么？1、加深对git的理解；2、熟悉环境配置；3、第二次建立了剪贴板； 今天一个重要的领悟是什么？休息好对于学习的作用非常大，休息好的前提下学习效率大幅提高，或许同样的时间多花一点在睡觉上，最后的学习进度反而会快过睡眠不足的人。 Decisional我们会如何用一句话形容今天的工作？休息不好导致状态不佳。 有哪些工作需要明天继续努力？完成第一课的第二遍学习，至少完成第二课第1节第二遍的学习。","link":"/2016/12/23/20161221-learning-record/"},{"title":"20161224学习纪录","text":"Objective关于今天的课程，你记得什么？1、rails console可以直接修改程序的内容，相当于越过了页面直接操作数据；2、rails的程序结果主要由view、controuller、model三部分工程，合成shaffold。是在人与数据之间的交互纽带；3、view存在着界面相关的文件、controuller存放着view上可进行操作的代码、而model则是在数据与controuller之间的操作方法，属于原来已经有的内嵌文件；4、类别和实例的方法上有区别，而且只要是同类数据集合体就类似于类别的方法，要是单个数据则是个体的方法；5、程序的核心其实是数据表，也就是数据库里面的东西，网络上的大数据其实也就是这些网页背后数据和用户使用数据的集合体；6、数据操作的核心就是CRUD; 完成了什么？1、完成了第二课第二遍学习；2、完成了附加题的第一个要求，给投票系统增加“-1”按钮并实现票数减少；3、阅读了第二课的附加内容（应该不算解说吧？）；4、删除了之前的heroku档案，重新上传了一个；5、把本课的终端视窗运行数据大体都看了一遍。 Reflective你要如何形容今天的情绪？因为周末的缘故，上午补了个充足的觉才开始练习，练习的速度同样是比第一遍要快，而且受这成就感的刺激练着练着开始追求起了速度，就像是游戏通关一样。想起Xdite老师说过这种上瘾是好事，但还是会有点担心影响学习质量。所以又刻意放慢了速度，不但看教材、看要修改的语句，连终端里的反馈也试着去看。下午加了个班，晚上累的不行，本来都没有练习欲望了，眼睛也睁不开了，结果说再看一小会，又不知不觉3个小时过去了。。。。 今天的高峰是什么？在进行删除show、edit按钮时不看教材自己就能操作了，而且之前并没有刻意背过，成就感瞬间爆棚。 今天的低点是什么？完成了投票传统”-1”的按钮和功能后，尝试了好久也没能成功把主题按票数排序，还要加强学习。 Interpretive我们今天学到了什么？1、rails的scaffold结构；2、知道了view、model、controller的功能区分；3、开始能识别出代码中的一些类别、实体、方法、变数等内容； 今天一个重要的领悟是什么？以前对于技能学习的大脑使用顺序干脆就是错的，从来就没有什么右脑学习法或者左脑学习法。他们本来就是一起协作的，而且最有效的学习法就是右脑先启动而左脑逐渐更上，而不是左脑先启动，之后右脑在排上用场。其实想想，我们观看艺术平的时候也是这个顺序的啊，先在感受和记忆，之后再理解发现背后的意义。 Decisional我们会如何用一句话形容今天的工作？按计划完成任务😁。 有哪些工作需要明天继续努力？明日依然是周末，争取完成第三课的第二遍学习。","link":"/2016/12/24/20161224-learning-record/"},{"title":"20161225学习纪录","text":"Objective关于今天的课程，你记得什么？1、在页面上的每个动作其实都包含了两个动作，一个是对动作的相应，另一个是对数据的操作；2、在resource里面的东西，在域名后面加上相应相应的字符串其实就是该资源的地址；3、index是根域名或者某个资源里默认打开的页面；4、在建立一个新的动作前要有这三步：a、建立controller对应的功能；b、对数据进行操作的controller；c、相应的界面；5、vies的程序码里其实是很简单的东西，只是现在暂时还没能完全理解；6、页面和操作间通过某些东西在传送数据，这个暂时也还没有弄明白； 完成了什么？1、完成了第三课1-0到4-5的第二遍学习；2、重新建立了新专案；3、套用了bootstrap；4、完成了讨论组基本的CRUD功能； Reflective你要如何形容今天的情绪？原计划今天完成第三课第二遍学习的，但是有朋友到访白天的时间就被占用了，晚上虽然想努力一把完成这一课的学习，但是Xdite老师说第二遍开始要每一个代码都自己敲，而这一课的代码有非常多，最终在懵掉之前还是没能完成，这个急于完成的心理确实需要克服，稳扎稳打的吸收才是关键。 今天的高峰是什么？在进行CURD操作，就是更新、删除的时候自己能猜出大概的步骤，不过这个离自己能够完全自己打出代码并完成功能还有很长的一段距离。 今天的低点是什么？抄完4-5第二遍作业的时候自己当机了，后面想做内心也有排斥感。 Interpretive我们今天学到了什么？1、要完成一个功能需要对动作的响应，已经相应的显示页面还有对于运行数据的操作；2、代码之间必然有东西在传送以实现交互，掌握这个东西非常重要；3、一些必要的代码一定要背下来，做的下意识操作的地步；4、网页的核心真的就是CRUD，无论是图片、表格、文本，其实核心就是对这些电子资源的调用 今天一个重要的领悟是什么？要想提高自己的训练时长还是要讲究一些方法技巧的，心流虽然很重要，但是毕竟单次时长有。想在一天内多次进入心流，这中间的休息和调整非常重要，除了睡眠外应该还有更有效的方法。 Decisional我们会如何用一句话形容今天的工作？信息量大，当机了。 有哪些工作需要明天继续努力？争取完成第三课第二遍的学习。","link":"/2016/12/27/20161225-learning-record/"},{"title":"年假","text":"冬天里最幸福的一件事情是 在降温的这天 你休了年假 看阳光一点一点爬满了房间","link":"/2016/12/27/annual-vacation/"},{"title":"报错纪录：在错误的位置输入代码","text":"错误时间：2016年12月27日错误内容： Step 4 : 修改 edit action时， 没有注意看要求修改 def update后面的内容， 而是下意识的修改了def edit后面的内容。 错误危害： 1、网页运行错误； 错误教训： 输入代码是一定要看清楚输入的位置。","link":"/2016/12/27/error-records-in-the-wrong-location-enter-code/"},{"title":"20161227学习纪录","text":"Objective关于今天的课程，你记得什么？1、有的操作只用建立controller就可以了，不用减了views表单；2、关于操作的权限限制是在controller里面完成的；3、大段重复出现且相似的代码可以单独建立一个文件以便于多次调用减少人力；4、网页模板套用到bootstrap和表单套用的bootstrap是分开的；5、有大量的、现成的GEM可以套用，这样的就可以节约开发时间；6、ApplicationRecord和ActionRecord是不一样的东西，在代码里要区分好； 完成了什么？1、完成了第三课4-6到5-2的第二遍学习；2、完成了删除功能；3、限制了新建group和修改group的标题不能为空；4、建立了公用表单的文件并且简化了两段代码文件；5、为页面表单也套上了Bootstrap模板；6、安装了simple_form和devise两个gem; Reflective你要如何形容今天的情绪？今天开始休今年剩下的四天年假，如果可以的话以后还是不要采用这种朝九晚五的上班方式了。白天练了会琴，发现这对于打字感的培养有很大的帮助，毕竟懂事敲键盘嘛。因为从第二遍开始都是采用自己一个字符一个字符打字的方式，加上练习量还没有还没有上去，所以这个阶段显得特别枯燥，应该是输入代码的平台期，相信肌肉记忆养成养成就会快得多也有意思的多。 今天的高峰是什么？在输入代码是开始形成肌肉记忆，有成组输入的端倪。 今天的低点是什么？敲代码还不够熟练，过程相当的无聊加上有一些痛苦。 Interpretive我们今天学到了什么？1、学到了simple_form和它的功能；2、学到了devise和它的功能； 今天一个重要的领悟是什么？一定要多敲代码，形成肌肉记忆，包括大脑的和手的，这样下次再输入的时候就不会有什么不适感了。 Decisional我们会如何用一句话形容今天的工作？输入代码的速度有待提高。 有哪些工作需要明天继续努力？争取完成第三课第二遍的学习。","link":"/2016/12/28/20161227-learning-record/"},{"title":"20161229学习纪录","text":"Objective关于今天的课程，你记得什么？1、上传有分支结构的代码上github时需要使用git push heroku –all origin;2、下次上传程序上heroku前，先把gem布置好，而且上传是要加上最新的分支号比如 ch08:master;3、Xdite老师说的学习方法核心是：谦卑的态度-》1、花大钱上的课2、有大量练习的课3、有大量例子可以模仿的课4、有成就感的学习；4、cd的d是directory，pwd是persent work d~,ls的s是stuff；5、config是设置的代码，在windows里面也有这个功能；6、git status是很重要的一个检测工具；7、params是parameters的简写形式；8、assets是资源的意思；9、rails g的g是generate的意思，后面scaffold或model则是要生成的对象；10、post可能是一种数据传输方式的选择。 完成了什么？1、完成了第一课、第二课1-0到3-12的第三遍学习；2、第二次独立完成了第二课3-13的第一道附加题； Reflective你要如何形容今天的情绪？忙碌一天终于把迁户口的事情办完，第三遍的学习果然快很多，感觉自己彻底的进入了心流，原来进入的一个前提是需要具备足够的熟练度。晚上看YY老师的直播感觉自己的进度还是慢了些，心理还是有些焦虑，仔细看了看Xdite老师的要求，想了想觉得还是要按部就班慢就慢吧，反正我最后至少能完成三遍，就这样还是切回自己的节奏自我安慰什么的，有时也不一定是贬义词啊。还有一个问题就是，基本是都打三遍，大家的效果真的一样么？会不会某些人打三遍的效果好于另一些打五遍的人呢？ 今天的高峰是什么？长时间高度专注。 今天的低点是什么？做的3-13附加题第二道脑子不好使了。 Interpretive我们今天学到了什么？1、学到了这些命令里面的具体单词的意思。 今天一个重要的领悟是什么？对某一个事物具备的熟练度，是进入心流的前提，也许这个熟练度加上稍稍高一点的挑战就是心流公式。 Decisional我们会如何用一句话形容今天的工作？心流起，歘歘歘。 有哪些工作需要明天继续努力？争取完成第二课的两道附加题及第三课第三遍的学习。","link":"/2016/12/30/20161229-learning-record/"},{"title":"20161230学习纪录","text":"Objective关于今天的课程，你记得什么？1、已建立的数据model里面是可以插入新的数据列的；2、给运行数据赋值不能使用等好式子比如：@topic.vote_count = @topic.votes.count就不能使用，而应使用@topic.vote_count.updated_attributes(integer: @topic.votes.count)才可以；3、每一次数据库的变化都会产生db文件，db文件里可以看到数据记录；4、定义路径可以通过 XX/rails/info/routes来查看；5、所以路径必须在routes里面有提及，同一个resources可以多次提及，根据路径设定、和其他文件的关联、以及其他。6、文件资源的命名原则应该不多。 完成了什么？自主完成了第二课3-13的所有附加题，包括：1、按票数排序；2、新增页面。 Reflective你要如何形容今天的情绪？今天的心情变化较为复杂，先是对3-13第二道附件题头疼，思考的时候各种不爽，后面想出了可能方法比较开心，再后来发现方法不完善，有很苦恼，直到通过rails c发现问题所在，整个人兴奋的比划了几个手势；自后继续解附件题3-13第三道，又是一阵苦恼，比上午更差的是一点头绪都没有，后来为了暂停不良情绪开始看YY老师的直播，当老师说还是先完成三遍最重要时，想到自己还差一篇，觉得不能再浪费时间了，就决定放弃了。当把terminal和atom都关了之后，看到视频里的一段代码，namespace,突然激动了一下，这就是我要找的线索啊！看完直播后，火速实践了一下，真把问题解决了，此时，情绪到达极点，而后写了这口气整个人的情绪就松弛了下来，明天再继续学习了。 今天的高峰是什么？运用这几课的只是，独立解决了两道附加题，尤其是第二道。 今天的低点是什么？解完题后，整个人像泄了气的脾气，暂时折腾不动了。 Interpretive我们今天学到了什么？1、往数据DB里面加入新column；2、给DB数据赋值的方法；3、查询rutes的页面地址；4、建立关联页面（views)的方法。 今天一个重要的领悟是什么？虽然接触难题给人带来的快感很大，但解得出来是一个不确定的事情，解不出来则失落感很大，所以需要看实际情况来衡量。我今天的解题，就是鲁莽了，再多做几遍第三课，相信自然而然就能解出来了。 Decisional我们会如何用一句话形容今天的工作？山重水复疑无路，柳暗花明又一村。 有哪些工作需要明天继续努力？完成第三课的第三遍学习，以及配置iterm2，最后就是看解说以及帮助文档。","link":"/2016/12/30/20161230-learning-record/"},{"title":"20170101学习纪录","text":"Objective关于今天的课程，你记得什么？1、partial的进阶用法2、helper要在helper文件夹里定义，且只针对views3、对不同对象的操作要在不同的model里面的定义4、要注意简化代码，以及公用代码。 完成了什么？完成了第三课第三遍，以及附件要求。 Reflective你要如何形容今天的情绪？今天没有老老实实待在家，还是出去浪了，晚上回来勉强把第三课第三遍才弄完。感觉有点地方还是没有理解透，需要再多练习练习，至少再练习一遍。 今天的高峰是什么？独立解除了第三课附加题。 今天的低点是什么？练习的速度依旧是有些慢。 Interpretive我们今天学到了什么？1、partial的进阶用法2、helper要在helper文件夹里定义，且只针对views3、对不同对象的操作要在不同的model里面的定义 今天一个重要的领悟是什么？不明白的东西多练习几遍，多接触几次，慢慢你就会明白，这不就是基因里最原始就带有的学习方式吗？ Decisional我们会如何用一句话形容今天的工作？回归生活，暂时休息。 有哪些工作需要明天继续努力？元认知课学习以及配置iterm2，最后就是看解说以及帮助文档。","link":"/2017/01/01/1264994/"},{"title":"20161231学习纪录","text":"Objective关于今天的课程，你记得什么？1、RESTful结构2、定义数据结构的时候要注意3、代码有用来显示用的，和设置参数用的 完成了什么？第三课第三遍学习的前七章 Reflective你要如何形容今天的情绪？发现自己做错代码的时候，恨死自己了。然后，调整情绪重新开始，很快又赶了上来。下午边听歌，边打字，晚上边看时间的朋友演讲边打字，效率明显不高。这个方式不可取！因为会分散注意力，导致不能进入心流。笑来老师的分心方法，和心流真的不冲突吗？还是他就不是在用心流状态工作？ 今天的高峰是什么？发现结构定义错误以后，飞快重新开始赶回进度。 今天的低点是什么？听课，看演讲进行练习，傻了吧唧的，哎。 Interpretive我们今天学到了什么？1、RESTful结构和自己之前猜想的一样。 今天一个重要的领悟是什么？心流和一心二用是两种不同的学习状态，只要是技能学习类的东西，就一定一一心一意的用心流。因为，一心二用的前提是肢体的动作不影响大脑。而不是大脑二用，技能学习需要大脑和肢体同时上场，所以不能一心二用。 Decisional我们会如何用一句话形容今天的工作？三心二意，走马观花。 有哪些工作需要明天继续努力？完成第三课的第三遍学习。","link":"/2017/01/01/20161231-learning-record/"},{"title":"20170102学习纪录","text":"Objective关于今天的课程，你记得什么？1、提取练习是学习中非常重要的一环；2、只字不差的阅读，目的只是不要错过有用的信息，但本质上对于掌握信息其实作用不大，属于高效学习序列的后端；3、针对上述问题，在阅读的时候首先是要多的调用感官，其次更多的发生提取动作；4、教、用、讨论、演讲、视听、读、听，这是个接受信息的序列，但是实际情况并不能单纯的区分开来，比如，教的过程其实就是调用了读来的，听来的，视听来的，演讲来的，讨论来的，用过的，这些信息，所以学习的目的实际上分为两种，一种是工作区间，另一种是生成区间，xdite老师的理论其实着重于后面的部分，但并不能否认前面部分，实际上后面的是最重要的，但是前面的也不可获取，这是一个组合的过程；5、view代码里面，大部分是格式位置等的符号，controller里面的大部分是数据的处理的等式，model里面则是数据处理的方法，CRUD是指controller的部分，而html、css好像是指view部分，views部分，需要多用多记！ 完成了什么？1、完成了Iterm2的配置；2、完成了元认知课，及第三课第四遍1-4章。 Reflective你要如何形容今天的情绪？上元认知课的时候，心情是复杂的。发现自己以往所认为的有效的学习方法及厌恶的学习方法事实上刚好和认知心理学是相反的。及对自己过往的无知所惋惜，又为自己能够走到今天而庆幸。在了解到被动学习与主动学习的存储率后，痛感自己过去很多时候，其实只是完成了被动接受而已，也为自己没有主动的把自己的好东西教给别人而自责，没能学得更好就是报应啊。想到自己知道了过去不知道自己不知道的东西，心理真是有种劫后余生的感觉，调整好情绪，继续做练习，过去没能做好的地方以后最好就是了。 今天的高峰是什么？上到元认知课的最后一个，下意识的不断的提取自己的过往，用以比对老师的理论。 今天的低点是什么？早上起得晚，其实早睡早起可支配的时间也许会更多。 Interpretive我们今天学到了什么？1、提取练习对于学习来说是最重要的过程，觉得了最终学会与否；2、教、用、讨论、演讲、视听、读、听，的学习效果依次减弱；3、&lt;%后面的等号，在构成一段程序的头尾的时候则没有，若是这是一句有功能的语句，则需要；4、h1、h2、p、a等符号表示的是显示的字体；5、class后面，是用来选择显示的类型的；6、controller也是需要生成的，其后的对象根据情况可能有单数、也可能有负数；7、大脑在进行提取的时候，会有一种难言的不适感、可能有点像酸麻，也可能是一种心理排斥，坦然的接受它就好，这是大脑构建新区域的过程，这个过程中要尽可能的调用多一些感官，这样新区域生长的更快更好。可以把这个过程想象成是一课种子破土而出不断生长的过程； 今天一个重要的领悟是什么？听取练习相当重要，真是把短期记忆编程长期记忆的追重要的一部分，所以我们学习的策略也应该尽快调整，提取练习是目的，其他手段是为此服务的，只讲大量的只是放进短期记忆，而不提取到长期记忆力里面，其实还不如不学，但是没有短期记忆也没有东西提取，所以要通过自我管理及时间分配使二者达到平和，并最终达到效果最大化。而，写作、教人，其实这些输出东西就是提取练习，所以输出其实是巩固输入最重要的一个环节，可以这么说，没有输出，输入的东西最终会被抛弃。 Decisional我们会如何用一句话形容今天的工作？半天的学习，重塑了学习观。 有哪些工作需要明天继续努力？完成第三课第四遍的学习，开始第五课学习。","link":"/2017/01/02/20170102-learning-record/"},{"title":"报错纪录：输入动作对象是漏掉冒号","text":"错误时间：2017年01月02日错误内容： 在默写CRUD时，在render :new 及render :edit 两段语句时漏了冒号，在程序输入过程中也是漏了冒号 错误危害： 1、程序无法正确跳转到正确位置，及无法传输参数 错误教训： 除非是程序段内定义的动作变数，不然只要是动作变数就一定要使用冒号。","link":"/2017/01/02/record-error-the-input-object-is-missing-a-colon/"},{"title":"报错纪录：controller before_action后接语句少冒号","text":"错误时间：2017年01月03日错误内容： 在进行限制 “新增讨论群”必须先登入时，漏了语句 before_action :authenticate_user! , only: [:new] 将authenticate打成了authencipate少了only后面的冒号。 错误危害： 1、程序无法执行 错误解释： 1、打错字符相当于引用了错误的方法或者引用了未存在的方法； 2、在语句中的功能符号若是有对象，则通过冒号或者紧接着的中括号构成逻辑关系。","link":"/2017/01/03/1271096/"},{"title":"报错纪录：缺少&lt;li&gt;","text":"错误时间：2017年01月03日错误内容： 在输入 &lt;li&gt; &lt;%= link_to(&quot;注册&quot;, new_user_registration_path) %&gt; &lt;/li&gt; &lt;li&gt; &lt;%= link_to(&quot;登入&quot;, new_user_session_path) %&gt; &lt;/li&gt; 时，少了两个前面的&lt;li&gt; 错误危害： 页面直接显示字体，而没有显示对应的效果。 错误解释： 1、也许是为了套用当前程序段格式设置的效果的代码。","link":"/2017/01/03/1271129/"},{"title":"20170103学习纪录","text":"Objective关于今天的课程，你记得什么？1、要积极的教别人，这是个很划算的事情，因为比你好的和你差不多的人不需要你教，而你教的人一般留存率可能只有5%，而你通过这儿过程则有90%何乐而不为呢？双赢啊，而且你是大庄家！2、要写报错纪录，哪怕是再小的错误，因为现实中往往是阴沟里翻船，所以小错误积累起来是非常可怕的。写报错纪录就是给自己种下一个心锚，这样以后犯这个错误就不太可能了，不当编程要这么做，生活中也要如此，笑来老师也提到过，但是，比起记录下来回看，这个心锚的作用更大；3、后面的程序还是要按照之前的套路，先复制一遍，在打一遍，在自己靠记忆里写出来一遍，这是个从框架到细节的学习过程，相当重要！4、ORID的写法，其实是输入，处理，输出啊，坚持二十一天能写出好文章，长期坚持不敢想象，这个是重要的提取过程；5、Xdite老师安排而提取过程有三个：ORID学习纪录、报错纪录，教别人，组成线下学习讨论小组。后面两个很重要，特别是这个线下学习小组，提供了反复讨论的机会。6、以后直播课程会设置回播，但是放置的时间不一定，可能一个星期，所以要尽快看。7、线上课程所有东西也会有，但是线下课程能看到xidte老师现实中的工作模式，能学到很多线上课程没有的细节，学习效果领先线上课程两年，需要先把离职准备做好，离不离职再说。8、CRUD中的内容最重要，view中的代码不一定要背，XIDTE老师是这么说的，但是背下来会不会更好呢？9、private内的程序直接使用程序名就可以用了，而不用加冒号，需要加冒号的是那些段内的程序。10、写ORID的时候不用太纠结，自然而然的写就好，太纠结细节反而可能什么也写不出来，像老师说的学画画一样。后期我们可以不用再套这个版写，而是用更灵活的方式写出这些内容； 完成了什么？1、收听的Xdite老师的开课直播；2、完成了第三课第四遍的第5章；3、完成了三篇报错纪录，虽然格式很简单以及一篇ORID，就是现在这篇； Reflective你要如何形容今天的情绪？昨晚随眠时间不够，听直播的时候眼皮已经打不开了，但是感觉自己内在的精神还是挺清醒的，听完直播后也完成了一章的学习，直播的时候听到老师说线下班的含量多，还是有些失落，但是想想有的东西确实是在言传身教中才能传授的。随后，在没有激动，也没有失落的情绪中，感觉也许自己真的要尝试去上线下班，显示准备好离职的东西（当然不一定离职），之后若有机会报上线下班则，其实还是有些犹豫，到时候在看自己勇气吧。 今天的高峰是什么？听老师的直播，意识到上这个课的巨大价值，远超过学编程这么简单，这些学到的只是，用在生活的各方面都是有很大的帮助，比如ORID就不一定只是写编程，你的生活中的方方面面都可以写，可以写一个人生之路ORID。 今天的低点是什么？昨天没睡够，精神状态不佳，上班也是晚上也是。 Interpretive我们今天学到了什么？1、要好好写ORID，生活中的方方面面都能写；2、还是要为线下班做准备，各方面的准备；3、ORID的O是指对外在世界的记忆，R是自己内在世界的情绪，I是自己内在世界接受到的东西，D是下一阶段的小目标；4、一定要写报错纪录，编程时，生活也是，要买专门的一个本子来写，或者自己拿云笔记写，这是种心锚的重要过程，是帮助自己成为更优秀人的一步。5、为了学好编程课，其他的技能学习值得全部排空，没错全部；6、要去好好的教别人，什么东西都是； 今天一个重要的领悟是什么？要多教别人啊，这个是对自己非常好的一件事情，不过我觉得还是要看事情，你去教别人吃饭总没意义，要教那些你在学的东西或者需要巩固的东西，时间成本嘛，不过顺手的忙就无所谓了。 Decisional我们会如何用一句话形容今天的工作？三观破，多教人。 有哪些工作需要明天继续努力？完成第三课第四遍学习及元认知课第二次学习。","link":"/2017/01/03/1271261/"},{"title":"20170104学习纪录","text":"Objective关于今天的课程，你记得什么？1、无 完成了什么？1、无 Reflective你要如何形容今天的情绪？前几天没有好好休息，果然遭到了报应，今天眼睛发辣、左脑剧烈的疼，带着悔恨的心情决定早早睡觉。 今天的高峰是什么？无 今天的低点是什么？头疼了一天 Interpretive我们今天学到了什么？1、要好好休息。 今天一个重要的领悟是什么？睡觉时特别重要的一件事情， 这个以前也领悟过，但是有忘了，所以要记录一篇错误日记。 Decisional我们会如何用一句话形容今天的工作？透支注意力遭受了报应。 有哪些工作需要明天继续努力？听YY老师直播，及争取完成第三课第四遍学习。","link":"/2017/01/05/1277397/"},{"title":"报错纪录：没有睡眠充足","text":"错误时间：2017年01月04日错误内容： 上课和练习前没有保证充足睡眠。 错误危害： 神经衰弱，头疼，眼睛疼，理解力下降，留存率低。 行为调整： 充足睡眠是最重要的，到睡觉时间一定睡觉，其他事情全部扔开。","link":"/2017/01/05/1277417/"},{"title":"20170105学习纪录","text":"Objective关于今天的课程，你记得什么？1、try ruby和try github两个网页；2、rake drop和rake create两个命令；3、在分支里做多次练习的方法；4、ruby gem的两个插件网站； 完成了什么？1、rails 第三课第四遍的第六、七章；2、按时收听了YY老师的直播； Reflective你要如何形容今天的情绪？按时休息果然精神状态不错，压着点回来看的直播，起初想算开练习，发现自己不能很好接受YY老师的信息就一心一意的听直播，直播完以后耐心的接着做第四遍，虽然急于完成，但是到了该休息的时间还是不待犹豫的结束学习工作，这就是之前报错起到的心理暗示的作用吧。 今天的高峰是什么？专注的听YY老师直播。 今天的低点是什么？直播开始想边听边练习课程，发现效率差两头都照顾不好。 Interpretive我们今天学到了什么？1、有很多相关网页可以供我们学习；2、看直播也需要专注沉浸；3、以后做练习可以用在一个git档案里面，不一定要新建，不过我认为还是新建的好些；4、有很多有用的Gem，在想对代码优化显示或者实现某些功能的时候可以去网上找找。 今天一个重要的领悟是什么？看全栈营的直播要一心一意。 Decisional我们会如何用一句话形容今天的工作？战斗力恢复八成。 有哪些工作需要明天继续努力？完成第三课第四遍学习，开始第五课学习。","link":"/2017/01/07/1284301/"},{"title":"20170106学习纪录","text":"Objective关于今天的课程，你记得什么？1、无 完成了什么？1、无 Reflective你要如何形容今天的情绪？忙碌了一周，决定还是要休息下。 今天的高峰是什么？无 今天的低点是什么？无 Interpretive我们今天学到了什么？无 今天一个重要的领悟是什么？生活还是要适当的放松。 Decisional我们会如何用一句话形容今天的工作？无 有哪些工作需要明天继续努力？争取完成第三课第四遍学习及第五课第一遍学习。","link":"/2017/01/07/1284444/"},{"title":"2017第01周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最重要的概念应该是提取练习。这个概念的关键点在知识留存率，就是说教导他人和应用知识的知识留存率是最高的。知道这个概念/工具后，学习效率将会有效的提高，进而可以延长自己的寿命。在往后的工作生活中，我将不会再把信息输入作为重点，而是把信息留存率作为重点，而这个重点的方法就是提取练习。最理想的状态时，在一定的学习时间下，你的输入时间加上提取练习时间刚刚好能把你输入的东西留存下来。 2.“本周遇到最大的坑”本周遇到的最大的坑是就没有好好休息！直到自己神经衰弱，影响到日常工作状态及学习状态才发现这个要命的问题。以后要规定休息时间，一到时间立刻进入准备睡觉状态，而其他事情则提前安排好，最差第二天补，不能再牺牲睡眠时间。","link":"/2017/01/07/1284462/"},{"title":"20170107学习纪录","text":"Objective关于今天的课程，你记得什么？1、”divider”是分割线的标识符；2、用户故事这个工具；3、提炼用户故事的方法；4、做项目要从角色出发去考虑功能；5、Computational Thingking思维的核心是解决问题；6、编程的大体步骤有四个：a、观察输入什么？输出什么？b、将大问题拆解成小问题；c、在实作过程中找资源；d、用电脑自动化解决问题；7、上点中的资源不单只图片、表格这些数据，更重要的是指方法、工具、比如各式各样的GEM，新的语言，新的框架，新的方法，新的模型等等；8、便贴纸的使用方法；9、拆解任务其实是日常生活中的项目管理方法；10、任务拆解之后，需要找出角色，再通过不同角色写出不同的用户故事。 完成了什么？1、完成了rails101第四遍；2、完成了第五课，招聘网站的Computational Thinking;如何自救；拆解任务；用户故事四章学习； Reflective你要如何形容今天的情绪？今天情绪稳定，进行rails101第四遍时，平常心。进行第五课时有些急躁，因为落后了太多进度，又开始焦虑急躁，第3-4章学习效果不佳，暂停后散了会步，又回到了平静的情绪开展学习。总体比较平静，可能和这段时间的休息状态有关系。再看computational thinking是小有激动，本质上来说我们活着就是面对这各种各样的问题，而developor则是运用科学手段解决问题的高手啊。 今天的高峰是什么？看computational thinking小有激动，觉得developor做的事情其实和自己的世界观是相吻合的。 今天的低点是什么？学习任务拆解和用户故事时比较急躁，学习效果多少受到影响。 Interpretive我们今天学到了什么？1、程序员思维的核心是解决问题，而解决问题通常有四步；2、做产品要关注角色，从角色的角度去明确最终的需求，而且一开始的时候也需要先明确任务；3、要不断了解新工具、新语言、新架构、新思想、新方法、新理论等等，这些都是developor的工具；4、要活用标签可多次使用的特点；5、要不断学习，只有这样才能做一名合格的程序员，不当当是语法，还有各种的相关知识及思想模型； 今天一个重要的领悟是什么？程序员的核心思想是解决问题； Decisional我们会如何用一句话形容今天的工作？时间不少，进度不多。 有哪些工作需要明天继续努力？争取完成第五课第一遍学习。","link":"/2017/01/07/1285792/"},{"title":"报错纪录：bundle install后没有重开rails s","text":"错误时间：2017年01月08日错误内容： 在做第五课step1时，在套用bootstrap后，没有重开rails s，导致welcome页面没能打开，于是重新做了一遍前 面的步骤。 错误危害： GEM未能接入当前正在运行的页面服务线程。 行为调整： bundle install后一定要rails s.","link":"/2017/01/08/1288770/"},{"title":"20161228学习纪录","text":"Objective关于今天的课程，你记得什么？1、记住了！号表示的非的作用2、current_user表示当前的用户，current这个词就记住了3、联系的时候除了需要建立联系表还要在model里面设置联系4、当网页交互失效时，可以直接使用rails console进行运行数据处理，可用于测试，也可用于救场；5、建立一个新功能时要考虑这几个东西：a.对数据的处理,要考虑建立Model；b.对于交互的相应，要考虑修改相应的controller;c.对于操作的呈现，要考虑修改views;6、可以把重复的代码定义成一段可调用的程序码，如果多个程序需要提前使用，可以退通过before_anction来预先使用；7、rails g model\\scaffold的用来建立数据架构的工具；8、数据表之间的通过has_many、belongs_to来实现，资源调用通过routes里面的命令来实现通过resources来定义新资源以及同就资源之间的联系；9、通过validates以及before_action来规范数据输入；10、除了我们设成表格定义的数据外，数据表还有其他默认属性：created_at,updated_at；11、使用scope功能能够将一段代码用其他字符来替代，用以达到简化输入和方便批量修改的好处；12、安装的相当于一些程序码功能集，比如will_paginate，使用后就可以直接用函式来解决问题；13、有一些函数是程序内嵌的，所以没有def就在使用了，这些只要先记下来就好，判断这里函数的方法就是在rails c里面看看能不能使用；14、所有的功能代码要放在相应的对象下面；15、这个工具主要是针对views进行优化用的；16、程序命名为确保直观，在命名时会用_线来命名； 完成了什么？1、完成了第三课5-3到9-4的第二遍学习；2、完成了登入登出功能；3、建立了群组和创建者之间的权限；4、新增的文章功能，包括基本的CRUD以及排序及分页功能；5、建立了更复杂的群组和用户的社团关系功能；6、新增了用户查看自己群组和文章的功能；7、使用了helper、partial和scope功能； Reflective你要如何形容今天的情绪？今天花了半天的时间去帮户口的事情，下午回来适当休息后开始上机，现在上机的时间越来越长，放佛不会累一样。感觉我进入状态了，为了参与后天的活动很努力的在赶进度，希望今天能够完成第三课第二遍，但还是差一点点。貌似真正的心流状态下，关于情绪的感知也是停顿的，所有的注意力都在你做的事情上，所谓的上瘾只是对时间以及外物失去了感知啊。 今天的高峰是什么？打了许多错字，全靠自己解决了。 今天的低点是什么？敲代码的速度是上来了，但是错字率有些高，查找bug花的时间比提高输入效率的时间要高，所以不但要提高输入速度，还要提高输入精度。 Interpretive我们今天学到了什么？1、helper、scope以及partial;2、在几个对象之间建立联系；3、网页的本质其实也是面向对象的；4、能够使用rails console排查bug;5、一些字符的作业，比如：格式控制符。 今天一个重要的领悟是什么？程序的本质是资源调用，所以db里面的数据其实是运行的核心。 Decisional我们会如何用一句话形容今天的工作？忘我坚毅。 有哪些工作需要明天继续努力？完成第三课第二遍最后两小节，争取完成第一课，第二课第三遍的学习。","link":"/2016/12/30/20161228-learning-record/"},{"title":"报错纪录：大小写错误","text":"错误时间：2017年01月08日错误内容： 在做第五课step1时， 在FLASH_CLASSES = { alert: &quot;danger&quot;, notice: &quot;success&quot;, warning: &quot;warning&quot;}.freeze是将FLASH打成了Flash。","link":"/2017/01/08/1288868/"},{"title":"报错纪录：贴错链接","text":"错误时间：2017年01月08日错误内容： 在做第五课step3时，将edit_admin_job_path(job)及new_admin_job_path(job)两个链接定位到了edit_job_path(job)及new_job_path(job)上，由于表格类似，所以非常不容易发现。","link":"/2017/01/08/1289695/"},{"title":"20170108学习纪录","text":"Objective关于今天的课程，你记得什么？1、插入migration一次可以插入多个字段；2、插入migration名称不一定要和对象一致，可以随便设定，这个只是为了方便记忆；3、设计网页时，很多步骤是没有固定顺序的，但是GEM最好一开始就装，这样后面就不用再改，同样的还有套用simple_form等东西；4、Xdite老师的小迁移其实是rails101的改动，把rails101中的可变因数变化一下，让我们熟悉框架；5、LICe这个软件的录屏方法，而且在windows中也可以使用；6、github上有很多的代码可以去看去学习； 完成了什么？完成了第五课，第五章作业的前三个部分。 Reflective你要如何形容今天的情绪？总体来说，今天的情绪还是有些急躁，老师的课程设置确实比较快，但是不知道是不是就是要把我们往这个方向引导呢？ 今天的高峰是什么？基本上独立解出了前三个部分的任务； 今天的低点是什么？在进行第一周第四部分作业的时候，遇到了小麻烦。 Interpretive我们今天学到了什么？1、录屏的方法；2、学会去github上面的参考借鉴别人的代码；3、migration时可以一次插入多个数据段；4、程序的实现方法有很多，主要是功能和外观； 今天一个重要的领悟是什么？全栈营的网站其实就是一个讨论组网站啊！ Decisional我们会如何用一句话形容今天的工作？棋差一步，睡觉优先。 有哪些工作需要明天继续努力？把第四部分的bug解出来，看Xdite老师的直播，完成本科教材；","link":"/2017/01/08/20170108-learning-record/"},{"title":"20170109学习纪录","text":"Objective关于今天的课程，你记得什么？1、学习程序书的时候要从10%的实例学习，而不是先学90%的理论；2、学习和游戏最大的不同点在于游戏的五个要素：a、明确的目标；b、更好的记分系统，比分板；c、更多的回馈；d、更多自己偏好的工作法；e、时常得到指导；3、面对自己觉得是正确的而心存犹豫的人生重大抉择的时候，xdite老师的方法是考虑最坏的情况，看看自己是否能够承受得住这最坏的结果，并且为之买单，若果能则行动。他这个方法的灵感来源于，马戏中观众摸看不见的箱子里面的东西的心态；4、微信小程序的出现其实对于web工程师来说是个利多；5、全栈工程师其实是和不同的自己合作，并且不断杀死“猪队友”；6、使用restful时要记得使用地址参数；7、对用controller的引用，要加入对应的控制文件名； 完成了什么？1、完成了第五课，第五章的全部作业；2、听了Xdite老师的直播；3、解出了昨天的两个bug;4、写了两个报错纪录； Reflective你要如何形容今天的情绪？昨晚留了两个BUG，所以今天的情绪一开始是比较烦躁的，但是看完Xdite老师的直播后，心情相当平静，之后直播后还听了会直播页面的歌，甚至愉快的和同学们聊了下天，感觉如沐春风。再后来巧合的认识了位同学，情绪出现了一系列的起伏。平复后，解完两个BUG松了口气。 今天的高峰是什么？认识了个乐观的人，觉得自己也受感染了。 今天的低点是什么？看了篇文章。 Interpretive我们今天学到了什么？1、把work过成game的方法；2、程序的参数传递；3、通过书籍快速入门程序或技能的方法；4、面对人生重大决策，要做最坏的打算如果能承受而且认为是对的，则去执行； 今天一个重要的领悟是什么？不断变好比好更重要。 Decisional我们会如何用一句话形容今天的工作？好不容易解出两个BUG。 有哪些工作需要明天继续努力？完成第一周剩下的作业，开始第二周的学习任务。","link":"/2017/01/09/20170109-learning-record/"},{"title":"报错纪录：缺少参数","text":"错误时间：2017年01月09日错误内容： 在做第五课step3时，将admin_job_path(job)，写成admin_job_path，少了参数传送，造成 DELETE路径方法使用错误。","link":"/2017/01/09/record-error-missing-argument/"},{"title":"报错纪录：限定使用的views","text":"错误时间：2017年01月09日错误内容： 在做第五课step3时，未使用[:admin, @job] 接受参数，而是使用@job, 造成无法调用admin里的方法，admin里的new界面及edit界面无法保存。","link":"/2017/01/09/error-records-limited-use-of-views/"},{"title":"20170112学习纪录","text":"Objective关于今天的课程，你记得什么？1、db三兄弟；2、rake db:seed 和 rake db:reset3、rake db:rollback4、把做烂的部分保存的某个分支里的处理方式5、rename_column :XXX, :XXX的方法6、编程序要对称；7、atom提供了程序不全方法； 完成了什么？1、看了YY老师的直播 Reflective你要如何形容今天的情绪？看YY老师分享各种技巧非常的愉快，感觉收获满满。 今天的高峰是什么？和YY老师学习技巧 今天的低点是什么？作业连续两天没有什么进度。 Interpretive我们今天学到了什么？1、修改数据库的方法；2、字段命名错误后的；3、批量加入测试数据的方法；4、stack flowing 这个程序学习的网站。 今天一个重要的领悟是什么？良好的编程习惯很重要 Decisional我们会如何用一句话形容今天的工作？学了些皮毛啊。 有哪些工作需要明天继续努力？完成第一周剩下的作业，开始第二周的学习任务。","link":"/2017/01/13/1304441/"},{"title":"20170110学习纪录","text":"Objective关于今天的课程，你记得什么？1、code school这个网页2、Xdite老师的示范代码比较简洁，我自己编的可能显示功能有些复杂了 完成了什么？1、完成了第五课，第6章，及第7章1、2、3节2、code school的学习网站注册3、ruby的第一小节练习4、帮同学解决问题没有成功 Reflective你要如何形容今天的情绪？晚上学习通往财富自由之路的时间长了些，所以进行的时候还是急急忙忙的，发现了code schoole这个大宝藏，以后要好好利用。 今天的高峰是什么？进行ruby作业的时候非常的愉快。 今天的低点是什么？进度太慢 Interpretive我们今天学到了什么？1、上codeschool上自学的方法；2、要对照练习；3、通过书籍快速入门程序或技能的方法；4、除了帮别人解决问题，上论坛上看别人帮别人解决问题的帖子也是一种很好的学习方式。 今天一个重要的领悟是什么？世界的窗口很大，学会英语很重要。 Decisional我们会如何用一句话形容今天的工作？发现新世界的大门 有哪些工作需要明天继续努力？完成第一周剩下的作业，开始第二周的学习任务。","link":"/2017/01/13/1304320/"},{"title":"20170113学习纪录","text":"Objective关于今天的课程，你记得什么？1、隔天的提取练习遗忘率高 完成了什么？1、补写了之前两天的ORID日记 Reflective你要如何形容今天的情绪？准备辞职了，很多朋友跑来劝诫，但是自己还是比较平静，毕竟是经过长时间的心理准备，并且也把相关的实际准备工作基本完成了。 今天的高峰是什么？回忆昨天的直播内容，还是能回忆的起来。 今天的低点是什么？回忆大前天的内容，已经回忆不起来了。 Interpretive我们今天学到了什么？没有学到什么特别的 今天一个重要的领悟是什么？ORID一定要每天写，学了多少都得写，可以少学点，但是一定要写。 Decisional我们会如何用一句话形容今天的工作？写的迟，效率低。 有哪些工作需要明天继续努力？完成第一周剩下的作业，开始第二周的学习任务。","link":"/2017/01/13/1304680/"},{"title":"20170114学习纪录","text":"Objective关于今天的课程，你记得什么？1、hash对象，它有两个量，一个是key,另一个是value。这两个是关联的，但是也只保存关联，并不纪录顺序；2、hash的创建方法有两种，一种是{}，另一种是.hash.new();3、block指的是程序中的一段代码；4、to_a,to_s,to_i等三个转换命令；5、chlaining命令的使用方法；6、【】在变量名称后面相当于锁定功能； 完成了什么？1、招聘网站7-3的作业；2、codeschool ruby基础教程的前四小节； Reflective你要如何形容今天的情绪？今天调整了电脑的位置，整体的学习环境比之前好了很多，心情也是很平静，这周辞职的是闹心，不过因为流程的问题，暂时搁置了，再多考虑考虑吧。学习try ruby全部是英语，所以学习的时间有些慢，好在一字不差的都阅读完了。 今天的高峰是什么？学习ruby的内容，拼凑了很多知识。 今天的低点是什么？学习的太晚。 Interpretive我们今天学到了什么？没有学到什么特别的 今天一个重要的领悟是什么？睡眠的本质是质量，如何提高质量比安排时间总要得多了。程序语言其实是一层层语言的调用，汇编语言调用机器语言，c语言调用汇编语言，其他语言又调用c语言，就这样一层层的简化。这里只是举例，也可能某高级语言到机器语言只是经过了三层而已。 Decisional我们会如何用一句话形容今天的工作？暂缓辞职，学习再出发。 有哪些工作需要明天继续努力？完成第一周剩下的作业，开始第二周的学习任务。","link":"/2017/01/14/1311324/"},{"title":"编程作业：HTML 自学作业","text":"div / span 的不同div是块元素，span是内联元素。使用div会在内容的前后产生空行，而span不会。div用于将不同的元素链接组合在一起并可设定格式，而span是用于修正文本的格式。 class 与 id 的不同对于div/span而言，class属性表示该设定对于内部的某类元素生效，而id则是具体的那个一个元素生效。如果不使用则是全部元素都应用该设定。 p 与 br 的不同p是块元素，br是内联元素。p有开始标签和结束标签，而br只有开始标签且在开始标签内结束。 如何使用 table 排版相当于使用table创建了一个表格，然后在各个表格数据里面在放其他元素，加上对表的设定，行的设定，标题的设定，数据格的设定来实现排版的目的。","link":"/2017/01/15/1315086/"},{"title":"2017第02周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具应该是code school，很忏愧自己的学习进度慢了将近一周。通过这周tryruby和trygit的练习，补充了很多之前只知道甚至不知道的知识，更重要的是，在code school上还看到了许多其他的知识课程，感觉编程世界的大门正在逐渐的对自己打开。 2.“本周遇到最大的坑”本周遇到的最大的坑就是学习的时候分心了，因为觉得英语挺重要的，不单对编程对生活的方方面面都很重要，所以也就同时在上笑来老师的天天用英语课，但是因为自己底子薄，所以同样很花时间，这就照成了同时学习两个技能，Xdite老师之前说过，要排空时间只学一个技能不然时间严重不够用，自己没听进去，结果现在落后了一周，所以现在已经把微博微信公众号，所以无关的东西屏蔽掉了，等需要时再去找出来看，而不是被推送导致分心。","link":"/2017/01/15/1315124/"},{"title":"20170115学习纪录","text":"Objective关于今天的课程，你记得什么？一、TryGit1、git merge的合作思想及方法；2、git push -u &lt;&gt; 中这个u的意义；3、pull的命令意义；4、git rm -d -D -f等几个参数的功能；5、git log命令；6、‘*.txt’的应用方法；二、HTML7、div/span的意义；8、table的用法；9、列表的用法；10、class与id的区别；11、块与区的概念； 完成了什么？1、招聘网站7-4TryGit的作业；2、7-5，7-6，7-7的学习；3、html自学作业；4、完成本周周记；5、ORID Reflective你要如何形容今天的情绪？今天专心学习，调高的桌子，the piano guys的音乐，以及中间穿插连岳的文章放松，总体学习比较轻松，连续学习十几个小时不疲劳，间断性心流出现。想起了十年前自己为了下载在线播放的动画去看网页代码的时候只会找http://~.rmvb/wav这类东西的小事，感慨当年没遇到好的老师啊。 今天的高峰是什么？学习html时，明白了网页的真相。想起了十多年前为查动漫下载地址看过网页的代码啥也看不懂的情景。:-D 今天的低点是什么？英语太差，用TryGit太慢。 Interpretive我们今天学到了什么？1、html语言的本质；2、新学习了一些git的命令；3、没事的时候可以打开tryruby和trygit多练习熟悉；4、html的一个可以做工具的网页，下次遇到不明白的直接查找修改就可以了； 今天一个重要的领悟是什么？网页其实就是标记语言的显示，本质上就是文档。超文本语言什么的，太不亲民了。 Decisional我们会如何用一句话形容今天的工作？练一个时光机器，解一个十年之谜。 有哪些工作需要明天继续努力？1、看Xdite老师直播；2、完成css自学及相关作业；3、将ipad带上，用业余时间进行学习。","link":"/2017/01/15/1315166/"},{"title":"20170117学习纪录","text":"Objective关于今天的课程，你记得什么？1、css的框模型分为三个部分，元素、内边距、外边距；2、内边距的常数设置可以使用几种设置方式； 完成了什么？1、css的框模型学习； Reflective你要如何形容今天的情绪？今天时间紧迫，又一次没能按计划进行学习，学习的时候大脑异常的疲劳，看了两课以后脑袋就当机了，Xdite老师这一课的作业是不是设置的过于超前了？不管了，学完了再说。 今天的高峰是什么？无 今天的低点是什么？学习的时候脑子不够用，果然还是不能边开音乐边学习。 Interpretive我们今天学到了什么？1、用好css的框模型，对于美化网页有很大的应用空间；2、父元素与子元素的概念在设置效果的时候要注意； 今天一个重要的领悟是什么？需要思考的学习的时候千万不能放音乐！！！编程就是其中之一。 Decisional我们会如何用一句话形容今天的工作？越来越慢了啊啊啊！！！！ 有哪些工作需要明天继续努力？1、争取完成CSS的自学。","link":"/2017/01/17/1322888/"},{"title":"20170116学习纪录","text":"Objective关于今天的课程，你记得什么？一、CSS1、css的全称是叠层样式表（cascading style sheet);2、css在文件是使用需要通过style定义；3、css可以作用于某元素、某类元素、某个元素；4、css背景的设置有三种方法：数值、百分比、关键字；5、css主要有选择器及声明两部分组成，声明又包含一组或多组属性及值组成； 二、Xdite老师直播1、老师的直播是鸡血课，让人充满斗志；2、魔改大赛时间延迟一周，需要加紧进度；3、照片网站课程开始，难度同job-listing第一周相当；4、用户故事是编程的主线，由于限定乱飞的思维；5、老师通过科学的方法，观察自己的作息规律，由此安排自己的工作、学习、科研时间，因而达到很高的效率；6、人的注意力是会受到其他东西影响的，比如，肚子饿。这个时候就要考虑休息也叫reset了，不然容易出现所谓的低效率错误重复；7、老师带的团队在上午十一点半开始到下午两点半，下午五点半到晚上八点半这个时间不准进行deploy，因为错误率高，且影响吃饭；8、老师在没有状态的时候是通过活动成就感来激励自己继续，也就是她说的顺风球，具体方法就是，放下手中效率贬低的事情，去进行能获得激励的事情，比如：发表干货文章、做演讲、做直播、还有打全境封锁。总之，就是让你能获得成就感的东西，然后将这个成就感迁移；9、老师是个套路高手，核心方法是平时多积累套路，主要有几个，第一是试用多个小方法，然后拼凑成大方法。第二个是，每做完一个套路，就总结，并且多联系几次，尽可能耳朵使其模块化和自动化，这样方便自己下次试用；10、使用工程中不断的组合这些套路，以使得他们能形成更高层次的套路；11、老师是在洗澡的时候进行orid的，然后利用第二天早上的时间再来写下来；12、aeron的电脑椅子非常好，能有效提高你的工作效率，是为神器； 完成了什么？1、观看YY老师的视频直播；2、进行了css的学习，了解了什么是css、css的基本语法、css的背景、css的id/class选择器； Reflective你要如何形容今天的情绪？今天下班后就开始了学习，css的知识含量明显高于html，因此学习时的接受速度慢于html，过程还是比较枯燥的，之后开始看xdite老师的直播。可能是因为白天工作耗费的太多精力，所以看直播时感觉疲劳吃力。这个正好就是老师说的人的一天的精力其实是有限的吧，之后又用1.5倍数看了一遍老师的视频，依然是疲劳期注意力不集中，可能要考虑通过劳逸结合，讲两种思维活动交替展开来。 今天的高峰是什么？高峰应该是了解到css的本质的时候，和html一样，又是一个多年的疑惑接触，很难想象，这么浅显直白的东西，自己之前居然多次听到而没有去了解。 今天的低点是什么？看直播的时候，感觉注意力不能集中，有几次感觉脑袋空白。 Interpretive我们今天学到了什么？1、网页的多样化显示是通过css来实现的；2、要研究自己的作息，找出最有效的工作学习规律；3、做事情没激情的时候，可以通过一些获得成就感的方式来焕发自己的状态；4、学程序的过程中就是学英语的过程，所以不用太介意其他的英语学习；5、手头充裕的话一定要买一把好一点的aerom椅子；6、平时要不断积累自己的套路，积累的方法就是刻意练习不同的方法，然后模块化、自动化； 今天一个重要的领悟是什么？生活中要收集形成自己的套路，这样做事的时候就会越来越快，且做的事情也越来越多。 Decisional我们会如何用一句话形容今天的工作？和Xdite老师学习了不少的人生效率必杀技，棒棒哒。 有哪些工作需要明天继续努力？1、争取完成CSS的自学。","link":"/2017/01/17/1322792/"},{"title":"编程作业：CSS自学作业","text":"margin 与 padding 的差异margin是边框外部分，会在边框外形成空白区域，而padding则是边框内的区域。margin可以是负值，而padding只能是零或正值。内边距呈现元素的背景，而外边框一般是透明的。 什么是 box modelBox model又叫css框模型，是指在元素的周围形成内边距、边框、外面距三个对象，并可以通过对三个对象的设置使得元素的样式设置多样化。 为何要使用 em 而非 px 来定义字的大小因为在有的浏览器中，比如ie，不能灵活的单独调整通过px定义的字体的大小，只能通过缩放网页这种方式来调整，影响使用体验。 h1 {margin : 10px 0px 15px 5px;} 的margin-top、margin-right、margin-left、margin-bottom 各是多少？margin-top：10pxmargin-right：0pxmargin-left：15pxmargin-bottom：5px","link":"/2017/01/20/1335915/"},{"title":"20170119学习纪录","text":"Objective关于今天的课程，你记得什么？1、css的本质是将html元素放在框模型中，然后设置相关参数来改变现实效果；2、框模型的元素内容、内边距、外边距、边框都是可以设置效果的，同时元素的字体、样式等依然可以设置效果；3、元素设置之间会有继承关系，这对简化设置很重要；4、可以通过设置大小写参数来统一批量修改显示效果； 完成了什么？1、css内边距、边框、外边距、字体、文本学习； Reflective你要如何形容今天的情绪？近段时间休息充足，晚上忍不住开了个夜车，css的作业终于马上就学完了，可以继续了进度了，一不小心落后了这么多，真是玛法啊。 今天的高峰是什么？发现了css的各个对象的设置参数其实是差不多的，有相似的规律。 今天的低点是什么？没能坚持住学习完最后的一小节。 Interpretive我们今天学到了什么？1、css的本质上是把html的元素放在自己的框模型了面，然后设置相关的各种效果，这比html的显示效果设置好多了。2、css的单边设置顺序是上右下左，值复制方式则是右复制上，左复制右，下复制上。3、字体有字体系列，以及单个字体，对应的电脑上有字体库，在设定字体系列的前提下，若没有某个字体，则会从系列中选择其他字体替代； 今天一个重要的领悟是什么？不同的浏览器有不同的内核，以及一个叫用户代理的东西，这些东西使得同样的网页在不同的电脑上显示的效果可能不一样，所以编写程序的时候，第一要考虑主流的浏览器显示效果，第二要考虑如果使用代码使得大多数浏览器能正常显示。 Decisional我们会如何用一句话形容今天的工作？还是要适度的牺牲些睡眠来保持学习的热情啊。 有哪些工作需要明天继续努力？1、争取完成CSS的自学。","link":"/2017/01/19/1332011/"},{"title":"20170120学习纪录","text":"Objective关于今天的课程，你记得什么？1、链接有四个状态，对应的css也有四个状态； 完成了什么？1、css的学习，及完成了css自学作业。 Reflective你要如何形容今天的情绪？晚上加完班回来以及非常疲惫，但还是想继续学习一会，把落后的进度追赶回来，但还是落后了太多。 今天的高峰是什么？完成了CSS学习，可以继续下面的学习以及魔改大赛了。 今天的低点是什么？白天工作用脑过度晚上注意力无法集中了。 Interpretive我们今天学到了什么？1、为链接添加样式的方法，包括链接的四种状态； 今天一个重要的领悟是什么？关于网页程序，自己还是有很多不知道的东西！还是要继续拼图，不骄傲、不放弃。 Decisional我们会如何用一句话形容今天的工作？调整好状态，开始追课程了。 有哪些工作需要明天继续努力？1、争取Job listing 第二周课程的学习","link":"/2017/01/20/20170120-learning-record/"},{"title":"报错纪录：使用rake需要关闭rails serve","text":"错误时间：2017年01月21日错误内容： 使用rake db:drop时，没有关闭rails serve，导致无法执行命令，进一步的，rake db:migrate也无法使用。","link":"/2017/01/21/1341060/"},{"title":"报错纪录：A server is already running.","text":"错误日期：2017年1月21日具体情况： 在iterm2输入命令的时候不小心把跑服务的窗口给关了，之后再打开就显示A server is already running.之后使用了YY老师的google小技巧：logdown + 问题，很快在其他同学那里找到了答案。 解决方法： 执行命令：kill -9 $(lsof -i tcp:3000 -t) 若不行则先执行：rm tmp/pids/server.pid，在执行上面的命令。","link":"/2017/01/21/1341398/"},{"title":"2017年第03周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的概念是周一Xdite老师在直播中说的，收集自己的套路，让已经做过的事情形成模块化和自动化，使得下次快速调用的目的。我的理解是这样的，大多数人在第一次做一件事情的时候都会非常的慢，但若是短时间内做两次或者三次的话就会快很多，且会留下深刻的映像，就像我们进行的rails101练习一样。可是现实生活中实际情况是，有的事情我们短时间内只做一次，下一次再做可能要花上一段时间。这样若中间再无练习，隔了长时间再做就和第一次所耗费的精力和时间差不多。所以，当第一次完成某件事情的时候不如多练习两三次，之后ORID形成套路。这样以后再碰到类似的事情时，可以为自己剩下不少时间精力。 2.“本周遇到最大的坑”本周遇到的最大的坑也应该是写ORID来遇到的最大的坑，就是写ORID时没有安排足够的时间。ORID的本质其实是提取练习，然后纪录下来。但从开始写到现在，有很多篇是晚上睡前或者第二天练习前急急忙忙补的，这就造成了一个问题，就是提取时间太短，很多东西都还没提取完我就已经完成了ORID。因为今天休息在家，所以早上时间比较充裕，就开始边想边写ORID，按平时一般感觉写不出来了就停笔了，但今早觉得时间充裕每到写不出来就冥想放空思想一会，之后又有东西可以写了，就这样经历了几次写的东西也越来越多，甚至到最后发现有的点其实是前面遇到过但是没有提取纪录下来的，这才意识到一直以来踩的这个坑。","link":"/2017/01/22/1345677/"},{"title":"20170122学习纪录","text":"Objective关于今天的课程，你记得什么？1、rubyonrails的css效果是在assets/stylesheets/文件夹下设置的；2、之前设置的bootstrap等效果也是接入了这里面；3、外接的样式套件其实也是有css成分，只不过是套接进了文件；4、在herouku上也可以运行seed文件，其实在heroku上运行的文件和在本地是一样的，就是前面加入了heroku字样；5、google中可以检查代码，这是个很好用的功能，而且可以对网页进行修改测试；6、w3schools提供方便的修改css的小功能查询；7、palletton网页提供了查色功能，其中的色系选择、相邻色、对位色就是色盘的用法；8、fa2png.io这个网站提供了icon的设置；9、fornt_awesome提供了大量的备选icon;10、给网站套图片的方法有两个：一种是用网上现成的；第二种是自己上传； 完成了什么？1、完成了魔改作业第一版；2、温习了YY老师之前的几个；3、在珠三角群进行了每周两个概念的分享； Reflective你要如何形容今天的情绪？今天伴着焦虑与不安开始了魔改，在一头雾水下跟着教材及YY老师的课程开始了。开始后发现意外的简单，但对比其他同学的做法发现这些只是入门级的而已。之前学习作业的html和css也开始逐渐清晰了起来。晚上在群里进行了语音分享，老实说心中还是有些紧张，不自觉语速就变快了。因为练习了一天的缘故，晚上还是有点疲劳，然后又没有按时休息，这个需要格外注意。 今天的高峰是什么？跟着教材修改魔改的时候，发现自己都理解了。 今天的低点是什么？虽然跟着教材进行魔改，但是脑袋了还是懵的。 Interpretive我们今天学到了什么？1、写ORID一定要留出足够的提取时间，而且要多动笔，这样才更有利于捞出大脑里的东西；2、ORID的O和I的区别是，一个是观察到的，一个是想到的；3、拼图理论的重点是把图拼上，而不是拼的这个过程，所以不要着急；4、看别人的文章可以躲过很多坑； 今天一个重要的领悟是什么？拼图理论的重点是把图最后拼上，而不是你怎么拼。 Decisional我们会如何用一句话形容今天的工作？魔改没有想象中的难，又没有想象中的简单。 有哪些工作需要明天继续努力？1、参考同学文章优化魔改作品；2、看晚上的直播；","link":"/2017/01/23/20170122-learning-record/"},{"title":"报错纪录：remote: ! No such app as XXXX","text":"错误日期：2017年1月23日具体情况： 将heroku重命名后，iterm2中push时出现以下错误提示 remote: ! No such app as XXXX 解决方法： 在iterm2/terminal中输入以下指令(XXXX为你修改的新app名字，也可在heroku后台查到的） git remote rm heroku git remote -v git remote add heroku https://git.heroku.com/XXXX.git git push heroku master","link":"/2017/01/23/record-error-remote-no-such-app-as-xxxx/"},{"title":"20170123学习纪录","text":"Objective关于今天的课程，你记得什么？1、报错语言是比较直观的展示你的错误的，根据他们就可以解决问题，有缺的的、多的、可能的几种类型；2、“row”这个类自带了-15px的margin;3、“cpntainer-fluid”要15px的margin;4、margin可以是负数，且可以叠加；5、写commit的时候有两个原则：1、简练原则；2、避免歧义原则；6、commit主要是用来理解代码用的，对于团队合作很重要；7、commit的写法根据动词来区分成几类：add、implement…；8、CCO的图片是指获得免费版权的图片；9、负的margin可以和正的padding重合；10、因为我们的页面是通过layout的application.html.erb实现，所以现在的css效果都是在asserts/stylesheets/下的application.scss设置； 完成了什么？1、看了王秒的直播；2、完成了魔改作业第二版；3、修改主页、navbar显示、slogn背景、jobs显示页面； Reflective你要如何形容今天的情绪？今天跟着论坛的迷你教程做魔改升级，看着自己的网页一点点美化内心充满了喜悦与成就感，中间自然也有撞墙的地方，不过好在都克服了，从困惑到想明白的过程，真的算是超强的激励哈。 今天的高峰是什么？看着网页一点一点美化，爽爆了。 今天的低点是什么？虽然之前自学了html及css教材，但是感觉自己还是没学透，还是花了些时间去温习了下。 Interpretive我们今天学到了什么？1、stackoverflow上面有许多的问题解法；2、使用图片一定要记得版权问题；3、BOXmodel可以理解是把元素放在一个纸箱子里，中间的空隙就是padding,纸箱皮的厚度就是border,如果箱子外面有一层结界那这个就是margin；4、网页写法的软件不一定是erb，也可能是其他类型的文件，不过最后生成给网页运行的一定是html;5、前段其实是两个概念，一个是最终显示的效果，另一个就是后台经过多种运算后，生成html文件提供给前台；6、bootstrap是很常用的一个工具箱，里面包含了大量的css，所以我们可以直接去学习使用它们，而不需要重新设置css语法；7、bootstrap有很多的网站，费师兄在论坛里提高、供了几个很优质的学习网站，不过我们自己也可以通过google来找到它们，不能太依赖老师和师兄们，到了一定程度要学习自己找资源；8、font-awesome这个套件也是提供了很多功能，下载好之后可以去主站看看它们究竟都提供了那些图标，而且需要留意新版本，然后bundle install;9、很有必要回去把rails 101再进行一遍，这样有助于梳理后面学到的这些新知识；10、编辑技能上的核心就是前段的html/css/js，后端就是CRUD，其他的都是在这些的基础上衍生出来的技能；11、除了编程技能之外，growthhack还应该掌握其他更多的技能，这样才是合格的developer，本质上这是解决问题的一群人，很多问题不是单靠技术就能解决的； 今天一个重要的领悟是什么？跟着教程学习或者向别人借鉴的时候千万不能学完再练，而是要变学变练，否则你很容易出现学了后面忘前面，然后又倒回去学习，写ORID也是，白天有想到什么就记下来，然后写ORID的时候先不要看，自己写到写不出来的时候再来比对，效果会更好； Decisional我们会如何用一句话形容今天的工作？在懵逼中前进😳。 有哪些工作需要明天继续努力？参考同学文章和作品继续优化魔改作品；","link":"/2017/01/25/20170123-learning-record/"},{"title":"20170124学习纪录","text":"Objective关于今天的课程，你记得什么？1、语句中引号内的内容默认会转换成字符串，为了想继续使用引号内的内容，需要在末尾的引号后加上.html_safe;2、head是文章标题元素；3、css的类选择器通过派生的形式有多种使用方法；4、footer置底是通过和父元素之间的配合设置的，包括：父元素高度、位置、padding，footer的位置，margin等设置；5、border加上圆角能做出椭圆或者圆形的效果；6、heroku上也能运行rails console，似乎所有的本地命令heroku上都能运行？7、em单位的意义； 完成了什么？1、完成了魔改作业第三版；2、温习了下之前学习的html及css知识；3、为网页设置footer及置底； Reflective你要如何形容今天的情绪？上午有事，下午才开始练习，花了一天的时间改footer，真是个难受的过程，不过！学到了不少东西，问题也解决了，哈哈哈哈哈！ 今天的高峰是什么？完美解决了footer的问题，而且只保留了最少功能代码； 今天的低点是什么？屡次以为完成了footer设置，结果又出现问题； Interpretive我们今天学到了什么？1、render的内容只在后台显示，在html中最后还是会统一显示为html语言;2、参考其他同事的github真是一个好办法，所以老师让他加贴上github；3、第一次体会到Xdite老师之前说的编程就是和全世界不同时期的程序员合作的内涵；4、借鉴别人代码时，不能直接复制，需要测试下具体哪些代码起作用哪些是多余的，只保留有用的。5、代码要精简； 今天一个重要的领悟是什么？学习进步的重点是快速找到下一步或者下一块拼图，而不是立马飞起来或者找到几块连载一起的大拼图块。 Decisional我们会如何用一句话形容今天的工作？难受了一天，值了！ 有哪些工作需要明天继续努力？1、参考同学文章及github优化魔改作品；2、参考UI设计好的网站优化魔改作品；3、使用bootsnipp优化功能；","link":"/2017/01/25/20170124-learning-record/"},{"title":"20170125学习纪录","text":"Objective关于今天的课程，你记得什么？1、bootsnipp上的插件只要复制css和html和js的代码就可以实现；2、如果把相应的css或者scss的文件放入本地文档了，相当于包含了html和js的代码，这样就不用再使用复制css和js代码的功能了； 完成了什么？1、完成了魔改作业第四版；2、添加了主页slogen动画效果；3、学习了animation的使用； Reflective你要如何形容今天的情绪？琢磨了一天，最后终于搞定了首页动画，过程是痛苦的，结局是喜悦的。 今天的高峰是什么？解决了首页动画的问题。 今天的低点是什么？参考其他同学的动画效果，没能生效，耗费了很多时间。 Interpretive我们今天学到了什么？1、bottshipp上的套件用法；2、自己也可以从零开始学习套件的用法；3、logdown就是一个讨论组的页面！ 今天一个重要的领悟是什么？要把自己学习到的小套路写下来，作为日后翻查的依据。 Decisional我们会如何用一句话形容今天的工作？有事难受的一天，还是值了。 有哪些工作需要明天继续努力？1、优化登录/注册页面；2、优化主页显示；","link":"/2017/01/27/20170125-learning-record/"},{"title":"20170126学习纪录","text":"Objective关于今天的课程，你记得什么？1、bundle open devise这个命令，可以打开devise及其他gem;2、export EDITOR=”atom -nw”这个打开GEM的前置命令；3、设置devise的页面的方法；4、devise的提示信息在config/local/里面可以修改；5、学习了把deviseGEM复制到本地的方法；6、发现了第二期线下班李艳增的logdown还有里面设置本地时间的方法 完成了什么？1、完成了魔改作业第五版；2、优化了注册/登录界面； Reflective你要如何形容今天的情绪？在不断的摸索中，发现新的自己的未知的知识，这个过程充满了喜悦； 今天的高峰是什么？无意识间弄明白了@media这个命令； 今天的低点是什么？耗费了太长的时间改格式，因该先到下一个功能，然后再继续优化； Interpretive我们今天学到了什么？1、代码随着屏幕的变化是通过@meida （ 屏宽 ） 的语句来实现的；2、更加熟练的用chrome的代码检索复制功能；3、在后台显示的ruby语句，最终到前端都会完成转换，显示的就只是html，比如simple_form给网页添加账号密码信息；4、css的套用还存在顺序问题，比如auto语句如果放在某些长宽设置语句前，它就起不到作用； 今天一个重要的领悟是什么？学习不要怕挫折，多试试就好。 Decisional我们会如何用一句话形容今天的工作？主要用在调格式上了； 有哪些工作需要明天继续努力？1、完善页面和数据库功能；","link":"/2017/01/27/20170126-learning-record/"},{"title":"20170121学习纪录","text":"Objective关于今天的课程，你记得什么？1、不需要git跟踪的文件可以在.gitignore中设置；2、html中的button这个元素；3、carriwave这个实用工具；4、awesome这个符号工具及网站；5、在代码重复三次及以上的时候就可以考虑用scope简化了；6、rake routes和rails routes都可以查到路由路径；7、在本例中可以先生成controller再生成model；8、在没有exiting的情况下，不小心把iterm2/terminal关掉，可能不一定会关闭线程。若没有关闭，重新打开的时候需要杀到原来的进程；9、做用户故事时，要多想实际操作时候的细节，想得越多，想得越细，后面做出来的产品也就越清晰；10、在页面上的点击操作不单能打开另一个页面，也可以触发操作，比如删除、参数传递；11、课程里第一次出现了条件选择语句；12、可以在controller里面设置layout使用的页面；13、在本专案中，指向性的赋值不需要require操作，而储存类的则一定需要；14、使用rake db:drop命令时需要关闭rails server，否则命令无法执行；15、类似的，使用git branch -D 命令时，不能删除当前分支，需要跳出到其他分支才能操作； 完成了什么？1、完成了招聘网站第二周的基本作业。 Reflective你要如何形容今天的情绪？今天除去下午有事，其余要大巴的时间进行课程，因为时间充裕，自己的状态也比较自然。期间虽然会对自己的进度焦虑，但是想到往后几天的假已经请好了，所以也没有太大的焦虑，只是时不时的心中有股躁动需要安顿。step7的提示里有错误，因为这个错误苦恼了半天，还好后面偷瞄了下教材才不至于继续苦恼下去。总的来说还是比较平稳的情绪。 今天的高峰是什么？通过网站自己完成了uploader attachment的设置及相关功能实现； 今天的低点是什么？教材中说attachment是在job中实现的，因为这个卡住了半天，后面偷瞄教材发现其实是在resume中实现的，真是个大坑。 Interpretive我们今天学到了什么？1、通过awesome为网页设置精美小图标的方法；2、安装carriwave的方法，以及使用注意事项；3、具体的就是要安装gem、设置model及controller，最后还需要布置uploader，另外bootstrap也是必须的；4、上传的文件默认是追踪的，通过.gitignore可以设置不追踪，追踪的话在public中可以看到上传的文件；5、程序中援引的path地址，其实是routes中的地址加上_path，如果需要参数的还需要在后面安排参数；6、在设置html及css参数时，如果掌握不好就少设置些参数，这样更利于优化；7、程序的实现方法其实有很多种，不一定是单一的代码，最后效果出来其实可以一样，但代码质量确有很多的不同；8、貌似可以在html 中通过style来直接设置参数？9、rake db三兄弟本质上重置数据库，这样就有一个问题，那就是数据丢失，所以如何维护好数据库也是很大的一块问题；10、有的简化代码的操作适合一开始就设置，比如simply_form,另一些比如scope就需要编号在进行优化，目前就我自己使用scope及render会降低代码的可读性，需要改善；11、YY老师之前说的google搜索logdown加遇到的问题真是个好办法；12、类似上面的，其实编程就是打破时空不不同时空中的不同个体合作；13、如果你遇到的问题是前面没有的，真就是你developer的一个好时刻了；14、编程思维其实和xdite老师的套路思维其实是一致的啊，把小功能集成，然后模块化调用，然后小模块又合成大模块，进一步的，大模块之间又组合在一起。硬件、程序语言、套路其实本质都一样啊！ 今天一个重要的领悟是什么？硬件也好，软件也好，套路也好，都是把小的集合起来整块调用，然后在上一层在集成起来再整块调用，以此类推，有种打通过去未来的感觉。 Decisional我们会如何用一句话形容今天的工作？不错不错，计划进度完成90%。 有哪些工作需要明天继续努力？1.完成招聘网站的学习；2.开始魔改大赛；3.开始学习购物网站的学习；","link":"/2017/01/22/1343846/"},{"title":"20170127学习纪录","text":"Objective关于今天的课程，你记得什么？1、页面导航可以使用搜索功能来实现；2、使用图标时要注意版权问题，特别是打算公开使用的网站3、选用图标的时候对于一个页面中的图标必须统一风格，如果风格不统一，可以考虑用边框之类的来是视觉效果一致4、魔改结束后要根据自己的过程复盘形成文章，并生成小套路； 完成了什么？1、完成了部分魔改作业第六版；2、优化了主页界面； Reflective你要如何形容今天的情绪？练习冲刺魔改多日，开始觉得疲劳了，可能是因为把其他学习都放下的原因。 今天的高峰是什么？迅速完成了首页的代码修改； 今天的低点是什么？这些天专心魔改，没有进行其他活动，感觉还是会有些厌倦了； Interpretive我们今天学到了什么？1、ps对于前端设计是非常必要而一个技能2、魔改结束后要根据自己的过程复盘形成文章，并生成小套路； 今天一个重要的领悟是什么？专心做一件事是很好，但是要考虑如何大脑更兴奋。 Decisional我们会如何用一句话形容今天的工作？速度开始慢下来了。 有哪些工作需要明天继续努力？1、优化界面；2、增加搜索功能；","link":"/2017/01/31/1368745/"},{"title":"20170129学习纪录","text":"Objective关于今天的课程，你记得什么？1、为网页配图标不当是选图标那么简单，还有调整图片的宽高、图标的放置位置、还有图标的底色等等； 完成了什么？1、完成了魔改作业第六版；2、完成了主页界面的优化； Reflective你要如何形容今天的情绪？通宵回到家状态还是不太对，注意力集中度较低，顶着眼皮完成了图标的选择，要尽快调整好状态继续学习，过年期间有很多任务； 今天的高峰是什么？无； 今天的低点是什么？昨晚通宵，精神及注意力都不佳； Interpretive我们今天学到了什么？1、为了做好前端设计不仅需要前端的html、css、js等知识，更重要的是还有有审美常识及相关的理论；2、为了做出合适的效果，购买一些付费图标是必然的；3、编程对英语的需要，就是像自然语言一样使用，这不是指多熟练，而是指不惧怕英语，能安下心去读； 今天一个重要的领悟是什么？PS是一个一定要学会的技能！ Decisional我们会如何用一句话形容今天的工作？在疲劳中前行。 有哪些工作需要明天继续努力？1、增加搜索功能；","link":"/2017/01/31/1368862/"},{"title":"20170130学习纪录","text":"Objective关于今天的课程，你记得什么？1、搜索栏的布置分为两块，输入框和输入按钮，和一般的输入框是类似的；2、通过ransack可以实现搜索功能；3、ransack实际上就是一个函数，通过相关参数可以实现相关的功能；4、search的结果是在新建的search.html.erb中实现的；5、在搜索栏中的搜索框可以通过新建页面而方式，也可以通过直接在navbar页面中添加的方式来实现；6、在搜索结果中排序的功能我还没有解决；7、flash的显示在controller中使用的代码和view中显示的代码不同；8、主页navbar固定的代码这次没能实现；9、搜索关键字高亮的功能也没能实现在扩张至title外的范围；10、will_page的有专门的美化标签显示语句； 完成了什么？1、完成了搜索栏的功能；2、为主页的几个分流链接设置选项； Reflective你要如何形容今天的情绪？状态有所恢复，但是母亲生病了都不能够安心学习，希望目前的病情快点好吧，看着年纪大的父母身体经常出问题，觉得作为子女的更应该提高解决各种问题的能力，包括父母的问题； 今天的高峰是什么？读了几篇同学的教材后很快就完成了search功能的设置； 今天的低点是什么？任意关键字高亮功能和搜索后界面排序功能试了一下午还是没能实现； Interpretive我们今天学到了什么？1、做东西的时候先把功能和基本界面做出来最重要，之后在这个基础上不断快速迭代就好，而不应该某个功能已经实现后再不断扣小细节，这些应该都是后续的事情；2、那些通过meetup进行了线下交流的同学明显学习的效率更高！3、check别人的页面需要同查看网页的源代码结合在一起更能加强学习效果；4、对于魔改的内容一定要复盘形成自己的高频小套路； 今天一个重要的领悟是什么？独自经历了魔改后，感觉留存率不高，一定要通过ORID甚至是meetup的交流形式来固定自己的知识； Decisional我们会如何用一句话形容今天的工作？状态自然恢复，效率开始回升，但是发现比赛已经截止了~ 有哪些工作需要明天继续努力？1、复盘整改魔改过程；2、学习笑来老师的公开课；","link":"/2017/01/31/1368941/"},{"title":"2017年第04周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是google的check和查看源代码功能，这个功能相当于一个“写轮眼”，让我们看到前端高手没都运用了那些手法和套路，这就为我们把所以的网页打造成了一个实实在在的案例库，为我所用。 2.“本周遇到最大的坑”本周遇到的最大的坑是在魔改大赛的过程中过于追求细节，具体地说就是在完成一个功能后太纠缠于页面和代码细节，这些应该在完成基本功能后再了做，就是must和should的问题。","link":"/2017/01/31/1369177/"},{"title":"《1.30 上海线下meetup两篇文章》读后心得","text":"Objective关于他们的这次meetup，你记得什么？1、rails101是基础，要多加练习；2、做产品一定要完整，这个是大前提；3、招聘网站后会有购物网站擂台赛；4、团队合作更加能激发个人的潜力，同时是一个内外进补的好时候；5、做的东西一定要复盘，把实作的步骤通过自己写下来能够加深印象；6、一天可以进行多次坐享，每次10~15分钟，这是种大脑放松的方式，也可以提高学习效率和智商；7、不懂就要问，不懂不问又解决不了最后只会成为傻逼；8、提取练习和知识迁移是同时发生的，在通过ORID提取练习获得肌肉记忆后，在其他领域发生相关的事情时自动化发生知识迁移；9、要珍惜目前的学习氛围，通过互帮互学；10、对于产品的功能设定很重要，弄清楚用户想要什么，真正需要什么； Reflective你产生了什么情绪？看到了上海小伙伴的meetup总结干活满满，感觉受益匪浅，仿佛自己也参与了一样。激动之余决定也要尽快开始我自己的meetup，可惜目前还在家放假，节后如果没有人组织就由我来组织大家进行meetup。 Interpretive通过他们学到了什么？1、一定要进行meetup；2、rails101需要多练习几遍；3、实作的步骤需要背下来；4、要学习html及css为后面的课程蓄力；5、做什么事情一定要复盘;6、有太多的知识需要践行，所以需要通过坐享提高元认知能力，然后经常反思自己哪里没有做好；7、在团队合作学习中有很多技能可以提高； 今天一个重要的领悟是什么？一定要多交流碰撞思想，文字版的缺少了太多的信息； Decisional我们会如何用一句话形容这次阅读？点燃了我进行meetup的紧迫感； 有哪些工作需要未来继续努力？1、组织meetup;2、复盘我的魔改；3、加强后面的学习；","link":"/2017/01/31/1369964/"},{"title":"Week1周末分享会阅读心得","text":"提到最多的概念/工具及引发的行为1、提取练习 a、要及时提取 b、练三遍 c、记笔记回忆对照2、学习金字塔理论 a、要多教3、Computer Thinking a、用计算机解决问题的思维 b、将大任务拆解成小任务 c、在实做中寻找资源4、拆解任务 a、must do/should do/could do/nice to do的任务优先级5、用户故事 a、知道全局 b、最少需要的用户数量 提到最多的坑1、admin: @job2、和别人比进度心态3、没有仔细阅读教材4、打字错误5、github两个账户上传错误 对我最重要的要以知识留存率为学习重点，就是说要以输出为重点，比如ORID，但是几个周过去了发现自己没有做到！！总结了“三步学”的方法，以后学习就使用它了。","link":"/2017/01/31/1369881/"},{"title":"20170131学习纪录","text":"Objective关于今天的课程，你记得什么？1、人生三大坑；2、全栈工程师的定义；3、编程在全栈工程师中的占比；4、注意力是最宝贵的资源；5、学习金字塔；6、提取练习；7、知识留存率；8、用户故事；9、任务拆解；10、域名空间的一些规律；11、教是最好的学；12、计算机思维； 完成了什么？1、阅读了第一周的周末分享会分享内容；2、听了笑来老师的五万大课学演讲；3、学习了上海meetup的分享文章；4、完成了几次的提取练习；5、进行了两次坐享放松；6、整合出了新的学习方法； Reflective你要如何形容今天的情绪？经过几天的调整，今天回归了状态，加上通过坐享休息放松，整个人的精神状态都非常棒，期间又出现了久违的心流，看了笑来老师的开学演讲，注入了一股强劲的鸡血。 今天的高峰是什么？看笑来老师的演讲吸取了非常多的干货，另外总结出了三步学的套路。 今天的低点是什么？坐享的时间还是不够，没有调整好心态。，觉得这有点浪费时间，其实这是个提高效率的好方法。 Interpretive我们今天学到了什么？1、要学好英语、学好英语、学好英语！2、要好好坐享、好好坐享、好好坐享！3、要经常写ORID、写ORID、写ORID！4、总结了三步学的套路；5、想到了读得到专栏的一个好办法；6、要不断的积累思想和方法；7、为了注意力要果断花钱还有时间；8、要积极的教人； 今天一个重要的领悟是什么？全栈不只是对编程而言，对人生亦是如此，先要会独立思考，然后有自己的想法，再接着为了实现想法不断学习技能和思想等工具。计算机思维也是如此，首先要用自动化及模块化的计算机语言来解决问题，接着要懂得拆解任务，再着在实践过程中不断寻找资源。 Decisional我们会如何用一句话形容今天的工作？运用合理的方法，开始进入学习的加速度期。 有哪些工作需要明天继续努力？1、复盘整改魔改过程；2、学习Xdite老师的项目管理课程；","link":"/2017/02/01/20170131-learning-record/"},{"title":"编程套路：一个小工具让你简单科学的为网站配色","text":"给大家分享一个小工具——色轮（以12个常用色做成的一个圆轮，圆轮向内每个颜色的明度提高纯度降低，向外是标准色。）通过它你可以为网站设置更加和谐好看的配色。这是我之前琢磨衣服穿搭时候看到的理论，昨天开始做魔改发现貌似是通用的，而且YY老师在视频里分享的paletton.com页面里也有这个工具，估计有的同学可能没见过，所以在此分享给大家 具体使用方法如下：一、邻近色搭配邻近色搭配，就是色轮里相邻的三个颜色区间，或者同一个颜色向内的不同渐变。 二、对比色搭配对比色搭配有对位互补取色、Y字取色、等边三角形取色三种方法。第一种很好理解，下图是后两种。 三、除了这些颜色外，黑白灰三色属于百搭色系，可以毫无违和的安排进去。###最后要注意的是，除了首页外大部分页面貌似还是以白色为主，所以可以再安排一个基本色作为主体，占据首页的主要视觉面积和其它页面的次要视觉面积，这样全站就会给人一个整体感。","link":"/2017/02/01/a-small-tool-allows-simple-science-web-site-color-scheme/"},{"title":"《五万大课的开学典礼--李笑来》心得体会","text":"开学典礼精华内容什么是全栈工程师？全栈工程师就是，长远的来看就是十八般武艺样样精太的IT工程师，但近期就是能掌握解决眼前问题的所需方法的人，哪怕掌握的不够好，但是你能解决问题就可以。好比，外面有几千根几万根木头，你只有六根，现在需要做一个木桶打水喝，而你这六根木头刚刚好可以做了一个木桶，别人有或长或短的的木头，但是他们就是做不出一个木桶。这是如果你在河边你就有巨大的优势。 编程中什么是最重要的？cording其实只占20%，更重要的是其他东西，比如思想、信誉。代码上手以后，其实是很简单的，重要的是要找到实现他们的方法。举了道哥的例子还有TOFE21天突破的例子。 对英语的要求所以中国工程师的玻璃顶都是英语，所以在班级结束要做到只读英语技术文献的要求。编程本质上就是使用fram-work，优秀的fram-work大部分都是国外的人士写的，所以好的英语对于掌握这些工具非常重要。 人生三大坑人生的三大坑是：1、莫名其妙的凑热闹；2、心急火燎的随大流；3、为别人操碎了心肝。 最需要呵护的是什么？注意力，钱也好，时间也罢，都不如注意力重要。我们要养成每天思考如何使用好自己注意力的习惯，用好自己注意力的人才配拥有更好的人生，也只有用好自己注意力的人才能拥有更好的人生。所以，能花钱干掉的事情就不要花时间，而需要注意力的地方就不要吝惜自己的时间。 教是最好的学教别人是最好的学，笑来老师用自己的改作文的事例说明了自己的语法问题是如何纠正的。 分享的学习方法学一个东西的时候先去学习他的历史，并且学的过程中要学一个最锻炼学习能力的技能。 学习过程中需要注意的是什么？不单单要学习代码，更重要的是学习背后的思考模式。 全栈班培养的全栈工程师应该是什么样的人？首先是能独立思考，有自己的想法，具备优秀的学习能力，能为实现你的想法进一步学习任何需要的东西，来实现自己的想法的一种人。学得好不好并不重要，能用上就可以了这样，在用的过程中进步。 我的心得笑来老师，又一次给我刷新了观念，在人生的又一个十字路口边上。这次的课程更新了我的于全栈的理解，更重要的是，他告诉我全栈不是一个终点，而是一个状态，一个能独立思考、有想法，并且为实现自己的想法去学习任何技能与理论的状态。全栈营只是在这个前提下，帮我们按上最初的机翼，并助推我们一把，后面的路全靠自己不断努力，最终的目标是十八般武艺样样精通，当然，你要你是个不断学习的人，在时间的陪伴下，你最终必然会走到这里。这个过程中，我们必须呵护自己的注意力，避免走入人生的大坑，它们是：莫名其妙的凑热闹、心急火燎的随大流、为别人操碎了心肝。我们不要怀疑花钱买时间，我们不要吝惜花时间换不注意力。因为这样我们才能变得更加好，这样我们才能过上更加美好的生活。节约下注意力以后，要不断的用来提高自己的思想，提高自己的思考能力，再之后就是实现我们思考能力的技能，编程。这是一个自动化的工具，在这里他需要20%的比例。而比它更重要而又无需言说的技能就是英语，这个中国工程师的玻璃顶，一定要养成阅读英语的好习惯，这意味着接受国外最新资讯，已经最新知识，最新工具，最新思想，你知道的，这东西对于自由真的是非常重要的一个东西，除非，你不想要自由。自由，是多么美好的东西，但是不能用它来否定当下的意义。好好学习，我们最终总会走上更好的道路。对了，还有一个最重要的东西，就是教，就是分享，就像xdite老师之前说的那样，教不但是最好的学，还是最好的记，笑来老师和美貌大王也这么说过，这真的是非常总要得理论，一定要创造条件用，创造条件教。世间的问题很多，但绝大多数都是自己的问题，而解决问题的钥匙就在我们的脑袋里，是我们的观念、是我们的思想、更是我们面临选择时所遵循的价值观。你往里面放什么，你最终就有什么样的生活。 课程过程摘录什么是全栈工程师?不是你十八般武艺样样都会，那是很多年以后的事情。而是你需要一个木桶，而你手上刚好有六块可以拼成木桶的木板，虽然外面有一万八千根，你只有六根，但是这就够了。cording的比例？Cording的比例只占20%，哪里比特币的道哥举了例子。学习的窍门这是一个所向睥睨的学习方法，学习什么的时候都去学习下它的历史。这个过程中学一个最能锻炼学习能力的技能。最重要的是，这些东西是用来表达思想的。人生三大坑1、莫名其妙的抽热闹2、心急火燎的随大流3、为别人操碎了心肝干不死我的能让我变强要天天看英文文档，英语是中国工程师的玻璃顶。要掌握的不单单是手写出来的代码，更应是背后的思考模式。希望你们从这里出去以后是有独立思考能力的人，是有想法的人，能为实现你的想法进一步学习任何需要的东西。学得好不好并不重要，能用上就可以这样。在用的过程中进步。出tof21天的经历。Reabook projectDemo他们会有若干个实际在跑的项目有同学们参与。所以勾勒的就很清楚了，全栈工程师是那么一个东西，但是十八般武艺样样精太是多年之后的结果，只是一个目标，这样能理解吧，然后呢，在这个过程当中，你去养成肌肉记忆，然后，天天学的是思考模式，解决问题的方法，说明问题的方法，理解了吧？然后呢，我们会创造各种各样的机会让大家去做真的项目，而不是玩具，然后呢在这个过程当中，你去学了思考方式，你能创造东西，然后有的时候不可能一下子得到一个好的东西，没关系，退而求其次你们还能教人，这样理解吧，你教的足够好，对吧，让郑老师给你推公司，对吧，就是这个道理，因为劳务是有价值的嘛，对吧，然后未来呢，会是这样，当当当当，线上有了，还是会有可能请到的，然后这里给大家一个道理，记住啊，花时间让别人弄明白是让自己进步的最好方式，相信我，我在很多场合都说一件事，教是最好的学习方法，你知道像我这种学习精，都怎么学吗？蔡京说，啊，笑来你还真学啊？我说，真学啊，他说他很惊讶。你说这你惊讶个屁啊，我能写本书，这就是我们的学习方法，能理解吗？你以为我学会了我就能写书啊？不是，我边写边学，等我写完了我也学会了，能理解吗？对啊，我们就是这么狠啊。然后呢，正因为这样，所以才能一直比别人强一点点嘛，对吧，因为观念都要变观念都要变，花很长时间去想，如何去教，然后呢，不要以为跟别人沟通那些事情，或则是教别人那些事情，或则帮别人解决哪些问题，是浪费时间，绝对不是。我在讲一个我自己的经历啊。给学生该错误的经历，修正了他的语法。你问班级里的同学，学习第一的问什么问题他都能回答你。帮别人回答问题，解决了很多问题，避免了很多问题。这辈子最宝贵的是注意力，你一天24小时，但是你的注意力只有8小时了，浪费注意力的人还想发财，笑话。爱护自己的注意力。每天想这个事，我们每天都要想如何把自己注意力用好，我以前是不管时间的，能省时间的地方就剩时间。我一工作就打车，别人说你傻，但是我能看书。最后的分享人一生最宝贵的资源是什么？首先肯定不是钱，因为钱是可再生的可以理解？对吧，那么大家就要说那是时间，是这样吧？对吧，因为时间是不可再生的。过去就不可恢复的是吧？对吧？但是今天，我跟大家分享这么多，你可能还应该晋级了，你这辈子最宝贵的是你的注意力，你一天24小时，但是你的注意力可能不到8小时，这样能理解吧？就是你最宝贵的是你的注意力，这样能理解吧？我为什么内心说那些人注定不行？很简单，他把他最宝贵的东西随便花在任何地方，然后他妈他还想发财？做梦吧，能理解吧？然后他们居然成功了，我这种人一头撞死啊，我们天天都得撞死，自卑死了，我操。他们都行，我不行，你听懂我的意思了吧，对吧，所以呢，啊哈，爱护自己的注意力啊，就，天天想这个事，就是我怎么把我的注意力用到最好，对吧，所以我们都不剩时间的，你们听懂了吗，所以许多年前你看我就不管你时间的，啊，天天管理时间，管理个毛啊，注意力才重要，所以要和时间做朋友，这个是大实话你知道吗，一点都不是忽悠人的， 对吧，然后向我们这种人都是这样，从小就这样，啊，能省时间的地方绝对用时间干掉，理解吧，所以，其实今天我经常劝年轻人，有钱干净他妈话，给我花完，这样你他妈才有动力去赚钱，这样理解吧？而且，这是一种对未来的表态，就是我相信我赚的钱使越来越多的，这样理解吧？我就信这个事，我就信这个事，所以这点钱，花，花他奶奶的，就这个，我从小就信，十几年前就信，说实话，大实话，你知道吗，就是我从大学毕业开始，就天天打车，大家说，笑来，你他妈的，浪费钱，我心想没有啊，对呀，我他妈坐车能看书呢，你骑自行车看，试试看，那他妈省钱省时间，注意力确不要了，有毛，对吧，我说的很清楚对吧，当然啦，在那个岁数里我说这样的话我就像傻子啊，不过我也不说，但是后来我不是受益了吗，对把，所以呢，这是很实在的事情，今天不小心给大家灌了很多，但有一点是清楚的，这只是开始，那我以前讲课的时候经常是十天的课，你们第一天就开始放光，我知道你们刚刚下决心重新做人，我看你们能坚持多久，所有的集体都是这样的，而且，我相信这个集体不太一样，为什么，因为你们自己是付出代价付出时间的，最关键的我今天已经提醒你们了，你付出的是你们的注意力，你的注意力，然后你反省一下，你过去浪费了多少注意力，你真反省之后就会对现在的尴尬心平气和的接受了，活该我这样把，对吧，但是你会庆幸的，他妈的，我终于知道了，他们还不知道呢，对吧，所以我一定会活的比他们好，这样能理解我的意思吧，OK，休息吧。","link":"/2017/02/01/the-opening-ceremony-50000-lectures-li-xiaolai-experience/"},{"title":"20170201学习纪录","text":"Objective关于今天的课程，你记得什么？1、做项目要把开发期减掉三分之一用来修修补补；2、做什么事情先要弄清楚做这个事情的成功是什么；3、项目管理是非常重要的一个技能，做什么事情都要用到这个思维工具；4、参加比赛时要切合主办方的想法，这和在外面做项目是一样的；5、好的ppt和demo是项目初期的决定性因素，没有这个基础，后面的都不重要；6、做事情要先把地板铺好，在修主干，在修修补补，真的和房子很像，然后风险大的部分要最先摆平；7、比赛的时候，要记得心理战，这个也是一个技巧； 完成了什么？1、上了Xdite老师春节特别课程——项目管理；2、写了两篇ORID； Reflective你要如何形容今天的情绪？在家干扰大，休息状态不佳，在海南还是要适当的增加午睡才行。这个课程老是被老妈和老姐打断，加上课程含量高，总是上上停停的。 今天的高峰是什么？Xdite老师的课程里提到时项目管理法时，感觉这个就是自己长期缺失的做事的方法。自己往往是先慢悠悠耗，然后后面疯狂加速，XIDTE老师的这个方法把这个时间消耗的方面调整了过来。 今天的低点是什么？容易疲劳，课程总是上上停停； Interpretive我们今天学到了什么？1、做事前要考虑目的及成功的标准；2、要压缩实际时间，通过死线定理逼出自己的能力；3、要继续学习ppt的技能，没事多练练；4、做的东西还是要有市场，这里就要定位主要的用户群体，是主办方就为他们考虑，是客户就为客户考虑。 今天一个重要的领悟是什么？时间管理，还是必要的，主要是对象还是自己，利用死线定理提高自己的时间利用率。 Decisional我们会如何用一句话形容今天的工作？容易疲劳，断断续续。 有哪些工作需要明天继续努力？1、开始学习购物网站内容；","link":"/2017/02/02/20170201-learning-record/"},{"title":"《项目管理　(春节特别篇）》心得体会","text":"课程要点hackathon中的三要素及最重要的一项有三点要素：1、很好的点子；2、编程的速度；3、牛逼的ppt；第三点牛逼的ppt最重要。 定义成功在进行比赛及做任何事前，首先是要定义什么是成功，只有这样才能更好的进行项目和事情； 定义成功之后根据成功排定优先级保留测试时间先做主线、支线砍掉不要的功能 存储时间要存储时间用于排练和排错，对于日常生活中的工作的话就是安排时间进行检查、测试，我回家收东西可以使用这个套路。 选题的套路首先不能选择政治不正确的选题、之后要考虑对主办方的意义，另一还是可以在有限的时间内完成； 如何进行时间规划由于人有死线心理，所以在做事情的时候要把时间砍掉三分之一，用来测试。而前三分之二则用来完成原有的项目企划； 怎么处理这三分之二的时间我会先做地板作业，就是不做会死的东西，然后我再做主要功能，再接着做小功能，再然后修修补补，最后来打磨细节； 项目时间如何分配先把最后可能卡死的部分，也是最大的风险提取出来，最先把他完成，后面则是进行可控性高的内容； 这个时间管理方法同样适用于写文章、写作业、写项目、写报告；ppt真的是一项很重要的技能不论对于比赛，还是项目展示，真都是非常重要的一环； hackathon其实是一个迷你的项目开发过程，它有完整的周期墨菲定律人在紧急的情况下出错率会是原来的三倍； 做项目是要先铺基础、再修细节，最后丢给用户测试总结提炼我们在做事情的时候，比如做项目，先要看看自己有多少时间，然后砍掉三分之一，通过死线定理来设置最后的时间。有三分之二来完成这个事情，之后就要定义对于这个事情来说，什么是成功。在根据成功来排序，将这个时间段划分为三个层次，第一个是地板作业，就是那些不做后面会死的部分，这个通过对成功的定义可以把这个风险提炼出来，在这个阶段完成；第二个是主要的功能，第三个是小功能和修修补补。注意，这里说的是可以上线的产品。最后用前面存储的三分之一时间用来测试和复盘。对于Xdite老师说的排练ppt则是属于为了hackathon比赛而另外安排的时间，不属于这个开发时间；但是，在一般情况下，也可将这个时间安排再这个三分之一里面。最重要的，这个时间管理技巧是rails编程技巧的下一个阶层的技巧，是我们必须掌握的重要技能心得体会这个春节大礼包真是意义非凡，他让我明白技术学习只是起步，在技术之后，项目管理更加重要，他是实际完成一个项目并且取得成功的关键。单单只是有技术能力，并不是取得“成功”的充分条件。你首先需要明确什么是成功，之后根据成功序列规划时间，根据事情的等级来时安排处理顺序，铺地板、修主干、修修补补。好像建房子一样，一点点的完成它。从最开始的可以住，到住的好，这样一步步的丰富这个项目。另外的，这次课程也说明学习是无止境的，一个层次的学习结束后，应该迈入下一个层次的学习，这样才能不断成长。课程摘录今天会和大家揭露我是如何赢得2012年hackathon 冠军的。今天是通过我的比赛经历来告诉大家要如何快速完成一个作品。很好的点子里，飞快的编程速度，牛逼的ppt里面第三个最牛逼。锤子科技就是PPT驱动的企业。demo很重要；Hackathon和好产品是类似的，先有ppt，之后是好点子，最后在合适的时间发布；一定要学好英语、之后要学好ppt，最后在学好ps。如果你要打好hackathon，意思就是你要在十个小时之内，做出一个还不错的产品，等于就是做产品就是一个长型的hackathon的版本，只是我们在这十个小时里面完整走完一个circle，所以为什么我要以hackathon作为这个例子呢，因为听完我是怎么样赢hackthon的，会对你以后自己怎么样控制你的这个项目的这个品质和时间会有很大的启发与帮助。先铺基础，再修细节，最后丢给用户测试；我今天要跟各位分享是说，如果平常做大型的这个项目，你要怎么样控制这个时间，这一\b样可以用在大的中的小的项目，都可以运用这个这样的原理，首先呢，不管是多少时间，假设今天我们要做的这个项目有三个月好了，我是怎么样管理这个项目的时间，首先呢，假设我们有三个月好了，我不管这个项目是要做什么东西，我一定会预留最后一个月的时间，这一个月的时间不能动，也就是说变成，三个月老板给我三个月时间做这个项目，我只有两个月时间做开发，然后呢，我一定会预留最后一段空白，谁都不能动，用来去测试东西，只留两个月的时间，做功能。接下来呢，我会把剩下的那两个月时间切三段，第一段就是地板作业，比如说，就是之后不做会死的东西，我会尽早把它排除掉。接下来呢，再做主要的功能。然后呢，最后呢，才是小小的功能，然后，慢慢修补 。然后呢，最后一段的时间，我有充裕的时间，可以完整的去闪过哪些风险，去把细节打磨到最好 ，所以你看呢，所以我的hackethon也是这样子做的。下午的两个小时的时间是专心的做demo，我已中午的两个小时做界限，然后早上去把最危险的功能和Deploy去做完， 然后下午就是做小的功能和用户的测试，然后我很顺利的就去做deme这个pith,然后完整上线。那这个其实，就是这个找到你自己的这个节奏。通常是这样子的。很多人碰到一个大项目，非常大，他就失去了准则，以为只要猛力做就会到达所谓的成功。但我的做事方法并不是这样子的，我第一个呢，做任何事前之前都会定义，第一个，定义所谓的成功的定义叫做什么？ 比如说，做大项目就是说，顺利完成，然后收到钱，这个就叫做我们的成功。然后呢，如果你做的东西，没有收到钱，这个其实就叫做失败，所以你的金流的东西一定要做的非常好，因为这才叫成功。然后呢，所以我做hackathon，什么叫做成功。成功我发现的定义并不是你做的多牛逼，而是你要让评审认知到你做的这个的价值。要让评审认知到你做产品的价值，也就是你唯有做好的投影片和好的ph，然后让吸引他，接着你的产品的代码才有机会被看见，所以我花了很多时间，花了两个小时就只做这个事情，明明写cord非常牛逼，但是我却选择把最重要的地方放在这里，因为这个东西才叫success。success后呢，我们就可以按照成功的定义去安排我们的进度，那你就可以把对于成功的定义，什么是主线，什么是副线，什么是风险，那你就可以把它排出来，然后你一开始就把这个风险的问题中心抓出来，并且在主干的地方大部分的完成，然后副干的地方也慢慢的修整，那你就会有充裕的时间知道什么是要做，什么是不要做，因为项目它其实是活的，很多人觉得项目是死的，它是项目经理写完的一页纸，或者说，一本的纸，那事实上不是这样子，你在做项目的时候就会发现很多当初的预想和真实的想象其实是不一样的，项目是活的，那你要准确的抓出项目的工时和耗费的人力，这是，其实你是没有办法去抓的，所以你有办法去，所以说你有办法抓的是什么？其实，你只能知道什么叫做成功，那你尽可能的去逼近成功，那我的方法就是这样子。定义什么叫做成功？然后只做must have 和 should have，然后砍掉所有的could have 和 nice to have，唯有当我有时间的时候呢，我再重新排回去做，所以我做的方法就是，不管时间有多长，七个小时也好，一个月也好，然后三个月也好，我一定会先把它砍掉1/3之一的时间，假设我有90天时间做功能，我一定会把那30天砍掉，剩下60天，那为什么我要这么做呢，我也做这件事情呢，我要和你说哦，一般人做项目是这样子的，假设老板有90天的时间，然后和你说要做个项目，那很多项目经理，rd就会跟你说，好的，我们一定做得到，接着呢，他们觉得这个项目很重要，所以不能闪失，所以他们可能会花上，两个月时间，也就是说，60天的时间去专注的把企划书做出来，接着呢，企划书终于生出来，讨论出来之后呢，他们接下来会把这个企划书教给美术去执行，美术把所有的画面都画出来，然后这个当中又花了二十天的时间，注意到原本你有九十天的时间，你用了六十天的时间，再画了二十天的时间，所以你只有十天的时间，可以写代码，然后呢，每次rd拿到这个代码就觉得，fuck，他妈的写不完了，所以呢，然后他就拼命拼命的加班，十天他就自己兢兢业业的加班，结果还是写不完，已经上线了，因为已经有发布会了，没办法嘛，一上线这个代码，千疮百孔，然后消费者就按着按着，就是，就发现烂掉了，然后烂掉了就不行嘛，所以他就只好加班来修复，所以任何新东西上线， 有一些互联网的产品，你一用就知道这些bug非常多，事实上是因为这样子，他们完全没有资源管理的这个概念，然后又是这样一鼓作气的冲，那做了以后消费者反响不好嘛，于是他们就决定又改版，然后改版就又来说，我们再来个九十天改版吧，然后又是这样，这事我们千万不能做，他要花更多的时间写企划书，然后又发生同样的情形，那事实上这种东西就好像灾难一样，那我要跟各位将要怎么样破除这件事情，它是这样的，你有没有发现，当你在，然后要赶报告、写文章，然后写项目的时候，你会发现，当时间不够的时候，你的效率特别高，所以我发现每个人都有这种劣根性，包括我都有，所以我发明的做法就是呢，假设有90天，我就砍掉那三十天，然后和我自己说就只有六十天的时间，你得做完，然后就和我们团队的人说只有六十天，然后大家就会非常紧张，大家就会想办法在六十天之内冲进度，然后到了六十天之后，我就会跟各位说我们还有三十天的时间可以慢慢打磨，他们就会说fuck，但是呢，虽然会觉得我这个人套路很深，但是我们就会有充足的时间把这个东西排好，因为如果你有这么多时间，你也只会把他浪费掉，与其浪费掉，不如你把时间先存下来，那到用的时间，你可以尽情的挥霍，排练的时间、测试的时间尽量的多，所以你可以反复的复盘，而不是把时间都浪费在无意义的加班，无意义的失火与救火，这其实就是我管理进度的这个方法。给各位分享今天的这个重点，今天的重点就是呢，各位不要以为觉得学了rails之后你就无所不能，事实上你下一个挑战，就是当你在做一个比较复杂的项目，包括我们接下来后面可能会交给我们的其他的项目，包括你学习、包括你做事情，包括你参加比赛、其实任何需要时间的东西，都需要这样的时间的这个管理，甚至这个东西都是你个人都可以运用到的技巧，你学到的这个技巧对于你在写cord、安排东西会非常的有帮助。这个是春节前送个各位的礼物。","link":"/2017/02/02/project-management-new-year-special-experience/"},{"title":"20170202学习纪录","text":"Objective关于今天的课程，你记得什么？1、拆解任务的时候一些太基础的必要功能是不需要写的；2、你要写的应该是一些大块一些的功能，主要目的是用来作为开发的备选单元；3、User Story（用户故事），这个名称其实是这个方法的最终目的，你要形成用户故事的列表，一个动作一个算一个故事，而我们所画而图标只是理清这个的过程；4、本课新增了订单这个组件，所以我的猜想是，用户故事不单单是指人，更应该是指角色，也可以说是实体对象，对应的就是model里面的一个对象，我们从用户出发，最后会得出用户会做那些事情，涉及到那些对象，可以说这就是一个抽象的过程；5、fork的意思是分叉，在github上的意义就是只从某个分支生成新的分支，和我们在本地做的git -branch其实意义是一样的，对应的，pull request的意义相当于在github上merge前的确认工作，和本地的merge也是相同的道理；6、git clone这个命令不单是对于github上而repo有用，你本地上的其他专案也是可以运用到的；7、使用cp命令把database.yml.example复制出一份database.yml的目的可能是不破坏原始的数据库，这样一旦改坏了，原始的example还在，不会影响后台的运行；8、做事情要一专多能，这个专就是你的核心能力，也是你用来获取金流的根本；9、xdite老师就是一个技术转型管理的例子，先技术，在带队，再老师，再管理； 完成了什么？1、写了两篇ORID;2、完成了购物网站的任务拆解和用户故事部分； Reflective你要如何形容今天的情绪？哎，在家的干扰真是太大，老爸又会老家去办事、老妈肠胃炎、姐姐话唠，哎哎哎，学习效率虽然比上班高，但是比起自己一个人的周六日还是差远了，在复制的情绪中学习，分心太多次，开始有烦躁的倾向，这个要控制住，看看如何解决这个问题。 今天的高峰是什么？对用户故事有了新的理解。 今天的低点是什么？干扰太大。 Interpretive我们今天学到了什么？1、做任务拆解的时候，一定要拆解到最小可实现功能模块，大模块不行，小功能也不行；2、考虑用户故事的时候，除了用户外，还要额外考虑相关的组件，比如我们例子里的订单；3、must have,是能实现使用的最少必要功能；4、should have,是能拿的出手的功能集合；5、could have是指额外增加的功能集合，就是非必须功能；6、nice to have是具备后能让项目锦上添花的功能、侧重于修饰类，而非实用类； 今天一个重要的领悟是什么？考虑项目的时候，不单单要考虑用户故事，同时还要考虑这个过程中的各个组件及对象，具体就是Model里面要有的东西； Decisional我们会如何用一句话形容今天的工作？干扰太大，断断续续。 有哪些工作需要明天继续努力？1、完成招聘网站的任务；","link":"/2017/02/03/20170202-learning-record/"},{"title":"20170204学习纪录","text":"Objective关于今天的课程，你记得什么？1、要想调用到views里的页面，必须先建立相应的controller,之后才能打开相应的界面，比如welcome；2、下划线开头的页面无需建立controller，但它也是需要在上一条中说到的对象来调用；3、套上bootstrap的步骤有三：1、安装gem；2、修改app/assets/stylesheets/application.css的后缀；3、挂上bootstrap的套件（使用@import套上bootstrap-sprockets和bootstrap）;4、将bootstrap套上全域模板，需要建立common文件夹和生成navbar、footer两个partial；5、建立weicome界面需要通过rails g controller 来生成；6、helper里面定义的是views中会使用到的函数；7、controller中定义的则是定义在调用网页是要在后台调用的东西，一个是网页外的函数，另一个是网页中的函数；8、在helper中定义flashes的函数时用到了Hash变量；9、common这个文件夹是bootstrap专门用来装饰网站的，还是通用的只是bootstrap使用它？10、bootstrap不单有css的内容，还有js的内容。11、bootstrap为assets/javascripts挂上的就是js;12、测试flash的调用是在controller里完成的，再调用也面前进行了赋值； 完成了什么？1、为购物网站项目挂上bootstrap的外套；2、认真学习了flash的功能实现； Reflective你要如何形容今天的情绪？因为母亲身体没好所以就把学习的事情先放一放，晚上睡前心理觉得少了什么于是又拿出来做了一部分，笑来老师说的对，你先做事情，后面的心情理由什么的会自然调整。 今天的高峰是什么？发现自己能完全理解flash的有关代码； 今天的低点是什么？学习时间太少。 Interpretive我们今天学到了什么？1、建立页面记得要建立controller先；2、hash的知识需要复习，try ruby需要复习；3、做项目的时候一定要先定义成功，然后思考什么最重要、什么更重要；4、进入网页前的数据调用需要在controller中写；5、进入网页后的数据调用要在helper中调用； 今天一个重要的领悟是什么？学习是拼图，但是把图拼上的这个过程还是要细分一下的，自己拼出来和参考别人拼出来在大脑里生成的记忆还是不一样的。后一种方法留存率低，所以需要提取练习，前一种也要，但是比后者高效。但学习的过程中还要考虑成就感和持续的问题，所以两种方法的区别就是时间，划定一个合理的时间，如果自己解决不了，就参考别人的方法解决。这个时间主要在于不要影响自己的学习积极性，太执着厌学就不好了。 Decisional我们会如何用一句话形容今天的工作？不要背太多的包袱，每天进步一点点就好。 有哪些工作需要明天继续努力？购物网站的学习进展取得一些进步。","link":"/2017/02/05/1386367/"},{"title":"2017年第05周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的概念是笑来老师五万大课中对于全栈工程师的讲解，即全栈工程师是这么一种人，远期是十八般武艺样样精通，但从全栈营出去则是能独立思考，有自己的想法，并且为了实现自己的想法能去不断学习各种知识与技能的人。 2.“本周遇到最大的坑”本周遇到的最大的坑是学习过程中给自己太多的压力，造成自己产生了厌学情绪，其实只要告诉自己每天进步一点点就好，一点点就好。","link":"/2017/02/05/1386985/"},{"title":"20170205学习纪录","text":"Objective关于今天的课程，你记得什么？1、安装devise并不是只安装个gem那简单，还需要在rails里通过rails安装以及生成user并migrate;2、安装simple_form后同样需要安装；3、安装上述两个gem会在config/locales及config/initializers生成对应的文件，devise的告警信息就存在这里，simple_form的还没有具体探究；4、pull request其实很简单，就是打开要推送的分支，然后pull request并确认地址就可以；5、再一次巩固controller是model和views之间的桥梁，也是我们进入网页的钥匙，也就是说我们实际是通过触发controller来打开网页和调用数据库中的数据的；6、controller、model和views的建立是分开的，且无固定顺序；7、controller和model是通过rails g生成的，views是通过touch生成的；8、namespace是将controller资源放入config/routes的方法，和我们生成的controller是相对应的，也就是说它指明了我们调用controller资源的路径；9、namespace后可以通过rake routes查看routes即路由的清单；10、simple_form的调用需要注明views所属二级路径，比如:admin,@job；11、下来菜单也是bootstrap里的一个java组件； 完成了什么？1、安装了devise并完成了配置；2、安装了simple_form并完成了配置；3、完成了admin的相关页面设置；4、完成了admin/product的CRUD； Reflective你要如何形容今天的情绪？晚上想着取得一点点的进步就好，结果直接完成了part1部分，做事的时候不要给自己太多的压力，不然容易产生厌学情绪； 今天的高峰是什么？根据提示不慌不忙的完成part1的学习内容，而且还不断的加深理解。 今天的低点是什么？还是需要看提示才能完成学习内容。 Interpretive我们今天学到了什么？1、controller和model和views的调用关系；2、namespace的意义；3、simple_form的安装步骤；4、devise的安装步骤；5、进一步理解了routes的路径方法；6、bootstrap是非常厉害的一个组件或者也可以叫做框架； 今天一个重要的领悟是什么？学习上不要给自己太大的压力，告诉自己，每天进步一点点就好从，一点点就好。 Decisional我们会如何用一句话形容今天的工作？洗完澡后学习，如有神助。 有哪些工作需要明天继续努力？争取完成购物网站第一部分的学习，至少完成part2；","link":"/2017/02/06/20170205-learning-record/"},{"title":"错误记录：漏掉&lt;%&#x3D;  &gt;符号","text":"错误日期：2017年2月5日具体情况： 在生成app/admin/products/index.html.erb界面的&lt;%= Product.title &gt;时，漏掉了&lt;%= &gt;符号。导致无法显示product.title的数值，而是现实了字符串。 如何避免： 在views，如果要显示的东西是需要ruby语言计算出来的，一定加入&lt;% &gt;或者&lt;%= &gt;","link":"/2017/02/07/1392480/"},{"title":"错误记录：写入resources时漏了s","text":"错误日期：2017年2月5日具体情况： 在写入routes.rb时，漏掉了resources的s，造成无法正确生成routes。","link":"/2017/02/07/1392491/"},{"title":"20170206学习纪录","text":"Objective关于今天的课程，你记得什么？1、要花钱买时间；2、o2o的本质就是花钱买时间；3、只要方法得到七个月就是一辈子；4、在人生路上遇到坑的话，有两个选择，一个是花时间去处理它，第二个是花钱去搞定它；5、carrierwave的核心是uploader，其他的语句只是明确附件描述栏位，以及告诉uploader和model合作；6、做完carrierwave记得要挂上permit获得权限；7、col-md-6及col-xs-5这种类是用来调整页面显示的栏栅网格；8、rails g 命令后段的字符很多时候是插入地址；9、&lt; a &gt; 插入页面的方法就是使用&lt;% &gt;插入地址，这个可以理解为生成html前，先行进行ruby计算，之后才生成对应的html； 完成了什么？1、观看了Xdite老师的直播；2、区分了admin/user的权限；3、设置了页面的权限及需要登录才能查看；4、设置了商店首页的物品列表；5、设置了物品详细页；6、安装了carrierwave并上传相关图片； Reflective你要如何形容今天的情绪？白天进行part2和part3的时候比较顺利，每前进一点都有很好的正反馈，当进入到后面的时候出现排版知识不足的情况，困惑了好久最后参考了其他同学的作业，自己还是要加强html、css、bootstrap的学习啊； 今天的高峰是什么？顺利完成part2和part3； 今天的低点是什么？最后部分的学习由于排版知识不足卡住了； Interpretive我们今天学到了什么？1、挺高人生效率的一大方法，花钱买时间，特别是重大技能和重大经验的学习；2、carrierwave的工作原理；3、v3.bootcss.com需要加强学习；4、bootstrap里面集成了非常多的功能，是一个非常强大的gem；5、rails g 其实表示的生成一些rb文件； 今天一个重要的领悟是什么？面对一些花时间的大坑，最聪明的做法是花钱跳过去，不要执着于自己处理它，关键的要弄清楚自己的目标； Decisional我们会如何用一句话形容今天的工作？总算跟上课程的进度了。 有哪些工作需要明天继续努力？开始往后的继续学习；","link":"/2017/02/07/1392511/"},{"title":"错误记录：model新增column时没有修改对应的permit","text":"错误日期：2017年2月6日具体情况： 在为product加入image一栏后，没有对应的修改product_params中的permit，导致附件上传失败。","link":"/2017/02/07/error-logging-new-column-model-without-modifying-the-corresponding-permit/"},{"title":"20170207学习纪录","text":"Objective关于今天的课程，你记得什么？1、要在网页里应用views页面的对应地址需要使用content_tag(:i, ‘’, class: ‘’)语句；2、ul里面一般还需要使用li;3、rake db:seed相当于在初始化执行的一组rails console指令；4、rake db:reset是一组重置数据库指令； 完成了什么？1、学习教材上第一周内容的实作方法part1； Reflective你要如何形容今天的情绪？同样是母亲生病的原因，只能抽出一小部分时间来比对学习； 今天的高峰是什么？学习的过程中不断理解新的内容； 今天的低点是什么？学习的时间太少； Interpretive我们今天学到了什么？1、想预先执行的rails console代码可以放在seed文件里面执行，或者自己使用远端rails console指令执行；2、好的代码，不单单是能实现相应的功能，还要具备简洁、可扩展以及便于前端修正的功能； 今天一个重要的领悟是什么？不能光执着于自己完成项目，在这个基础上也要对比学习，看看自己有什么做得不如别人的地方，之后ORID将他们变成自己的内容； Decisional我们会如何用一句话形容今天的工作？学习进步一点点； 有哪些工作需要明天继续努力？抽时间学习学多少算多少；","link":"/2017/02/12/1410887/"},{"title":"20170208学习纪录","text":"Objective关于今天的课程，你记得什么？1、*div style=’height:100px;’*的指定样式的方法；2、按钮功能的link_to设置方式；3、navbar-nav的加入元素的方法；4、thumb这个属性貌似和图片格式相关，需要加强学习； 完成了什么？1、学习教材上第一周内容的实作方法后面的方法； Reflective你要如何形容今天的情绪？同样是母亲生病的原因，只能抽出一小部分时间来比对学习； 今天的高峰是什么？学习的过程中不断理解新的内容； 今天的低点是什么？学习的时间太少； Interpretive我们今天学到了什么？1、并不是所以的css效果或者说样式效果都是需要在css文件里面设定的；2、boostrap提供能庞大的功能库，这部分知识一定要深入学习； 今天一个重要的领悟是什么？学习的过程中保持一定的推进速度能提供非常大的持续的快感，这和破解难题的快感是两类，如果觉得自己采用破解难题的方法走不下去了，可以使用这种方法多进行即便来提高自己的自信心； Decisional我们会如何用一句话形容今天的工作？学习进步一点点； 有哪些工作需要明天继续努力？抽时间学习学多少算多少；","link":"/2017/02/12/1410894/"},{"title":"《从新手到胜任者》心得体会","text":"##课程重点###德雷福斯模型任何工作都分成了五个等级：新手、高级新手、胜任者、精通者、专家，其中专家占1%、精通者占10%、高级新手占超过50%，剩下的是新手和胜任者；###业界知识行业内，除了BAT需要的精通者及专家比较多外，大部分的公司在A轮、B轮以下的需要的都是高级新手，也就是说基本基本不需要架构能力；绝大多数的从业者，水平只有高级新手；通过练习专家设计的高频小套路，你不需要4000小时，只需要400小时以下，就可以达到高级新手的水平。###各个阶段的年限第1年：新手（初级工程师）；第23年：高级新手（工程师）；第35年：胜任者、精通者（资深工程师、架构师）；5年以上：专家（大神）；###新手没有什么实用知识，需要有人带一年，在工作中只能透过简单的模仿来锻炼自己，处于SOP模式，透过输入X =》 Y模式来学习###高级新手经过带的一年后不断积累经验，业界内大部分是这种人，而且很多人一辈子都跳不出这个阶段；具备一部分基本规则知识，能通过基本知识去解决基本问题，非常想能够快速找到解决问题的答案，对于技术细节缺乏兴趣与了解；###胜任者能完成基本问题，能够将知道的规则组合成模块，并调用模块来解决问题，能够独立解决遇到的及未遇到的问题或者问专家；###精通者能够形成架构与方法，能够判断大部分情况的可能性并提出针对性的解决方案，即能处理大部分bug，整体视角思考，熟练运用Pattern；###专家具备专业直觉，推进该学科前沿，跨领域融合创造新的火花；###全栈营我们是精心设计的高频小套路，完成job_listing相当于完成了新手到高级新手的一半路程了，后面完成购物网站后可以达到高级新手的水平，所以更需要我们的精心学习。###魔改大赛魔改大赛相当于一次提取练习，看上去虽然是学习css和html，但它对于我们学习的整个内容都是一个很大的提取练习；###几乎绝大多数的工作，不会超过胜任者阶段； ##个人心得该模型提供了一个专业学习的拼图线路，让我了解了一个专业内的修炼道路，也让自己明白了进入一个行业已经深造的门槛，更重要的是明白通过全栈营的学习我们能够达到的高度，已经明白后面的课程所需要花费的时间和心血。 ##课程摘录Job lishting试一次提取练习；为了锻炼大家独自解决问题的方法；今天要讲10000小时的由来；首先说一个人要成为专家需要多长的时间，一般人说需要5年，之后假设每天上班八个小时，一年工作250天，一年有效小时是2000，五年后就是10000小时，后面大家以讹传讹变成了需要进行10000小时的专业训练，这是Not true；10000小时这个定律，在计算机领域五年可以变成专家是真的；接下来我会和大家解释一个东西，德雷福斯模型，借由这个模型，大家可以更清楚，程序员的世界，编程的世界的level属于什么样的历练和历程。德雷福斯模型：新手（Novice） - 经验很少，或只是没有经验的人 - 打算找到一本绝世秘籍，觉得看完了就可以变成高手 - 事实上他们也只能靠[SOP] - 输入 X =&gt; 得到 Y 高级新手（Advanced beginner） - 了解基本规则 - 会尝试用现有规则去解决问题 - 变成想快速找到能够解决问题的答案 - 对宇宙观不感兴趣 - 教他们基础，还是会被忽略掉 - 至少能够独立解决许多基本问题 胜任者（Competent） - 经验够多到可以把规则融合起来变成模型 - 可以独立解决自己遇到的问题 - 或是之前没遇到过的问题 - 去找答案 - 或问专家 精通者（Proficient） - 可以自己提炼出一般的指导架构与方法 - 可以判断大部分情况的可能性 - 并且针对各种可能性设计解法 - 整体视角思考 - 熟练运用Pattern 专家（Expert） - 可以用直觉去面对未知问题 - 推进该学科前沿 - 跨领域融合创造新的火花 事实上，几乎各领域最多的人数是高级新手，超过50%的人只有高级新手水平； 几乎绝大多数的工作，不会超过胜任者阶段； 精通者的比例大概是该领域的10%； 专家人数大概是该领域的1%以下；","link":"/2017/02/12/1410997/"},{"title":"2017年第6周线上meetup总结","text":"##主题一 两个最###分别发言####我收获最大的概念：德雷福斯模型遇到最大的坑：太拘泥于学习形式####陈俊鸿收获的两个工具：dash工具/google环流；最大的坑：畏难情绪####陈颖君最大收获：专心两个字的意义；最大的坑：离职导致分心了###分别提取中的有效信息####我日行二十英里概念要安装dash####陈俊鸿德雷福斯模型用来定位自己的水平层次，小公司是非常需要高级新手的；####陈颖君和公司的技术小哥交流过，感觉水平也一般，一开始也是需要师傅手把手教，所以我们学习也是能不断减少差距的；发现自己有渭南情绪的时候要及时把自己抽离出来，之后继续前进；","link":"/2017/02/12/1411457/"},{"title":"2017年第06周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的概念是Xdite老师分享的德雷福斯模型，这个概念以前在元学习课上也听Xdite老师讲过一次，但这次和自己全栈学习结合起来后，体会更加深刻，更能理解到他对于个人成长与发展的意义。 2.“本周遇到最大的坑”本周遇到的最大的坑是太拘泥于学习形式，因为母亲生病的缘故，不方便用电脑学习，等到周日了才意识到，练不了可以用手机多看几遍教程啊。。。","link":"/2017/02/12/2017-6th-week-summary/"},{"title":"20170212学习纪录","text":"Objective关于今天的课程，你记得什么？1、巩固了德雷福斯模型；2、了解了业界的豆知识；3、知道了dash和google环流这两个工具；4、知道了在裸辞这件事情上自己并不孤单；5、不要有畏难情绪；6、技能进阶路线； 完成了什么？1、Xdite老师的豆知识讲座；2、组织了一场线上meetup； Reflective你要如何形容今天的情绪？母亲并基本好了，也和父亲汇合了，我也可以开始安心继续学习了，又拉下了一周的课程，得加把劲了。 今天的高峰是什么？和伙伴们第一次进行meetup气氛比较轻松愉快； 今天的低点是什么？注意力集中度没有恢复过来； Interpretive我们今天学到了什么？1、跨界其实没有想象中的难；2、职场的修炼步骤；3、思想的交流相当于一个指数函数，每多一个人就多出不少的量；4、畏难情绪很多人都有、跟不上进度很多人也有，只要明白自己的目的，按自己的节奏来就好； 今天一个重要的领悟是什么？做事情要按自己的节奏来，和别人对比最大的破坏力在于可能打破自己的节奏，而和别人对比的坏处实际上也就只有这一个，所以只要能避免这个漏洞，别人的进步只会成为你进步的指引。 Decisional我们会如何用一句话形容今天的工作？meetup迈出第一步； 有哪些工作需要明天继续努力？保持节奏继续学习，记住日行二十英里原则；","link":"/2017/02/13/20170212-learning-record/"},{"title":"20170213学习纪录","text":"Objective关于今天的课程，你记得什么？1、find与find_by的区别，find_by会返回nil;2、在ROR中，nil表示空；3、form_for这种收集数据作为输入的方式需要在深入学习一下；4、post操作由于需要专递参数，所以无法通过url来实现偷链；5、get操作由于是获取东西，所以可以通过url来获取，所以需要进行权限设置；6、要注意collection与member的区别，我的理解是，member是直属成员，而collection则是关联的对象；7、再次明确，controller是在views和modle中间的载体，是用来响应我们的动作的，包括初始动作；8、要在views里执行的东西是在Helpe里定义的，也可以说显示逻辑是使用helper包装的；9、要对数据的操作是通过在model里定义的，而controller可以理解是搬运工，链接他们的桥梁，包括动作相应参数传递等等，数值计算应放入model中；10、id的每个model都有的东西，而建立关联则是通过XXX_id来把两者之间建立联系；11、对于不明白的问题记下来，然后写一篇专门的解答，这是ORID、报错纪录外的第三种学习纪录；12、前端知识非常庞杂，比起学该应该要多收集、多用，所以在学习的过程中还是需要把重点放在后端上。因为前端学习用才是根本；13、一定要完成基本的作业才去进行创意大赛，功能有限、版面在不断完善就好；14、后面会教大家写文案，这个也是个非常牛逼的技能；15、collection后面要定义使用的方法，而resources默认生成的方法就有了七个，它们虽然同样是四种，但本质上是不同的类型；16、destroy_all这个方法；17、类和集合的方法是类似的；18、= a|| b的意义是，如果a为空，则=b,否则=a;19、include?这个方法；20、组队一定要处理好组队和分工问题，个人强不等于团队强，必须把人员充分组合出相应功能才行，这和单人全栈的意义类似；21、淘宝真是万能，代码、ps一应俱全；22、大部分的操作权限设置时在controller里面完成的；23、.blank?这个方法；24、在往后的几周里我们会学习很多的基础语法知识；25、search使用的也是collection，貌似是把数据集中起来的意思；26、current_*是controller的方法，要在views中使用它，需要在application中通过helper_method来声明一个函数也叫current_*，并且再在其内部使用这个原始的current_*；27、uploar里定义的图片大小语句.thumb及.medium在后面加入.url后即为对图片地址的大小进行选取，如果直接使用.url就是设置的默认值或者在没有设置默认值的情况下是原有图片的大小；28、要根据希望操作的对象及关联关系来生成对应的controller，比如cart的清空操作和cart_item的单一操作则不同；29、method: :delete do ____ 的方法，后面可以是图标或者文字等等；30、GET、PATCH、PUT、DELETE的使用地址是一样的，通过它们本身的方法不同来区分；31、在flash[]复制中，通过#{}可以将变量赋值给提示信息；32、routes其实也表示了参数传递的方向；33、下一部分的课程会不断深入理解model、routing这些技术知识，以及会学习rails的寄信浏览服务；34、Xdite老师打造的购物网站教程其实是一个完整的功能包，以后不论我们需要完成什么网页的功能基本上就可以通过这个来获取相关的零部件；35、人大脑的【工作记忆】一般只有五个空位，所以工作学习中遇到的问题最好记录下来，不然后面很容易忘记掉，之后针对这些问题写出blog，来描述解决方法，就是一个套路和文章了；36、组队技巧：a、找队友 b、分配任务 c、组队编程；37、组队同城尤佳，一个主要负责程序，另一个负责css和找图；38、物品不能重复加入我的实现方法：current_cart.cart_items.find_by(product_id:params[:id]);39、cart貌似是一个块显示；40、+-号修改货品数量功能未实现，后面要思考怎么处理；41、f.submit无method可能是因为推送只有post一种方法吧。 完成了什么？1、基本完成了购物网站第二部分购物车实作的练习；2、听了Xdite老师周一的演讲； Reflective你要如何形容今天的情绪？今天采用结合了拼图理论及日行二十英里原则的学习法学习效率极大提高，总体上还是非常兴奋的，因为老师说的购物车在我看了好像很容易理解，不知道是不是我的错觉。 今天的高峰是什么？很好的理解购物网站的第二部分的内容； 今天的低点是什么？独立解作业碰到了很多未知的知识点。 Interpretive我们今天学到了什么？1、遇到的问题要记录下来，并且写专门的文章来解答和形成套路；2、学习一定要使用劳”逸“结合的方式；3、做项目最重要的是组织能力；4、要以restful的七个方法，model、controller、views为学习的核心框架，其他的都是在这个框架下的扩张；5、学习过程中需要小本子记录很多事情，然后回顾完成后提取，之后就可以删掉了，读书记笔记也可以使用一样的方法； 今天一个重要的领悟是什么？拼图理论及日行二十英里原则不单单能用在知识块上以及按天来使用，同样也可以在一天的学习中运用，就好像我们上学时的课时及休息时间的安排，已经不同学科之间的交换，具体的就是一天可以同时进行两项及以上学习，然后交叉和安排休息时间，如果把我们的大脑比作肌肉，那么这个原理和我们做无氧训练时分组及每组有不同的动作的原理是一样的，如果重复只做一个动作，那么大脑很快就疲劳了，所以我想脑力也是如此。最好是能把左右脑的调用区域安排在一起，更细分的就是把不同大脑活动区域的学习放在一起，或者加上无氧锻炼等等，这就是劳逸结合啊。 Decisional我们会如何用一句话形容今天的工作？尝试融合各位老师的学习法提炼出自己的学习法，发现效率奇高。 有哪些工作需要明天继续努力？完成购物网站第三部分内容；","link":"/2017/02/14/1415389/"},{"title":"错误纪录：1..cart_item.product.quantity","text":"错误日期：2017年2月13日具体情况： 在完成购物网站的数量下拉菜单时将 1..cart_item.product.quantity 达成了1...cart_item.product.quantity,是的下来选项的数字比cart_item.product.quantity少了最后一个；","link":"/2017/02/14/1416391/"},{"title":"20170214学习纪录","text":"Objective关于今天的课程，你记得什么？1、permit一个model时，它对应的对象也会获得相应的权限吗？（指教材中的product_list)；2、token这个保护数据隐私的方法；3、在controller里面定义调用一个网页前的数据钥匙，以后在所有需要调用这个网页前都需要使用这个钥匙；4、find一般使用的是:id来查找数据，find_by则灵活得多；5、@product_lists.each和order.product_lists在使用上还是有所不同；6、安装了awesome_rails_console这个GEM;7、在meetup伙伴的督促下安装了google环聊及skype，这两个远程写作神器；8、class=”col-md-12”这个bootstrap类基本是满屏的意思；9、views页面里基本是以”row”定义一个大块，然后在接着col-md-12内容块，在具体内容；10、li class=”divider”是列表的分割线；11、生成product_list的controller后，在文件里显示的是ProductListController，下横杠去掉了，而且首字母大写，下横杠的意义还需要学习一下；12、SecureRandom.uuid这个ruby随机生成字符串的方法； 完成了什么？1、完成了购物网站第三部分订单实作的练习； Reflective你要如何形容今天的情绪？今天学习比较顺利，多次进入了心流状态，再次对学习上瘾了，保持这个学习的初速度真的很重要，成就感满满的，再一次对自己充满了信心。 今天的高峰是什么？自己能根据教材的步骤大致判断出来下面要如何做，及怎么做； 今天的低点是什么？在查看所有订单时显示相关的物品清单这个功能没能实现； Interpretive我们今天学到了什么？1、领悟了model、controller、views的三层空间模型，用来理解数据流动及关系及动作触发；2、学习上瘾的核心在于保持一定的“过关”速度，还有适当的难度；3、学习到什么可用的新东西要做的第一件事情就是去用，像今天安装的awesome_rails_console花了半天的时间去找来安装，要是YY老师第一次上课分享的时候就安装了能避免很多麻烦；4、抖腿有利于写ORID。。。。。。；5、CURD没事要多默写，不但是记住它，对于理解其他东西也重要，最好每天写一遍；6、查bug的一个方法是将过程中的量的数值通过&lt;%= %&gt;显示在网页里；7、rails g model可以在后面跟着参数直接生成数据项和类型，也可以在后面的migration文件里生成；8、打开网页显示内部链接出错是因为网页在生成的过程中会进行ruby计算把相关变量编程确定地链接放在网页里，而不是用的时候再计算，所以即便说一个因错误无法生成的链接你还没有点，但其实在生成网页的时候这个问题已经发生了，所以无法继续生成网页； 今天一个重要的领悟是什么？####学习方法在周日的线上meetup分享后，跳出了沉迷于坑里的毛病，一段时间不能解出就找方法看后面教材找求。所以之后的今天再一次找到了上瘾的感觉，心流再次源源不断。总结就是，学习的本质目的是最短时间拼上最多的图，独立解出是牢固，但是也要考虑时间成本和情绪成本，所以在短时间获得大量拼图再上orid来巩固和独立解决牢固记忆之间要设定一个平衡点，我现在设置的就是20~30分钟，不能忘了学习的优先目的是拼出大图，而后再粘好它，而不是反过来。然后，进入心流表示状态好，所以在这种情况下就不用采用劳逸结合的学习方式，因为那会打断心流。两种方式视状态而定，没状态的时候小步快跑，有状态的时候直接飞，具体情况可以根据是否能进入心流来调整，另外，貌似古典音乐更容易帮我进入心流，而the piano guys只能调动我的情绪而不能让我专注做事。 ####编程知识三层架构空间模型，用来理解程序非常好用 Decisional我们会如何用一句话形容今天的工作？不沉迷与坑里后，又找回了获得上瘾及进入心流的方法，高效学习； 有哪些工作需要明天继续努力？1、完成第二周的学习内容及复盘；2、争取完成第四部分的学习；","link":"/2017/02/15/20170214-learning-record/"},{"title":"20170215学习纪录","text":"Objective关于今天的课程，你记得什么？1、豆知识，指的是零散的知识；2、GitHub提供了Project的管理工具；3、建立Github的Project的基本套路是：用户故事、功能实现、界面美化、已完成项目；4、有@符号的变量可以用来传送，没有@符号的变量只能在当前本地使用比如当前的controller；5、在ror中，实际上有三种语言存在，ruby语言、rails语言、html语言；6、!在变量前表示否定，!=表示不等于，!放在后面表示会改变自身，所以自己定义的函数若会改变自身值则需在名称后面加上!;7、Ruby内XXX?在名称后面表示会返回boolean值，就是true和false的意思；8、find函数执行不下去会卡住显示“couldn’t find order wiht ‘id’ = 1”，find_by则会返回nil；9、find_by的用法是find_by_xxx_and_yyy_and_zzz….;10、但是为了维护是排错方便一般不操过两个；11、.find_by等价于.where().first;12、如果没有first查找不到的话会返回【】；13、ruby方法.blank?能将””,[],flase三种情况转化成统一的flase方便逻辑的执行，与避免一些坑；14、alias为同名函数，用来为命令制定其他名称用，程序员在工作室为方便自己使用通常会为一些命令设定自己的alias方便自己使用；15、在command line里面输入alias可以查看同名命令的情况；16、command + 回车可以不改变当前光标后内容而新建行；17、有的命令在ruby和rails中都有，比如create;18、有的命令只在rails里有，比如build；19、link_to表示生成一个通向某对象的链接，需要参数（）是要告诉程序这次回圈要制定到那个具体的对象；20、self这个在Model里面的对象；21、台湾的物件和我们的对象是一个东西，都是object的译名；22、build的进阶用法,create:@order = current_user.orders.build,替代@order = Order.new @order.user = current_user;23、find的进阶用法,show: @order = current_user.orders.find(params[:id]) 替代 @order = Order.find(params[:id}) if @order.user != current_user redirect_to root_path end;24、上述的原方法其实已经获得了order，之后再进行权限验证，第二种方法就避免了获得order，而是相当于先进行了验证；25、在设计购物车时，应该使用find_by而不是find，因为会卡住；26、command + R 是清屏快捷键；27、在rails内，!号放在后面会返回ActiveRecord::RecordInvalid；28、AR内XXXX！表示执行method有可能rails error，比如，.save不成功会直接刷新页面，.save!则会提供错误信息；29、上述方法在debug时好用，但是生产中不要使用，避免别人发现系统的漏洞，而且会出现505报错；30、对象多，以及他们之间的关系没有建立好也是可能保存不成功的；31、学习了二十五种语言的牛人和学程序的不知是一样的，都是语言，一个对人，一个对机器；32、a.创造环境，用身体记忆 -&gt; 跟着rails 101练习；33、b.跟读 -&gt; 练习多遍；34、c.开口说 -&gt; 用起来，jobliting,JD-stroe；35、d.别被文字绑架 -&gt; 不要拘泥于程序语言的细节；36、学有余力可以学习rails 盖(gai第四声)；37、目前课程只用到CRUD比较麻烦部分就是VIEWS部分需要用到CSS/HTML。所以不要纠结语法到底怎样用，实在不会没关系；38、session不会很正常；39、&lt;%= %&gt; &lt;% %&gt;里面的是ruby语法吗？40、model下的是rails语法？41、views是html？42、还是是上述的成分混合？43、ActiveRecord就是rails用的库； 完成了什么？看了YY老师关于豆知识的研究及学习了豆知识及项目管理。 Reflective你要如何形容今天的情绪？豆知识非常庞杂，学习的时候记忆量大且无法建立关联，非常痛苦。 今天的高峰是什么？发现YY老师讲的很多知识点自己之前其实已经理解； 今天的低点是什么？记忆量大大脑感觉到了成长的不适感； Interpretive我们今天学到了什么？1、编程的本质是developer而不是学习知识手段，就像做菜你不会自己种菜，用电脑不会自己焊电路一样，只要能用不管是自己琢磨出来的，还是借鉴别人的都行，站在别人的肩膀上在编程界特别重要；2、需要学会区分出代码中ruby和rails的语句分别是那些；3、CSS/HTML要用的时候去w3cshcool上或去bootsnip或者检查其他网页的方法来查就可以了，这就是高频小套路；4、学习时不要尝试搞懂超出自己范围太深的东西，这样可以防止挫折感； 今天一个重要的领悟是什么？####学习方法在不能确定自己是否能进入心流状态的时候还是先使用劳逸结合法，之后再调整； ####编程知识使用数据化的视角去看views及网页背后的东西，就能非常的清晰明了； Decisional我们会如何用一句话形容今天的工作？零散知识太多，记忆有些吃力； 有哪些工作需要明天继续努力？休息一下，看看适度学习；","link":"/2017/02/16/20170215-learning-record/"},{"title":"20170216学习纪录","text":"Objective关于今天的课程，你记得什么？1、session和cookie的工作机制；2、query的工作原理；3、form_tag的实用意义；4、params这个传递的参数的意义，以及获得的几种方法；5、routes的规则；6、rakoe routes生成的列表的三行分别代表了方法地址，url，对应的controller；7、routes里面有和没有s的区别，没有则少了index;8、ruby的parse这个转换代码的方法；9、params也可以用来传数组；10、ruby的.split这个分割方法；11、传递参数时可以加入筛选条件，比如（”total &gt; ?”, params[:total]）;12、传递参数名称只在传递时使用，所以可以自己灵活设定；13、_url和_path的意义是一样的；14、hash复制的另一个方法 :XXX =&gt; 值；15、在routes甚至方法时比较灵活，比如：get “/foobar” =&gt; “welcome#index” 可以加上:as =&gt; ‘zoo’ ，也可以写成“/foobar/:a/:b/:c”;16、params的来源可以，controller,views，地址后，表单里，理由里；17、通过admin:: 可以把controller拆分成两部分； 完成了什么？听了ihower老师的直播 Reflective你要如何形容今天的情绪？昨天记得东西太多，今天大脑有点厌学了，因为晚上要听直播，所以没有安排太多任务，晚上听了ihower老师的直播，明白了很多以前不明白的东西，感觉基本打通了现阶段的一些内容，特别是将sesiion和cookie时，把一个困扰心中多年的概念给弄明白了。 今天的高峰是什么？ihower老师直播的内容很好的理解吸收了； 今天的低点是什么？昨天强记的内容太多了，大脑今天有点厌学； Interpretive我们今天学到了什么？1、routes的使用方法；2、params的传递方式，及利用原理；3、rake routes里面的元素使用方法；4、query的方法；5、session和cookie的原理； 今天一个重要的领悟是什么？####学习方法缺乏学习动力的时候，一定要找一个学习的内在驱动力，它有两种，理性的和感性的。理性的是意义，感性的是能调动你奋斗平博一直的东西，老罗的历史演讲就是这个感性的内在驱动力。 ####编程知识query真是牛逼得不得了的一个工具，打通了数据显示的关卡，下一步就是进一步掌握params的传递方法； Decisional我们会如何用一句话形容今天的工作？低谷期中寻求突破，学习进度似有小成； 有哪些工作需要明天继续努力？完成购物完整的学习；","link":"/2017/02/17/1426149/"},{"title":"20170217学习纪录","text":"Objective关于今天的课程，你记得什么？1、新建的mailer这个新对象；2、GEM letter_open；3、GEM aasm；4、状态机这个概念，本质上只是一个存储状态的列及相应的转换触发命令；5、deliver!是打开新页面的命令；6、event为事件的定义； 完成了什么？完成了购物网站的课程学习； Reflective你要如何形容今天的情绪？在家里还是干扰太大，学习始终无法进入状态，还好还有几天就不在家了； 今天的高峰是什么？状态机这一块很好的理解了； 今天的低点是什么？学习状态屡屡被老姐打断； Interpretive我们今天学到了什么？1、站内信；2、状态机；3、event的设定 今天一个重要的领悟是什么？####学习方法学习环境真的很重要； ####编程知识状态机这个机制是非常重要的一个工具 Decisional我们会如何用一句话形容今天的工作？哎，效率低下。 有哪些工作需要明天继续努力？休息一下。","link":"/2017/02/19/1432581/"},{"title":"20170219学习纪录","text":"Objective关于今天的课程，你记得什么？1、model里面的event和一般方法一样可以调用，而且调用时在时间后增加!不影响使用；2、路径的调用在任何一个views里面都可以，知识要弄清楚自己所使用的路径，还有需要传递的参数；3、rake routes里面的:id是说要传递参数，但是并没有指明具体需要传递那个参数； 完成了什么？独立完成了第三周的作业任务 Reflective你要如何形容今天的情绪？今天情绪平稳，虽然练习断断续续，但是能自己把作业给解出来，而且过程思路清晰，很高兴自己开始能融会贯通了。 今天的高峰是什么？独立解作业的时候思路非常清晰，并没有之前的那种绞尽脑汁的感觉。 今天的低点是什么？练习量还是太低了。 Interpretive我们今天学到了什么？1、通过看广州伙伴们的meetup分享学习了几个实用的快捷键和atom功能；2、routes是动作的启动方式；3、gem和packge的很好的工具，有时间的时候可以去多探索探索；4、学到好的工具一定要第一时间拿起来用，要成为一个“工具癖”；5、做网页的时候要用运算想象力，想象自己要实现的功能具体操作的时候是怎么样的； 今天一个重要的领悟是什么？####学习方法要学着自己写教材，教就是最好的学，而写教材是教当中的第一步，也是和写作相结合在一起的一步，可以理清自己的做事步骤和套路 ####编程知识理解了routes的本质，想实现动作或者打开网页的时候，就是通过routes来定义这个过程的触发链路的。 Decisional我们会如何用一句话形容今天的工作？感觉自己的思路清晰了非常多。 有哪些工作需要明天继续努力？完成购物网站的学习；","link":"/2017/02/20/20170219-learning-record/"},{"title":"人在选择价值体系时的自由意志","text":"工作五年来第一次休了探亲假，加上春节还有节前休的年假，赋闲了一个月，仿佛这个假期结束自己又要去上学似的。工作后一度受困于自己的狭隘，觉得退休前不会再有这样的假期了，即便这明明是自己一直所拥有的权利。表面上可能是舍不得绩效，也可能是听不得议论，还可能是放不下工作，但细想还是因为无知，无知有时挺可悲的。 在和平年代，大部分时候无知是幸运的。不用担心人工智能发展是否会造成低价值劳动淘汰、不用担心货币放水是否会造成明年经济萧条、不用担心大陆板块运动是否会造成周边地震带活跃，更不用提大过滤器这类宇宙假说了。工作生活之余，打打机、喝喝茶、追追剧，借由已出现的没出现的各种消耗时间的利器，人生很快就过去了，即便天塌下来砸到的也都是别人，自己的世界比碳十二还稳定，和自己观念相左的全都是不正常的。信什么不重要，信很重要，自信尤其最重要。 安慰剂作用的前提是患者不知道那是安慰剂，但很多时候，即便戳穿了安慰剂的本质，有些患者不仅继续服用甚至疗效不减，这是个有趣的“信”的现象。得补充一下，只有与现代科学不冲突的安慰剂才可能有这样的效果，乔布斯就是信过头去见他的神了，他究竟是否求得解脱了呢？这真的很难说。所以，请谨慎服用。 安慰剂的心理基础是“自证预言”。今天来点，明天饭多吃了两口是它起了作用，上楼气少喘了两口是它起了作用，世界比昨天光明、宇宙比昨天和平也是它起了作用，尽管可能是菜少了所以多来了两口饭，也可能是上楼的时候步子迈小了所以少喘了两口气，更有可能宇宙一直和平今年恰好是太阳黑子活跃年而上一个耀斑的辐射今天刚好抵达。但这些都不重要，安慰剂就是牛逼，这些最差也是它引发的蝴蝶效应。一切支撑我观念的统统拿来、一切不合我观念的统统走开。通例孤例从来不缺，缺的只是安慰剂这类药。 如此灵药也不是人人都能享用的，那些性格里带有怀疑精神的倒霉蛋就没这个福分。别说安慰剂了，他们连自我都怀疑。倒霉蛋大体分为两种，先天的和后天的。他们的生存状况大体上差不多，真要细比后天的要惨些，是倒霉蛋中的倒霉蛋。比起一开始就不吃无效药的那些，他们乐乐呵呵的从众吃了大量安慰剂，产生了各种幻觉，萌生了各种希望，不断调整配方和计量，直到后来产生了怀疑火苗。有人遮蔽了火苗、有人烧掉了些观念、有人烧掉了知识体系、有人烧掉了价值体系。 古今中外的大哲，无一例外都是在不断怀疑中或建立或重建自己的价值体系，加上对世界的理解、对人的定义，最终构成了独有的哲学体系，或自立门户、或再开分支。就像每一位大哲都怀疑了先人一样，他们也成了被怀疑的先人。带点怀疑的精神，探寻每棵体系大树的深处，在根的地方是叫第一假设的东西。面对着这个最值得怀疑的东西，不免心生疑惑，难道这帮倒霉蛋在怀疑完自己和先人后，又抛弃了怀疑精神，造出了新的安慰剂抚慰自己，整嗨别人？ 在其背后不论是感悟了天道的、还是面见了其神的，统统都不是纯粹的倒霉蛋。这也很好理解，一切怀疑的尽头必然面对的是无尽的虚无。内心不够强大的总要找些外在的力量，最终自嗨嗨人，这就是宗教性的根源。那纯粹的内心强大的倒霉蛋一般怎么干呢？他们会为自己的虚无赋予意义，形成各种的主义。维基百科解释“主义”一词如下，代表理念或有完整体系的思想和信念，也可视为实现不同目标的不同方法。既然是方法，就不是真理。感性的体悟也好，理性的选择也罢。本质上都应是个人选择，即便你体悟出了东西还面临着选择是否相信，选择相信则是前者，选择不相信则是后者。区别只是前者选择给自己喂安慰剂，后者选择直面冰冷的现实。 卢梭写到：“人生而自由却又无所不在枷锁之中。”在很长的一段时间里一直不明白这里的自由究竟是什么？是自由去死的权利吗？可有的神经病和犯人连自杀的权利的没有啊。现在看来，它可能指的是人在选择价值体系时的自由意志。任何选择都是有代价的，机会成本外要死不少脑细胞。而那些把自己交给命运而不做选择的大多数，其实也算一种选择。一种非常幸运的选择，首先赶上了个好时代，其次少了一个终极大问题，最后获得了不少的安慰剂福利，而这些正是倒霉蛋们无福受用的。","link":"/2017/02/22/freedom-choice/"},{"title":"20170222学习纪录","text":"##Objective###关于今天的课程，你记得什么？1、安全是编程过程中涉及到敏感信息是第一个要考虑的因素；2、本地的图片无法大量上传到heroku，也就是heroku只提供了程序架构和代码上传服务，没有提供图片上传及邮件发送等服务；3、不同的服务有不同的提供商，编程界天生就是一个相互协作的业界，你用别人的服务就需要付钱，你为别人提供服务就能收钱；4、database.yml这个文件是不上传的，在gitignore里面需要设置不追踪它，我们平时的私密信息就放在这里面；5、教材提供的database.yml.example其实一个可以上传的事例，我们下载以后cp出对应的文件就可以继续使用数据库，通过这样的方式及保护了隐秘信息又保证了程序可以继续运行；6、电脑版微信可以语音；7、azs 3很容易丢失自己的私密信息，一定要谨慎！8、不要将自己的私密信息方法carrierwavr.rb里；9、Figaro这个工具，密码用它管理10、ENV环境变数；10、Github提供了非常便捷和合作可能，具体合作的步骤如下： - step 0 ：找到队友、确定谁做主程，主程复制merge pull request; - step 1 ：添加队友，主程在项目的repo里的setting&gt;collaborators&gt;根据队友的githubid查找队友，并按add collaborators发出邀请； - step 2 ：队友会在自己注册的github邮箱里收到邀请消息，点解view invitation后，可通过Accept invitation接受邀请成为队友，之后就可以在自己的github页面看到以主程名开头的repo； - step 3 ：主程先git checkout master切换到master分支，后把最新的分支merge到master上，例如：git merge story5，之后git push origin master，到服务器； - step 4 ：队友第一次下载项目是由git clone repo地址，之后bundle install，以及rake db:migrate，以后有新的分支都事先切换到master分支，然后git pull origin master，之后生成新的分支进行修改功能。如果列表的栏位发生了变化，则需要调用rake db三兄弟类； - step 5 ：新建分支进行新的功能编写，使用命令 git checkout -b name-function（姓名-功能）； - step 6 ：完成功能并确认无误后，将最新的分支推上repo，git add . git commit -m “功能描述” git push origin name-function； - step 7 ：打开项目repo，选中自己刚刚上传的分支，通过compare &amp; pull request，确认base:master，compare：name-function后，添加描述（可不添加），点击create pull request（副程千万不能点击merge pull request）； - step 8 ：若无冲突提示，则主程可在repo点击 Pull merge页标,点击merge pull request，之后Confirm merge就可以了，若有提示则可在本地修改无误后重新上传分支，也可通过Resolve conflict修复； - step 9 ：修复时会有&lt;&lt;&lt;&lt;&lt;&lt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;master ========三行代码，处理完所有分之后可点击make as resolved。所有完成后会显示Resolved all conflict并点击commit changes,这时和step 8 一样； ###完成了什么？1、完成了一部分安全学习；2、和队友完成了github组队学习； ##Reflective###你要如何形容今天的情绪？经过一晚上的学习，终于解决了核心问题的学习：通过github来合并代码的学习，组队学习过程中收获到了不少的反馈！ ###今天的高峰是什么？明细感觉到组队学习的效果优于个人； ###今天的低点是什么？没有完成后半部分的学习； ##Interpretive###我们今天学到了什么？1、GitHub真的是一个好用的工具；2、mac的一些便捷操作方法；3、通过dash来查看emmet的使用指南；4、当学习的东西涉及到几个角色的时候，最终能同时多角色配合； ###今天一个重要的领悟是什么？####学习方法学习中如果和队友需要分担不同角色，最后在学习过程中，同时开两条以上的线学习，这样不但能知道自己这一步的反馈，也能知道对方是如何做的，更能很好的理解这双方的功能； ####编程知识github的合作功能真的是很强大！也不难理解。 ##Decisional###我们会如何用一句话形容今天的工作？组队学习开始体现收效了！ ###有哪些工作需要明天继续努力？完成第一部分的功能和主页的魔改！","link":"/2017/02/23/1457325/"},{"title":"2017年第07周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是model/controller/views的三维空间模型，这是我在学习过程中尝试去理解关系想象出来的模型，通过使用它感觉一下子明白了，出发，显示，调用这些东西，有时间我还会尝试用它去理解restful。 2.“本周遇到最大的坑”本周遇到的最大的坑是每给自己创造良好的学习环境，放假在家，受到各种干扰，现在后面才意识到自己应该主动点去咖啡厅之类的地方的，而不是被动的在家里忍受注意力的缺失。","link":"/2017/02/23/2017-7th-week-summary/"},{"title":"20170220学习纪录","text":"##Objective###关于今天的课程，你记得什么？1、case with语句用于多分支比较理想；2、admin里面的controller对应于具备valited的对象才能用，因而避免了其它非admin用户执行操作；3、组队学习非常重要，能锻炼人的写作能力；4、一定要去参加商店大赛，这个将来讲作为求职经历来讲；5、ruby中国是中国ruby届的平台，上面有对应的ruby求职信息；6、后期课程讲会分化出两个大方向，一个是面向准备创业的同学，一个是提供给准备进阶更高级的程序员；7、后期会提供简历编写指南；8、在北京的meetup上xdite老师回答了一些就业的问题，费贲将相关三篇的meetup总结发到了共享群上；9、Mailer其实和controller有些类似，可以理解是变异了的controller；10、mailer的启动方式是通过controller，而后再调用相应的页面，使用的语句是OrderMailer.xxxxx（）·deliver!；11、OrderMailer是生成时的命名，不一定要是order也可以是其它的对象；12、ruyb china是一个交流和求职的好网站；13、Orid一定要按时写，一定要按时交； ###完成了什么？1、按照老师的教程，重做了一边第三周作业；2、挺了Xdite老师的第一次复盘直播； ##Reflective###你要如何形容今天的情绪？看了老师的直播，感触自己在组队这件事情上有思想落后了，羞愧之下和感到了广州的Meetup群里面看看还有没有落单的队友，然后进行了组队，要提高干劲才行！ ###今天的高峰是什么？找到了队友！！！ ###今天的低点是什么？没有按计划完成作业任务； ##Interpretive###我们今天学到了什么？1、组队是一种非常有效的学习方式，这是以前的我所不能理解的，一定要积极组队；2、有时间的话要多去ruby各大门户网站逛逛；3、基础知识、项目、合作经验、技术博客这是招聘的硬基础；4、具体组队的时候发现了很多没想过的问题，这正是需要组队的意义； ###今天一个重要的领悟是什么？####学习方法组队不单是学习到好方式，也是现代协作社会要求的硬技能； ####编程知识case with这个分支功能； ##Decisional###我们会如何用一句话形容今天的工作？学习进度有点慢，但是终于完成了组队工作； ###有哪些工作需要明天继续努力？学会如何通过GitHub合作；","link":"/2017/02/23/20170220-learning-record/"},{"title":"20170223学习纪录","text":"##Objective###关于今天的课程，你记得什么？1、程序环境有两种，一种是develop环境，指我们本地开发，另一种是product环境，指上传到服务器上，比如heroku；2、在uploader中，本地调试显示图片用，file，云图片用fog；3、七牛云和阿里云都是国内的云；4、template是计算机领域的模板的意思；5、gitmerge的原理可能是，把相应时间纪录的变动信息合并到程序里面；6、在cart_item里面设置，product_id和user_id而不在product设置的意义在于一个product可以放在多个item里，而不是一个product对应多个item；7、sqtile3和pg分别是developer和production用的数据库gem；8、后面的学习进度会开始放缓；9、编程使用的英语就两百个单词而已；10、gem是套件管理系统；11、助教的工作有时间可以试着申请下；12、学习不用急；13、recaptcha验证功能；14、linodo可以通过阿里云买；15、rails cust这个网站gem网站;16、RubyFlow:Rails的社群；17、Go Rails这个网站； ###完成了什么？1、看了YY老师的直播；2、完成了template的讨论和基本的view、model及controller； ##Reflective###你要如何形容今天的情绪？今晚进入了长时间的心流，不知不觉一晚上就没了。 ###今天的高峰是什么？参照教材迅速完成了template的编写； ###今天的低点是什么？学习到太晚了，没有时间继续完成五张图片的上传这个设置； ##Interpretive###我们今天学到了什么？1、要多到国外的rails社群去学习；2、要注意不同环境的配置问题；3、后面的学习速度会放缓，当时自己要加紧安排；4、在注意力充分使用后，根本不会出现想学这个想学那个都没时间的情况，因为你连思考这个问题的时间都没有；5、项目合作的时候一定要考虑项目进度分配问题，这样能提高总体的时间利用率，而不至于一个人等另一个人； ###今天一个重要的领悟是什么？####学习方法要多泡在相关社群里面学习； ####编程知识根据环境使用不同的gem； ##Decisional###我们会如何用一句话形容今天的工作？还有一周一点的时间，开始真正的攻坚了。 ###有哪些工作需要明天继续努力？完成上传五张图片的功能及七牛云的设置；","link":"/2017/02/24/1461324/"},{"title":"20170224学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、通过_id关联起来的两个量，当通过主键量对关联对象进行赋值时，和主键量对自己的单一量赋值不同，可以进行数组赋值，通过使用【】符号来实现，例如 1&lt;%= f.file_field :image, :multiple =&gt; true, name: &quot;templatephotos[image][]&quot; %&gt;（&quot;请上传5张图片&quot;）&lt;br&gt; 2、可以在主键量中通过 model/templates.rb1accepts_nested_attributes_for ：templatephotos views/admin/template_controller.rb1234privatedef template_params params.require(:template).permit(:title, :description, :price, :version, :proportion, templatephoto_attributes: [:image, :id])end 一对语句进行赋值确认，即对templatephotos赋值前必须先对template的指进行确认；3、bundle install后一定要重启rails s；4、imagemagick是mac的环境工具，而不是rails的套件工具；5、mini_magick是用来进行图片大小调整的carrierwave的相关套件；6、在uploader里面设置的 uploaders/image_uploarder.rb1234567process resize_to_fit: [800, 800]version :thumb do process resize_to_fill: [200, 200]endversion :medium do process resize_to_fill: [400, 400]end 相当于上传时就对图片进行了切割，生成了相应的三个文件，而不是调用的时候进行相应的调整；7、gem有直接作用的，也有作为其他gem的套件工作的； ####遗留问题1、多图上传究竟是paperclip起了作用，还是carrierwave起了作用，还是共同起了作用？2、对变量进行数组赋值时的相关知识； ####涉及资源1、GEM paperclip； ###完成了什么？1、研究出了多图上传功能； ##Reflective###你要如何形容今天的情绪？今天有着明确的目标要完成两个功能，摸索过程相当的烧脑，伴随着强烈的酥麻感，通过不断调整呼吸一步步琢磨，最后功夫不负有心人，结果出来的时候相当愉悦。 ###今天的高峰是什么？通过同学的github和网上零散的资料拼凑出了想要的功能； ###今天的低点是什么？学习过程中有几次因为学习过程的酥麻感过于强烈开了小差。 ##Interpretive###我们今天学到了什么？1、通过同学的github代码和对应的commit可以理清他完成这个功能的步骤，及进行模仿；2、学习过程中大脑的酥麻感越强烈，学习效果越好，这与心理学上的痛苦遗忘定律不冲突，心理学上的痛苦本质上是指情绪痛苦，而非进步痛苦，相反进步痛苦会记忆的更长远；3、gem可以自己去找，不一定要模仿别人的来使用，不过时间有限的情况下，还是模仿来的最快；4、学习的过程最好边学边动手，这样能大大加深理解，对应编程就可以新建一个git分支来实操；5、gem本质上也是一组封装的代码，可以自己写，也可以打开它来自己定制调配； ###今天一个重要的领悟是什么？####学习方法学习摸索的过程尽量调用多的感官，这样有利于理解。 ####编程知识多图上传的方法； ##Decisional###我们会如何用一句话形容今天的工作？初步取得上传多图研究成果； ###有哪些工作需要明天继续努力？部署七牛云的网络图片功能；","link":"/2017/02/25/1464506/"},{"title":"错误纪录：bundle install后没有重开rails s","text":"错误日期：2017年2月24日具体情况： 在进行购物网站创意大赛过程中，在安装完paperclip且bundle install后没有重开rails s,造成显示no method报错。","link":"/2017/02/25/error-bundle-install-did-not-reopen-after-rails-s/"},{"title":"编程套路：ROR实现product上传多图的步骤","text":"##以商店product添加多图为例###paperclip Step 112gem 'paperclip'bundle install 重开rails s Step 2修改app/models/product.rb，加入 123has_attached_file :image, styles: { medium: &quot;300x300&gt;&quot;, thumb: &quot;100x100&gt;&quot; }, default_url: &quot;/images/:style/missing.png&quot; #这一行可不要#validates_attachment_content_type :image, content_type: /\\Aimage\\/.*\\Z/ Step 31rails generate paperclip product image 确认生成的XXXXXXX_add_attachment_image_to_products.rb如下 1234567891011class AddAttachmentImageToProducts &lt; ActiveRecord::Migration def self.up change_table :products do |t| t.attachment :image end end def self.down remove_attachment :products, :image endend 1rake db:migrate Step 4在app/views/admin/product相关页面加入如下 123+&lt;div&gt;+&lt;%= f.input :image, as: :file %&gt;+&lt;/div&gt; Step 5修改app/controllers/admin/products_controller如下 1234private def product_params params.require(:product).permit(:title, :description, :quantity, :price, :image) #:image加入參數 end Step 6图片调用方法 123&lt;%= image_tag @user.avatar.url %&gt;&lt;%= image_tag @user.avatar.url(:medium) %&gt;&lt;%= image_tag @user.avatar.url(:thumb) %&gt; carrierwave（我第一次实操的时候上面的paperclip和这个都进行了操作，所以不知道最后是那个起了作用，因而可以分开实验下）Step 112+gem 'carrierwave'+gem 'mini_magick' 1bundle install Step 212$ convert -version$ brew install imagemagick Step 3123$ rails g uploader image$ rails g model photo product_id:integer image:string$ rake db:migrate Step 4接著Photo中加入關係與mount_uploader photo.rb12345class Photo &lt; ActiveRecord::Base belongs_to :product mount_uploader :image, ImageUploaderend 在Product中也做相關宣告 product.rb1234567class Product &lt; ActiveRecord::Base has_many :photos, dependent: :destroy accepts_nested_attributes_for :photos #之後我們要做nested form，先在這邊設定接受變更Photo底下的attributesend Step 5（这步可不做）在Rails console確認關係 首先需要修正無法在 rails c 讀取到 uploader.rb 的問題: config/appliaction.rb1234567module Artstore class Application &lt; Rails::Application …(略) config.active_record.raise_in_transactional_callbacks = true+ config.autoload_paths += %W(#{config.root}/app/uploaders) endend 接下來在Rails c輸入Product.first.photos應該就可以確認結果，如下結果就是成功，但因為目前我們還沒上傳任何圖片，回傳的是[ ]，而到目前為止圖片上傳功能的Model端設定已經OK。 Step 6設定上傳圖片時，同時切成各種尺寸的圖片供使用 然後編輯你的image_uploader.rb 讓MiniMagick可以用還可將照片切成各種尺寸 app/uploaders/image_uploader.rb123456789101112131415161718192021class ImageUploader &lt; CarrierWave::Uploader::Base…(略)+ include CarrierWave::MiniMagick #設定使用minimagick…(略)+ process resize_to_fit: [800, 800] #圖片上傳後，自動切成你要的size+ version :thumb do #設同時切其他size的版本-thumb+ process resize_to_fill: [200,200]+ end+ version :medium do #設同時切其他size的版本-medium+ process resize_to_fill: [400,400]+ endend Step 7設定.gitignore (選擇性步驟，但建議作) 上傳處理後的圖片自動存放在public/uploads底下，而建議將public/uploaders 資料夾放入 .gitignore，因為commit這些上傳圖片的變更，事實上也不太有用。 123.gitignore …(略)+ public/uploads Step 8修改Controller與頁面 完成以上步驟後，接下來就只要在Controller與頁面加入對應的上傳欄位就可以啦～以我練習的專案來說，是在新增商品的步驟做圖片上傳，所以在Product#new底下，除了原本的@product之外，多宣告一個@photo，並且在product_params的底下允許存取image這個欄位，像這樣： 123456789101112131415 def new @product = Product.new @photo = @product.photos.new end…(略)private def product_params params.require(:product). permit(:title, :description, :quantity, :price, photos_attributes: [:image]) # 配合先前在Product model中的設定，使用nested_attributes的設定方式，通過驗證。 end 然後在對應的new.html.erb，加入該上傳欄位： new.html.erb12345678910…(略) &lt;div class=&quot;form-group&quot;&gt; &lt;%= f.simple_fields_for :photos do |c| %&gt; &lt;%= c.input :image, as: :file %&gt; &lt;% end %&gt; &lt;/div&gt;# 這邊是用我自己在練習的專案作說明，使用simple_form，# 然後是在已有的表單底下，增加額外的欄位，所以用的是fields_for指令，# 而要從本地端電腦上傳圖片，所以是as: :file。 或者你也可以給定圖片所在的遠端URL，來上傳圖片，CarrierWave已經很貼心的幫我們做好整合，也有固定的命名方式，所以只要更改上傳欄位的名稱為 :remote_xxx_url，並在product_params的底下允許存取remote_xxxx_url這個欄位，就OK啦，像這樣： new.html.erb12345678…(略) &lt;div class=&quot;form-group&quot;&gt; &lt;%= f.simple_fields_for :photos do |c| %&gt; &lt;%= c.input :image, as: :file %&gt; # 使用本地端上傳，手動更改type為File &lt;%= c.input :remote_image_url%&gt; # 使用遠端url上傳，使用預設type即可(String) &lt;% end %&gt; &lt;/div&gt; Step 9在頁面中選擇其中一種方式上傳後，專案底下public/uploads/photos/image應該就會有三張不同尺寸的圖片囉～ 之後如果要在頁面中使用圖片路徑，像下面使用就可以指向圖片所在位置把對應圖片叫出來囉～ 1234567 Photo.first.image.url =&gt;&quot;/uploads/photo/image/1/xxx.jpg&quot; # size: 800x800Photo.first.image.thumb.url =&gt;&quot;/uploads/photo/image/1/thumb_xxx.jpg&quot; # size: 200x200Photo.first.image.medium.url =&gt;&quot;/uploads/photo/image/1/medium_xxx.jpg&quot; # size: 400x400#以Photo的第一張圖片舉例。 附录我在实现实现上传和显示是最终使用的是如下的语句 app/controller/admin/templates.rb1234567891011121314151617181920212223def new @template = Template.new @templatephoto = @template.templatephotos.buildenddef create @template = Template.new(template_params) if @template.save if params[:templatephotos] != nil params[:templatephotos]['image'].each do |a| @templatephoto = @template.templatephotos.create(:image =&gt; a) end end redirect_to admin_templates_path else render :new endend privatedef template_params params.require(:template).permit(:title, :description, :price, :version, :proportion, templatephoto_attributes: [:image, :id])end new.html.erb123456...(略) &lt;div class=&quot;group&quot;&gt; &lt;%= f.file_field :image, :multiple =&gt; true, name: &quot;templatephotos[image][]&quot; %&gt;（&quot;请上传5张图片&quot;）&lt;br&gt; &lt;/div&gt; &lt;%= f.submit &quot;Submit&quot;, data: { disable_with: &quot;Submitting...&quot; } %&gt; edit.html.erb12345678910&lt;% if @template.templatephotos.present? %&gt; &lt;span&gt;目前商品图&lt;/span&gt;&lt;br&gt; &lt;% @template.templatephotos.each do |p| %&gt; &lt;%= image_tag p.image.thumb.url %&gt;&lt;br /&gt; &lt;% end %&gt;&lt;% end %&gt;&lt;div class=&quot;group&quot;&gt; &lt;%= f.file_field :image, :multiple =&gt; true, name: &quot;templatephotos[image][]&quot; %&gt;（&quot;请上传5张图片&quot;）&lt;br&gt;&lt;/div&gt;","link":"/2017/02/25/programming-routine-ror-steps-towards-product-upload/"},{"title":"2017年第08周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是通过github去查看其它同学的功能实现过程，之前只知道去上面查看同学的代码，但这周通过做merge的主程后发现可以通过compare去比对代码的过程，进而发现了可以通过clone同学的代码到本地再推送想要了解功能的分支到git上compare比对代码，最后在meetup交流过程中同学们指出直接就可以在commit里面查看更新代码，而不需要clone下来。 2.“本周遇到最大的坑”本周遇到的最大的坑是在加入新的gem后bundle install，没有重启rails s,以前根据教材进行都会进行这一步，但这次创意大赛进行的功能编写就忽略了这一点，花了一个多快两个小时才在stack flow上找到了答案。","link":"/2017/02/26/1474416/"},{"title":"20170226广州线下meetup纪录","text":"##千呼万唤终于第一次参加了线下meetup活动，遇见了不少棒棒的小伙伴，随身携带用来记录的小本也满载而归，废话不多说，直接上干货。 ###技术及工具####gem pry通过binding pry的设置，可以为controller运行设置断点，便于debug和厘清参数关系；####colorpeekgoogle扩张程序，用来获取当前网页的所有色彩的RGB值；####mini-mapatom的packge，类似游戏的小地图，用来在代码窗口跳跃显示部位；####github commitgithub repo中的一个页面，本是用来显示自己程序的commit过程，也可用来理解他人代码及用来学习；####feedlyRSS工具网站，简而言之就是用来关注指定页面更新信息，包含但不限于blog；####笑来搜网友设计的用来搜索笑来老师文章内容的网页工具，相当强大，从此不用翻遍学习学习再学习公众号去找某篇文章，省下了不少的注意力和时间；####《深入浅出rails》作者：DavidGriffithi，讲rails基础知识的书，能补充大量教材上面没有的基础知识；####https://text-compare.com/文本比对工具，可以用来对比错误代码同教材或者其他参考代码的不同；####duet把ipad作为扩张分屏的app，mac os及windows均可配合使用，appstore收费软件，一次性收费100左右；####spectaclemac屏幕程序便捷分屏软件；####GEM cancancan用来配合devise进行用户权限管理的GEM；####存代码的网站有个存代码的网站，便于别人帮你解bug，忘记地址了，回头补上； ###跳坑大法####在学习过程中如果遇到过不去的地方，处理了半天还没有处理产生负面情绪后，就先暂停。可考虑20分钟为限；####学习过程中一定要主动思考，不能理解的地方不用纠结，不能不过脑子就往下走；####设置application.yml中的key和buckt时一定要按照要求的格式一个空格都不差的填写，不然会报错； ###其他分享####把晚睡的时间调到早起可能会收获不一样的效果，在有家人的情况下，家人还没起来也比较安静容易进入心流；####程序员的生活虽然充满热情，但可能不够多彩，可以的话多培养爱好和四处旅游；####暗时间这个指我们可以调用但是实际上忽略的时间的概念；####坐享的时间因人而已，可以早上、中午、晚上；","link":"/2017/02/26/1474551/"},{"title":"20170225学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、在application.yml这个文件有时可能会隐藏，可通过atom自带packge的tree view来把它显示出来；2、打开tree views的方法是，在Preferences中打开packge搜索后，点选Hide VCS Ignored Files框选即可；3、VCS指的是文件管理系统，GIT就是一种VCS，git里就是.gitignore就是设定不追踪那些文件的;4、application文件里的access_key，secret_key,buckt,buckt_domain，这些的写法一定要按照要求的格式一模一样，而不能乱改；5、七年云的上传服务器对于不同的时区有不同的要求；6、使用错误的时候，报错信息里会提示你相应的时区应该使用那个服务处的地址；7、七牛云的store是qiniu，本地的是file,azws的是fog；8、store自动匹配环境的方法： uploader_image.rb12345if Rails.env.development? store :fileelsif Rails.env.production? store :qiniuend 9、gem figaro是把私密信息传送到heroku的gem，因为git不追踪它，所以需要通过这个方法来部署；10、通过compare commit可以了解别人程序升级的步骤；11、解决了为什么修改sqlite3代码位置和加入pg后，不影响locoalhost:3000的运行这个遗留问题；12、Random rambling，随机漫步理论的英语原词；13、heroku重命名有两种方法：一种是通过setting改，然后在iterm中重置远方地址；第二种是在iterm中通过代码重置； ####遗留问题1、figaro的具体传送原理及实现方法； ####涉及资源1、w3cshcool,学习前端的好工具；2、七牛云，国内上传图片的服务工具；3、GEM carrierwave-qiniu；4、GEM qiniu；5、GEM figaro; ###完成了什么？1、购物网站的七牛云的图片上传设置；2、七牛云的注册和设置； ##Reflective###你要如何形容今天的情绪？由于是周末，补了下睡眠，布置七牛云的过程很顺利，也感慨没有想象中的那么难，还是要实际操作了才能知道对于自己真实的难度，但是在部署上heroku上以后还是出现了问题，感觉好像是有预感会出问题一样，没有任何负面程序就开始了处理工作，显示看到网页显示要去查heroku报错，然后发现什么也没有，之后就想到local也可以部署云图片，就去本地设置了，在之后在本地的log发现了问题，并解决了问题，相当开心，debug真是件愉快的事情😁。 ###今天的高峰是什么？在heroku的log查不到问题的时候想到在本地部署云图片来debug~ ###今天的低点是什么？早上赖床，本来可以多编程一小时的。 ##Interpretive###我们今天学到了什么？1、图片部署的本地或者云是可选的，根据需要和实际情况选择；2、rails的env代码为环境自适配提供了可能；3、运行日记是debug非常重要的一个东西！4、理论上来说，只要一个项目开源了，别人就能理解它，根据commit步骤；5、要会看官方的说明，理论上来说，这时使用的最少必要学习途径； ###今天一个重要的领悟是什么？####学习方法好懂得去看官方说明，很多时候官方其实已经提供了，比如heroku的rename操作； ####编程知识环境自适配，gem的以及uploader_image的； ##Decisional###我们会如何用一句话形容今天的工作？进账不如预期，但是意外的发现了debug的一个方法； ###有哪些工作需要明天继续努力？1、参加meetup；2、争取完template的所有功能代码；","link":"/2017/02/27/20170225-learning-record/"},{"title":"20170226学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、YY老师的Logdown上面有上传多图的方法；2、在github上面的commit可以看到程序的merge纪录；3、在atom的文件树里面双击可以直接改文件的名称，命名错误的时候就可以进行相应的改动，而不需要通过rm、touch的方式来重新生成；4、陈俊鸿的客服系统，是通过注册现成的客服系统，然后将代码附上来使用的，收费版的可以客户可以保存纪录；5、崔世瑞通过淘宝买临时VISA卡确实可以注册azws 3的服务；6、danel师兄通过简单的设置，将网页改成了适配手机的版本，貌似是通过我在joblisting里面用过的@的命令；7、resource :post 和 resource ‘post’ 是等效的；8、微信小程序的课程取消了；9、通过API可以实现网站迁移；10、Xdite老师有一版写如何写手机app的，即通过API来实现；11、lino网络可以用来部署服务器、VPN等等网络服务；12、html/css的栅格显示工具； ####遗留问题1、多图上传后，小图点击的问题； ####涉及资源1、gem pry;2、atom packge mini-map;3、text-compare.com;4、google plugin colorpeek；5、网页笑来搜；6、ASS网页工具feedly；7、gem cancancan；8、spectacle分屏工具；9、深入浅出rails作者：David Griffithi 这本书； ###完成了什么？1、参加了广州的meetup;2、完成了template的cart_template_item； ##Reflective###你要如何形容今天的情绪？第一次参加meetup刚入场的时候有些紧张，然而几个问题交流下来发现大家都是热情分享和开诚布公的人，再后来气氛逐渐活跃起来大家开始话题开始各种扩展，有种老有相逢的感觉，愉快的一天^_^。 ###今天的高峰是什么？真诚的分享了很多学习经验。 ###今天的低点是什么？话太多，编程太少。。。 ##Interpretive###我们今天学到了什么？1、回答别人问题的时候要耐心一点，要把被无聊工作耗尽的耐心一点点找回来；2、坐享应该是个愉快放松的过程，下次按胡文静的方法，不设定时间，坐到不想坐久起来；3、站桩这个类似于马步、坐享的锻炼方法；4、将作息调整到早上可能会比较安静且容易进入状态；5、坐享应该在精神状态好的时候进行，因为如果这是刺激大脑皮层生长的一种方式的话，那么他一定是消耗内在能量和外在能量的；6、冥想和坐享应该是两种不同的方法，一个要集中注意力，一个要放空思想，笑来老师说的是前一种，但放松的方式应该是后一种； ###今天一个重要的领悟是什么？####学习方法坐享的应该是一个放松的过程，而不是强制自己进行的； ####编程知识通过gem pry进行断点查找功能； ##Decisional###我们会如何用一句话形容今天的工作？找到队伍了。 ###有哪些工作需要明天继续努力？1、完成template的功能；2、看Xdite老师的直播；","link":"/2017/03/01/20170226-learning-record/"},{"title":"20170227学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、老师的速度是用的影像速度；2、老师后去发展出来的套路是，晚上影像速度，第二天早上精度需要的部分，下午再orid形成套路；3、读书未必要一章一章的读，可以一开始就读感兴趣的地方，这样热情不会被前期的非兴趣章节遏制掉；4、早前新生大学有一片关于读书的文章，讲的是如何通过目录分级阅读的，可以找来看看；5、老师的大脑是晚上右脑工作，白天左脑工作，特别是上午左脑工作高峰；6、要找到自己大脑工作的规律，主要是时间规律；7、数学这类需要理解的学科不能通过这个方法来进行阅读；8、工具书是用来查的，不是用来看的；9、老师一般买三本书，一本用来撕开扫描、一本用来划重点、一本干净的；10、老师一般都会买一个领域的多本书来看，或者找一本经典然后看相关的书籍，之后大量的略读；11、人的大脑能辨别不同的东西，通过这样的比对就能发现那些不一样，进而筛选出那些是一样的，一般一样的就是高频小套路；12、之后老师会提取这些高频小套路，然后多加练习是身体记住，进一步的再总结，再看，再练，重复几次后就能记住了；13、做什么事情没有捷径是说要去走，但有捷径是说最短的路；14、学习之后需要马上去践行，这样就能记住了，不然很容易就忘记了；15、老师最近为了教学去学习了认知科学及认知心理学的文章；16、看书集中看可以解决当前问题的文章，之后去练习，练习后形成自己的系统化方案，之后就能形成自己的系统；17、要对万物保持好奇心，想着要是我要怎么解决问题，这样就能保持对生活的热情；18、不要同时学两个大脑区块的知识，比如编程和跳舞，这样不止没有用、记不住，而且可能会互相干扰；19、老师通过编程的工程管理系统记录自己的工作及代码以及工具资源，每周的时候用他们进行提取总结，每周或每个月做一次复盘；20、要多用多复盘，只要是学习自己用的才能记得牢；21、老师都是图像式的阅读，量大的才片段阅读，解读版的书籍的目的只是让自己快速的了解这个数，减少选书的时间；22、学习全栈营的时候一定要把其他的课程停掉，不然一定会觉得时间不够用； ####遗留问题1、找新生大学分级阅读法文章； ####涉及资源1、《狡猾的学习法》佐藤大和；2、《师傅》；3、GitHub Desktop这个工具； ###完成了什么？1、完成了template的全部功能编写；2、听了Xdite老师的《读书的方法论》直播； ##Reflective###你要如何形容今天的情绪？今天听Xdite老师讲自己的读书法的时候相当激动，自己以前研究过图片式阅读没有成功，因为一直没有碰到过真实的例子，后来听说冯唐老师就是这样的一个例子，但是不知道他的具体原理，今天知道了Xdite老师是另外一个例子，才发现了原来这是真的啊，自己原来做的研究功夫可能没有白做，需要进一步在研究一下，自己能不能也做到，受这个想法影响，整个人感觉鸡血满格。 ###今天的高峰是什么？听Xdite老师讲图像式阅读想到了自己原来也研究过类似的东西； ###今天的低点是什么？没有太多的时间及时将相关知识提取； ##Interpretive###我们今天学到了什么？1、Xdite老师的阅读法；2、通过github desktop这个工具学习代码；3、应对考试可以考虑看《狡猾的学习法》这本书；4、要找到自己的大脑的工作时间规律或则掌握其他方法突破规律； ###今天一个重要的领悟是什么？####学习方法图像式阅读真的是有可能的！ ####编程知识githubdesktop看别人某个功能的代码添加情况； ##Decisional###我们会如何用一句话形容今天的工作？鸡血过量，编程基本功能终于完成了； ###有哪些工作需要明天继续努力？1、完善购物网站基本功能；","link":"/2017/03/02/1493826/"},{"title":"20170228学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、scss的效果不但可以写在application.scss也能写在对应的对象的scss里；2、js的命令没有想象中的那么长和复杂，具体可以看回jd-store的文件；3、可以通过if来为不同的对象选择class效果，具体可以看回jd-store; ####遗留问题javascript的深入学习 ####涉及资源1、YY老师推荐的多图上传的边距设置页面； ###完成了什么？1、完成了show的多图点击显示功能；2、增加了购物网站的课程页面； ##Reflective###你要如何形容今天的情绪？为了研究出多图点击功能研究同学的Github代码花了好长的时间，功夫不负有心人，最终复制功能成功，顺带了解了下heroku代码； ###今天的高峰是什么？完成了多图点击显示功能； ###今天的低点是什么？白天开了五个小时的车，晚上输入了一段时间代码后，最终脑袋当机了； ##Interpretive###我们今天学到了什么？1、git blame按钮和History工具，通过很好的拆解别人的功能；2、github真是的功能强大的网站； ###今天一个重要的领悟是什么？####学习方法git blame按钮加上github desktop简直学习神器； ####编程知识js的代码貌似也是语言，而且好像是在CSS上起作用的？ ##Decisional###我们会如何用一句话形容今天的工作？懵逼中前进； ###有哪些工作需要明天继续努力？1、学习元学习课第一节，补全相关作业及ORID；","link":"/2017/03/02/1493872/"},{"title":"20170301学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、拼图理论；2、成就感；3、刻意练习；4、大脑无法用未知解释未知；5、左脑理解模式和右脑认知模式；6、编程其实是很简单的东西，只是大家的学习方法不对；7、学习是拼图不是登山；8、用登山的方式学习很容易就从入门到放弃；9、学习的过程中最好先把边框拼好，然后再拼内部的知识；10、有的东西不需要知道原理也能用，不如炒菜、学英语、学编程、学钢琴；11、学技能以形成解决问题的方案为目标，是转行的前提；12、法律、哲学这类学科的实例很重要，这就是右脑➕左脑的学习方法，孙雁飞学姐就是一个通过这种方法学法律的实例；13、老师学英语的时候是跟着她的老师念英文的故事书，平时可以通过有美音的mp3来学；14、学习的过程中先以用为主，到达了一定的天花板后，再去补原理；15、最好一次只学一个技能，最多同时学两个想近的技能，不相近的不要学；16、学习的时候，选老师的简单方法就是直接选最贵的；17、老师的读书法不能用在数学，但是拼图理论可以； ####遗留问题1、写篇心得体会；2、完成swift playgroung的learn to code前三关； ####涉及资源1、《狡猾的学习法》2、《千万别学英语》3、《计量经济学》4、《概率论与数理统计》5、《精益创业的MVP》6、费曼学习法7、老师的《多活七辈子这篇文章》 ###完成了什么？1、看了Xdite老师的直播；2、画了副自画像；3、补了篇ORID； ##Reflective###你要如何形容今天的情绪？第三次上元学习课有了新的理解，顾名思义，关于学习的学习，比起之前的两课，现在的元学习课有了更多的实际案例，元学习其实可以理解就是学习学习再学习的缩写； ###今天的高峰是什么？回顾了老师的元学习理论； ###今天的低点是什么？今天不在状态，感觉脑袋蒙蒙的； ##Interpretive###我们今天学到了什么？1、学习其实是理解和记忆的结合，两者相辅相成；2、很多学科是理解的不断推演，这就是逻辑；3、但另一些学科或技能则是需要先记忆，比如语文和英语；4、对两种而言，方式是不一样的，但是一定是结合在一起作用的；5、直接能用的东西还是以记忆为主；6、不能用的东西则可能需要不断推演，比如抽象思维；7、可以这么想，理解是把点连接起来，而点则需要记忆，抽象思维的拓宽就是通过理解生成新的点，而记忆学习，则是先建立点，然后在建立连接；8、对于已有知识，还是右脑的方式更快一些，而唯有的只是只能通过左脑模式来开创； ###今天一个重要的领悟是什么？####学习方法学编程的正确方法； ####编程知识编程还是以先拼凑再理解再优化的工作模式来学习 ##Decisional###我们会如何用一句话形容今天的工作？按老师的要求好好上课，好好写作业； ###有哪些工作需要明天继续努力？1、听YY老师的直播；2、继续补作业；","link":"/2017/03/04/1501673/"},{"title":"20170302学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、pry不断可以断点查看，同时可以进行数据的修改；2、google的搜索比较灵活，没有太多约束主要有以下四点：3、关键词4、简单描述5、不需要考虑文法6、纪录过程；7、File.open()这个命令8、File.join(“xxx”,”xxx”,”xxx”)这个命令；9、rake db:seeds可以运行多次，每运行一次就会覆盖原来的内容或者新增内容，比如product视具体的命令来看；10、在seeds中写入图片，若是用上面的命令则不知道heroku中具体的地址，但是本地可以，所以建议在在上传到heroku的命令中使用open（”url”）的命令；11、image: ___ 等价于 :image =&gt; ####遗留问题1、讲到rails c 查询photo的时候走神了，回头要查回这里究竟漏了什么； ####涉及资源1、gem acts_as_list2、gem pry ###完成了什么？1、看YY老师直播 ##Reflective###你要如何形容今天的情绪？今天工作事情较多，晚上看YY老师直播的时候脑子已经乱了，本来打算继续编程的，发现自己脑子已经透支了，可能是这段时间把娱乐都给压缩了的缘故。 ###今天的高峰是什么？无 ###今天的低点是什么？大脑感觉有些疲劳感； ##Interpretive###我们今天学到了什么？1、google查找问题解决方法的方式； ###今天一个重要的领悟是什么？####学习方法google的自己想要的页面以后并不需要全部都看，只需要看需要的部分就可以，这样可以大大提高效率，而且也是拼图理论学习落实在具体页面上的方法； ####编程知识Gem pry 的blinding过程中可以篡改数据； ##Decisional###我们会如何用一句话形容今天的工作？白天工作耗用了大部分的精力，晚上已经没有多少可用了； ###有哪些工作需要明天继续努力？学习landing page;","link":"/2017/03/04/1501876/"},{"title":"20170303学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、Landing page是有套路的；2、Landing page 的六个要素：一句话介绍产品，使用产品的三个好处，运作原理或制作示意图或制作示意视频，使用者见证或媒体报道，CALL TO ACTION，FAQ/免费注册/退款方式；3、4P：Picture,Promise,Prove,Push；4、Golden Circle：Why、How、What；三个同心圆，第一个是why,第二环是how，最后一环是what；5、形成问卷的三个问题：当你学会了、知道了、买到了XXX，实现了什么之后，你最大的目标是什么？当你正在XXX时，你最讨厌的是什么？当你学了会、知道了、买到的了XXX，你最想做的是什么？6、这些套路复合人类大脑的结构，不是心理结构，而是生理结构；7、台湾的行销相当于我们的营销；8、Golden Circle是激励性领导或者激励性组织的特质；9、Golden Circle应该是独立思考者的思考模型之一；10、Golden Circle是用来写文案时的用语；11、六要素和4p是Landing page布局的安排方式；12、4Phack了人类大脑的决策流程；13、FAQ实际上是用来消除购买者顾虑的，所以一定要预先想好消费者会提出的问题；14、4P这个套路一百多年前的邮件订阅里面就有了，电视购物里面也是一直在用；15、在写how的时候，收集到的信息反过来写就好； ####遗留问题1、去看Golden CircleTED的完整版；2、形成我的问卷，并且发送出去；3、新生大学微博上的一篇关于大脑工作原理的微博； ####涉及资源1、金数据/麦客； ###完成了什么？1、学习了老师的Landing page课程； ##Reflective###你要如何形容今天的情绪？下了班想开始学习课程，才发现需要打印资料才学习，对于没有早点打开课程懊悔不已，犹豫了下，果断出门打印，跟着老师的课程认认真真的勾勾画画，被自己认真的精神感动，感觉这才是自己的安身立命之本，由于以前没有接触过营销的东西，感觉有点懵懵的，一遍下来好像梦游了一样，然后就跳着把重点又看了下，感觉今天到这里了，脑力不足就没有继续了； ###今天的高峰是什么？听golden circle时发现这就是自己思考事情的出发点； ###今天的低点是什么？看营销自己有点懵逼，感觉似懂非懂； ##Interpretive###我们今天学到了什么？1、传播观念和产品的时候，先why，再how，最后what；2、一切的心理学理论本质上都有生理结构作为基础；3、首页是网站的灵魂；4、做生意最重要的不是让用户买你有什么，而是让用户相信你相信什么；5、三个问题在不知识在landingpage上可以用，在商业文案中同样适用； ###今天一个重要的领悟是什么？####学习方法学习课程的时候，也可以采用why/how/what的方式去接受一门新知识； ####编程知识Langdingpage是一切产品展示的核心； ##Decisional###我们会如何用一句话形容今天的工作？有点收获有点懵； ###有哪些工作需要明天继续努力？完成landingpage及赶上orid进度；","link":"/2017/03/04/1505850/"},{"title":"20170304学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、why 就是the purpose多指，完成具体事项后达成的抽象目标，比如自己成为什么样的人，取得什么社会效果；2、How就是The process多指，行为过程中的方法或情绪；3、what就是the result多指，自己要完成什么具体的事，或者作出什么具体的事，一般是个人行为，或者个人任务； ####遗留问题1、问卷分析及landingPage后面的内容; ####涉及资源无 ###完成了什么？1、完成了我的问卷调查；2、理解了三个问题的核心意义；3、卸下了因为参加比赛而引发的表现型负面情绪；4、将拖欠的ORID赶上了进度； ##Reflective###你要如何形容今天的情绪？今天早上看着混乱的家里心情也跟着混乱，内心里一个声音告诉自己该整理为什么，然后另一个声音有问比赛怎么办？然后，在矛盾中做到了电脑面前，要是只有自己的话就不用纠结了，但是既然组了队还是要负责。再后来，队友提到自己也有些厌倦比赛了，自己也反思了一下，发现确实，若一个事情开始让人产生厌倦就该暂停一下。之后，和队友袒露心声，发现大家都被比赛弄乱了生活，于是决定暂停进度，不做刻意要求了。接着下午，学习的热情又回来了，比起目标，进步更容易带给我们快乐。 ###今天的高峰是什么？理顺了Xdite老师设计的这三个问题后面的核心； ###今天的低点是什么？上午的时候因为混乱的生活而影响了学习的心情； ##Interpretive###我们今天学到了什么？1、问三个问题，其实是问抽象的why，情绪的how，具体的what;2、进步型的学习更能带给人快乐； ###今天一个重要的领悟是什么？####学习方法进步型的学习最重要，比如你做了一个东西，你和自己比就是+1，但是如果别人做了3个，你和别人比就是-2，所以永远和自己比，比赛什么的，还是不适合进步型的人格啊；这种第一，不如让他成为serendipity吧； ####编程知识无 ##Decisional###我们会如何用一句话形容今天的工作？呕心沥血设计问卷。。 ###有哪些工作需要明天继续努力？参加Meetup;","link":"/2017/03/06/1516694/"},{"title":"2017年第09周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是Xdite老师的影像阅读，在周一直播听到的，我以前以为影像是阅读就是照相阅读，但其实那个是过目不忘，而影像是阅读则是具象化文字的内容，是抽象的反面，是想若我们图像记忆比牛逼，而文字总是有限的对图像的描述，那么反向的过程的记忆难度一定比记忆图片还低，而这是大脑的强项；所以老师说她看书是电影（以上纯属个人理解）； 2.“本周遇到最大的坑”本周遇到的最大的坑是没有做好家务，弄得自己生活一团糟，心情也差了。环境影响心情这个基本的原理可别忘啊；","link":"/2017/03/06/1516724/"},{"title":"20170305学习总结（附Meetup收获）","text":"##Objective###关于今天的学习，你记得什么？####新旧知识1、深圳这个城市的氛围更适合创业者和打拼的人；2、深圳的办事效率很高；3、广州的社保停缴以后才能转到深圳； ####遗留问题 ####涉及资源1、Github desktop ###完成了什么？1、参加了广州线下meetup；2、为网页加入了伪搜索框； ##Reflective###你要如何形容今天的情绪？第二次参加了广州的meetup，和小伙伴们的熟悉度加强，本想逼演示十分钟抄别人功能，结果发现别人的是伪功能导致装逼失败…和小伙伴们分享了很多看法，发现在这个过程中自己也激发出了新的理解，分享真是个好东西。第二场参加meetup，就知道两个早起一起策划meetup的小伙伴一个去了上海，一个去了深圳，下次再见不知何时，心理及替他们高兴，又有些小小的失落。 ###今天的高峰是什么？和meetup的伙伴们愉快的聊天。 ###今天的低点是什么？想实现三个功能，结果只实现了一个，还是伪的。。。 ##Interpretive###我们今天学到了什么？1、抽象和具象是相对的两个过程；2、影像阅读其实是具象的能力；3、用语言文字其实无法完整的描绘图像；4、过目不忘和影像阅读其实是两种能力；5、到后期，若果logdown设计到一些项目秘密的话，就应该设为私有； ###今天一个重要的领悟是什么？####学习方法具象化这个概念，同抽象化的概念，以及他们两者的不同用途； ####编程知识可以通过网页定制网站找前端素材； ##Decisional###我们会如何用一句话形容今天的工作？分享到头疼。 ###有哪些工作需要明天继续努力？1、惯例看直播；2、补作业； ##Meetup###从陈颖君那知道了关于深圳的大量信息，并且为我提供了一些因为自己执念而没有正视的实际情况；###本周从郭建这里知道了一个重要的工具githubdesktop，惊为神器；###从崔世瑞的购物网站上收获了不少快乐，真是个神奇的网站；###看了罗慧仪演示了下她是如何使用的w3cscholl实现一个功能的；###另外本周还新认识了两个小伙伴，黄小茜，陈玲敏，感觉也是非常有趣的人；###因为陈颖君下周移步深圳了，以后队长任务就由我和崔世瑞和郭建来兼任了；###由于大家都在赶比赛，所以没有太多的干货分享，考虑以后发展下多样化形式让大家共同成长；","link":"/2017/03/07/20170305-study-summary-report-meetup-harvest/"},{"title":"我参赛的心路历程与收获","text":"###心路历程商店大赛终于结束了，没错，终于。作为一名上班之余学习的人，我也算是松了一口气。相信有很多的上班族同学也是这样的感觉，自参赛以来，注意力就完全被吸干了，生活一团乱麻。然而在这个痛苦的过程中终究还是有所收获，一笔不小的收获。比赛开始之初，因为自己的学习进度和教材的进度有了一小段的距离，加之家里发生了些事情，本打算就此作罢，后期自己再琢磨着自己完善自己的购物网站。然而，在看了Xdite老师在2月20号的演讲后，我意识到了自己这个观念的错误。首先，比赛的首要目的是锻炼协作能力，而这个和最新的课程进度实际上是关联不大的；其次，参加比赛的过程同实际的项目过程是非常相似的，边学边做，争分夺秒，是个很好的模拟实战机会；最后，如果打算进行职业转换，拿出一个像样的合作作品非常重要，而这时自己一个人捣鼓很难有的效果。羞愧的我直播一结束就广州meetup群求组，要知道这时比赛已经开始了一个星期。很巧，另一个刚看完直播也在羞愧的罗慧仪同学也萌生了组队的想法，于是我们就在这样的状态下组队开始了比赛。相信通过网络合作完成具体编程项目很多人都是第一次，我们当然也不例外。组队当天，简单讨论了以后发现一切都是毫无章法，完全是懵逼的状态。而后的两天也处于模模糊糊的讨论状态，实际上讨论了些东西，但感觉上好像又没有讨论什么。一直到第四天，大家通过微信通话，才开始了真正有效的交流，选题、model的设置、功能实现顺序等等。由于组队的两人都是上班族，所以合作的时间只能是晚上和周末，所以在剩下的时间里，就是一点一点的加功能、一点一点的改界面，虽然比起其他同学我们进步缓慢，而且也不能说花了全部可用的时间，但是我们确确实实耗费了很大的精力。然而，这也是理所当然地事情，只要是一个认真工作的人，一个认真对待家人的人。在上班之余，在陪同家人之后，即便你还有时间，你的精力也大打折扣。所以，比起那些开足全部马力参赛的同学，我们最终的成果确实相当的初级与不完善。比赛过程中每当看到其他同学漂亮的页面、强大的功能、以及快速的迭代，我们的心中充满了自卑与焦虑。这种对比的心态从参赛开始蔓延的比赛结束的前两天，那时的我们生活已经是糟得不能再糟了，对于爱干净的我来说，从比赛开始家务就已经没有再做了，面对脏乱的环境，我的内心也混乱不堪。而罗慧仪同学也因为连续一种熬夜整个人完全掉线了。所幸，在比赛结束前的周六，大家坦诚的交流了下自己的进度，发现都已经停滞了一两天。进一步的，发现我们都已经因为前期的无计划赶进度产生了严重的厌恶情绪。面对这样的情况，商量之下决定暂停比赛了。其实，仔细想来，这场比赛本身就是一场投入时间和精力的比拼。而面对待业党与学生党，我们上班族显然天然处于劣势，在这样的情况下，更明智的对比，应该是自己和自己比，而不是去和别人比。当意识到这点的时候，发现我们已经不知不觉由进步型变成了表现型，而且是那种表现失败的表现型。试想，你做出了一个新功能，你和自己比，是+1。而你做出了一个新功能，别人做出了3个新功能，你和别人比就是-2，多么强大的负反馈啊。暂停了比赛的当天下午，发现自己神奇的又恢复了兴趣，而后又开始琢磨起了新功能，只是这次我已经换了一个心态，认清了自己的状况，也就明白那些奖品与名次其实已经与自己无关，而我要做的就是学习学习再学习。比赛结束前我又给网页加了个伪功能，虽然已经无足轻重，但是它是整个过程里我做得最开心一个。^o^###收获####做事心态做事情定好战略或者调整好战略以后，就要和自己比，看看自己的执行情况，而不是去和别人比，要通过和自己比不断激励自己；而是否能拿第一，既看自己的实力与把控能力，也看serendipity；####比赛策略做什么事情，制定策略与项目管理是第一件应该做的事情，虽然看了Xdite老师的敏捷项目管理课程，也知道它获得hack松的精力，但是在这次的比赛中我们并没有能自觉按照这个方法进行比赛策略的制定，及项目管理，对于教材里面提及的githubproject管理工具也没有好好使用，造成比赛过程无限发散，根本不在可把控的范围内。####有效交流在比赛开始的几天了，我们只是通过微信文字交流，直到第四天我们才开始真正通过微信语音通话进行高质量的交流，所以交流的实时性非常重要，比起文字，语言与视频的交互质量更高；####分工科学要科学的规划项目合作过程的开发顺序。虽然我和队友一人负责功能一人负责前端，但在实际过程中我们并没有安排好具体的合作时间分配，造成前端完成后，而相应的后端还没有完成，导致队友的项目开发时间白白浪费；####GitHub通过组队体会到了Github真是提供了一个非常牛逼的合作功能，这是只使用过excel/word多人共享工作模式的人未体验过的，其背后是思想相当有意思，Github的官方工具github desktop更是学习别人功能的利器；####javescript在实现show页面小图点击大图变化功能时，学习到了一些js的知识，发现js其实是本质上也是程序，其实通过动作出发而已；####学习别人的功能代码在学习的过程中，学会了通过commit及blass来追踪其他同学实现某个功能代码的脉络，进一步提供了进一步学习的可能；####landingpage在学习过程中，发现其实网页的核心是让别人想买你的产品服务，而不是你的页面多么漂亮；####正确评估一个功能所需要的工作量在设计产品的时候，我们使用了两个model类，一开始以为只需要价格model就可以了，后面发现cart要改，再后面发现order也该，后来发现mailer也要改；而别人知识通过一个category和对应的column就可以实现了相关的功能。。####加深了对gem的理解gem就是代码集合，知识打包了而已，可以拆开来用，也可是制定知己的gem；####互联网服务通过部署heroku及邮件服务，了解到了其实本质上，晚上的各个功能都是不同模块的整合，小的可以叫gem,大的可以叫云服务，互相之间通过交互语言来实现协作；","link":"/2017/03/07/i-play-journey-and-harvest/"},{"title":"20170307学习纪录","text":"##Objective###完成了什么？写了创意大赛的总结； ##Reflective###你要如何形容今天的情绪？情绪依旧低迷，发现写的总结貌似有些负面； ##Decisional###我们会如何用一句话形容今天的工作？写了篇创意比赛的总结； ###有哪些工作需要明天继续努力？看元认知课第二节；","link":"/2017/03/11/1538143/"},{"title":"20170308学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、要放下分析的心态，去感知轮廓；2、人生苦短，要勇于使用捷径；3、取得技能和学会技能是不一样的；4、自学技能的一个方法：找一本初级实作型书籍或者找高手帮你挑最小项目的书籍实作，不要找视频类的教程，最好能复制黏贴代码；5、学编程的时候要用一本笔记本在旁边，随时记录错误信息；6、在学习新技能的时候，要对错误的地方记笔记，要是遇到什么地方搞不懂，应该背下来使用而不是一直死磕，这是一个非常有用的技能；7、学习的时候，要先利用右脑形成肌肉记忆，并以取得技能为目的，之后再左脑分析；8、大脑的思考很慢，思考是本质是调用记忆，你以为的理解其实是记忆，没有肌肉记忆是没用的，题海战术和填鸭教育有时是必须的；9、图钉蜡烛这个例子，解释了具象化其实可以为大脑调用更多的大脑资源，包括但不限于视觉系统和触觉系统；10、快速决策和直觉可能只是习惯；11、理解实际上是匹配记忆的过程，如果是开拓者，则需要创立概念；12、左脑的学习法也不是不行，就是太虐自己了，开拓新领域时只能用这种，不过这种方式，能调用大脑所有的资源建立认知网；13、没有重复练习，就不可能精通任何脑力活；13.直觉其实是深刻在大脑里的长期记忆；14、关掉左脑模式，将记忆点种到大脑里，形成肌肉记忆，再用已知来解释已知，这个过程中要尽量保持开心和成就感，只有充满成就感的学习，才是初学技能的人最需要的东西，只有掌握了这个东西才能更好的学习；15、肌肉练习是指提取练习和迁移练习；16、再次强调，教是最好的学；17、初学一个东西的时候要不要脸、不要完美、不要扎实，最好当知己是白痴来学；18、找练习的机会做迁移；19、你觉得很多事情难做，只是没有下定决心去做，或者你下定决心去做又没有好好动脑去想；20、引诱科学的要点是稀缺性和损失厌恶，针对的克制方法就是问自己，这个东西我要吗？还有不要这个东西我怕吗？21、过程编程到六七十岁的人一大把； ####遗留问题1、老师让我们去看她的一篇关于注意里的文章； ####涉及资源1、《引诱科学》；2、认知心理学；3、《一周工作四小时》4、《脱离平庸的世界》 ###完成了什么？1、上了Xdite老师的元学习课；2、玩了swift playground的command小节；3、补了周日的ORID即小结； ##Reflective###你要如何形容今天的情绪？可能是第三次听Xdite老师讲元学习课的原因，除了一些知识补充外，貌似已经没有前两次听的那么激动了，不过听的过程中，还是发现有的地方没有践行好； ###今天的高峰是什么？听到图钉和蜡烛那个例子的时候学到了一个之前两次课都没有get到的点； ###今天的低点是什么？打swiftplayground感觉有些痛苦，英语的原因； ##Interpretive###我们今天学到了什么？1、学习过程的速度掌控很重要，初速度要快，低迷的时候速度也要快，攻坚则会慢一些，但是总体的速度要保持；2、可以通过git来进行写作版本控制；3、人类只能利用已知的事物理解新的事物，正好说明了积累的重要性；4、拼图的过程实际上是拼概念，而登山的过程很可能是创造概念，所以能拼图的时候选择登山也不是不行，时间是多了，但是登山的能力却锻炼了； ###今天一个重要的领悟是什么？####学习方法在思考问题的时候，要尽可能的调用自己的感官，比如图钉蜡烛的这个故事就是理性分析的同时，调用了想象力，这样可以把不同工作原理的大脑调用起来，然后相关的调用了更大区域的大脑进行计算，这里面有明的也有暗的。 ####编程知识无 ##Decisional###我们会如何用一句话形容今天的工作？新版的元学习课程，新版的收获。 ###有哪些工作需要明天继续努力？明日休息，后天写全栈六十天复盘；","link":"/2017/03/11/1538502/"},{"title":"20170306学习纪录","text":"##Objective###关于今天的课程，你记得什么？####新旧知识1、Xdite老师说了下，接下来的课程安排；2、5月份会开线下班；3、后期会有api的课程；4、后期也会教大家如何编写ios的程序； ####遗留问题赶上课程进度。。。 ####涉及资源1、《软技能》2、《Ruby refecting》3、《师傅》4、《发布》 ###完成了什么？1、看了Xdite老师的直播； ##Reflective###你要如何形容今天的情绪？还没有创意大赛的低迷中走出来； ###今天的高峰是什么？无 ###今天的低点是什么？情绪低迷。 ##Interpretive###我们今天学到了什么？主线的课程已经学完了，后面的是支线任务，老师会不断完善课程； ###今天一个重要的领悟是什么？####学习方法无 ####编程知识无 ##Decisional###我们会如何用一句话形容今天的工作？不行了，连老师直播的鸡血都无法拯救低迷的情绪； ###有哪些工作需要明天继续努力？调整好状态，写个创意大赛总结；","link":"/2017/03/11/20170306-learning-record/"},{"title":"20170310学习纪录","text":"##Objective###完成了什么？写了全栈六十天总结的总结； ##Reflective###你要如何形容今天的情绪？回顾这六十天，发现最大的收获不是编程，虽然编程的收获挺大的，但是思想上的收获更大；而且想必上次写的魔改总结，这次积极乐观了不少； ##Decisional###我们会如何用一句话形容今天的工作？写了篇全栈营六十天的总结； ###有哪些工作需要明天继续努力？补ORID；","link":"/2017/03/12/1552614/"},{"title":"20170311学习纪录","text":"##Objective###完成了什么？1、补写了ORID； ##Reflective###你要如何形容今天的情绪？自从知道了提取练习后，学习之后不写ORID就好像没学过一样，然后不写ORID也就没有继续学习的动力，心理总是感觉有什么事情没做，补了太多，中间弹了会琴放松了一下； ##Decisional###我们会如何用一句话形容今天的工作？修整完毕，开始补作业； ###有哪些工作需要明天继续努力？1、进行广州meetup;","link":"/2017/03/12/1552686/"},{"title":"2017年第10周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的概念是具象化解决问题，Xdite老师在元学习课第二节的时候说用火柴蜡烛一盒图钉钉在墙上的题，直接想是想不出来的，但是在脑子里具象化后就会发现很容易，这本质上其实是当我们在具象化的同时，调用了其他大脑区域的资源，这样实际上等于拓展了解决问题的大脑区域，所以解决问题更快； 2.“本周遇到最大的坑”本周遇到的最大的坑是在没有调整好负面情绪的时候去做事情，具体就是写创意大赛总结，解决越写越消极。人的行动对情绪是有反作用的，情绪消极时做事情会越来越消极。","link":"/2017/03/12/1552778/"},{"title":"20170312学习纪录（Meetup版）","text":"##Objective###关于今天的meetup，你记得什么？####新旧知识1、李思成分享的surge和多态一起使用可以完成网站代理的完整布局；2、夏宁分享了用scientificAmerican学习英语的方法；3、分享了给别人跑步和弹奏乐器的调整情绪的方法；4、和李思成交流了坐享的感觉，发现自己可能没坐对，理论上应该是轻松的，他顺带分享了个轻松冥想的app给我；5、吴日辉说的具象化理解购物车的方法，和Xdite老师蜡烛图钉的那个例子有类似之处；6、郭健提到ORID可以扩张使用，加上uset story可以考察自己对人的态度及情绪方面的问题；7、YY老师在直播里分享了Source_tree;8、崔世瑞分享首页LOG应该使用PNG而不是jpg前者无背景色、后者有背景色；9、郭健提到刻意练习的书上面认知的三层结构：a、基本认知小图；b、基本认知单元；c、基本认知体系； ####遗留问题1、下次meetup要带小音响去； ####涉及资源1、轻松冥想;2、ScientificAmerican;3、popumusic；4、Source_tree；5、《刻意练习》；6、《好好学习》；7、《good to great》（《从优秀到卓越》）；8、surge fot mac； ###完成了什么？1、组织了这一次的广州meetup； ##Reflective###你要如何形容今天的情绪？早上起来还是一如既往的不愿意起床，脑袋完全无法思考，后来因为下雨的原因，去meetup迟到了，发现自己没有很强烈的愧疚感，这是不对的，不知是什么时候开始，自己对于迟到这个事情竟然边的如此无感，要警惕。到达现场后，看到了李思成，因为都是上班组，忽然对于上班族学习全栈的艰难产生了深深的共鸣。后来帮夏宁解决了一个bug，感受到了满满的成就感，再后来谈论学习英语的方法时，夏宁分享了一个她的方法，对比我的听看过的电影的音频的方法，她方法调用了更多的大脑资源，但也一定更有效，但是可能是下意识的内心不想走出舒适区，对她的方法产生了排斥，但是已经意识到了，但是无法纠正过来，元认知能力还是不够强；到了话题讨论环节的时候，发现自己的发言没有前几次那么情绪亢奋了，后来想想可能是做了队长要照顾每给小伙伴的发言，所以除了发言外还稍微克制了下；meetup结束以后和郭健去华农逛了下，有华电的感觉，那个年代的房子都是这样的设计，走在校园的路上，以前与大学有关的记忆一点一点的活跃了起来，以后没事还是要多去校园里逛一逛，永远年轻永远热泪盈眶；回去的车上有些颠簸，没有提前准备好听力材料转移注意力，下次要准备好材料；晚上装了李思成推荐的轻松冥想，本来怕睡不着不坐享的，后面还是没忍住，使用以后惊讶的发现自己之前坐享的方法是错的，想到原来的坐享都白做了，失落了那么一下下，然后就平复了，可能是刚坐享完所以情绪稳定性高吧； ###今天的高峰是什么？帮夏宁解了个bug，第一次在meetup帮别人解决真正的程序bug，成就感满满的； ###今天的低点是什么？低点是下午分享时感觉脑力不足，也许是做队长有额外的能量消耗。 ##Interpretive###我们今天学到了什么？1、在学习中克服满足感能让自己保持步调；2、推迟满足感的方法可以把它拆解，用一个个小满足感代替；3、冥想、弹琴、运动、游戏等调节情绪的方法本质上是将思维抽离情绪或者转移；4、活动类的调节情绪方法可能更容易调动肾上腺素产生调节情绪的效果；5、情绪本质是各类激素综合作用于大脑，调节情绪的本质实际上是影响各个激素的分泌；6、与别人交流最有效的方法就是将想要表达的东西和对方大脑里已有的认知/记忆建立连接； ###今天一个重要的领悟是什么？####学习方法没做的事情会产生强烈情绪的，看情况要不要对自己说或者别人说，说了的话会消解情绪，如果是恐惧紧张类的情绪，考虑多说。而激动兴奋类的，就不要说了。 ####编程知识heroku要绑定信用卡才能实现完整的网页功能； ##Decisional###我们会如何用一句话形容今天的工作？解放思想，共同成长； ###有哪些工作需要明天继续努力？收看Xdite老师直播；","link":"/2017/03/13/1567670/"},{"title":"20170313学习纪录","text":"##Objective###关于今天的直播，你记得什么？####新旧知识1、招聘工作的笔试题时间是一个周，而且是远程且可以google；2、投简历时先投三家不是最喜欢的公司实战一下，之后再投自己喜欢的公司；3、找工作千万不能急；4、Xdite老师的线下班主要是组队做项目，所以如果可以早日应聘的话，在公司里有人带的话，也是做项目实战；5、可以去一个人全栈的公司做，这样成长比较快，但是很幸苦，看你能不能顶得住；6、老师的修改简历服务是两个月内有效，然后比赛的前25个作品的五十名同学能获得推荐；7、MC超级数字力的课上了很多选股的知识，然后通过rails的api可以去网上爬虫抓出数据；8、写orid要关注自己的情绪，有的同学通过写这个提高了对情绪的控制力；9、找工作的时候，可以不用在意工作经验这一条去找工作，产品&gt;经验；10、对于高级程序员来说，全栈思维更加重要； ####遗留问题1、下次要去上MJ的课； ####涉及资源1、Sleep cycle app2、潮汐 ###完成了什么？听了Xdite老师的直播； ##Reflective###你要如何形容今天的情绪？晚上听Xdite老师的直播，当她提到有同学写了几个月的ORID时，发现对自己的情绪控制能力提高，突然懵掉了，虽然自己一直写ORID但是情绪这一部分好像没有好好写，啊，前天的那种坐享白做的感觉再次袭来，看到老师提到的求职时，内心松动了下，短时困惑了一下自己决定先休息一下，再慢慢找工作的想法是否欠妥，困惑至于，觉得把问题抛到办完离职手续再说，这段时间好好的把学习进度赶上；晚上和meetup的小伙伴交流了下轻松冥想，之后又有同学推荐了一个sleep cycle，忽然意识到，这段时间的收获不是一般的多，暗暗欢喜，meetup真是幸运制造机；晚上通过写昨天的ORID发现了，昨天情绪上抵触夏宁的学习法，知错就改，向她坦诚自己可能昨天不愿意走出舒适区，所以有抵触情绪，后来她耐心的指出了更详细的英语学习法，听的过程中还是有些焦虑，一开始还是要下苦功，她说需要三个月才能感觉到效果，90%的人挺不过三个月，感觉心理还是有些虚，不知道未来的一段时间自己究竟能不能成为那10%; ###今天的高峰是什么？第一次写ORID的时候认真回顾自己一天的情绪，体会到思想之外，情绪也是一个值得感知的东西； ###今天的低点是什么？听到夏宁的方法需要三个月时，内心最求速成的满足心理跳了出来，而后造成了一些些的失落； ##Interpretive###我们今天学到了什么？1、写OIRD情绪这部分也要好好写，之前这部分给我忽视了，只是很草率的描述了一下情绪，往后要细细体悟；2、有拿得出手的产品更重要；3、学了课程不要把眼光局限在网页开发，其实ROR能做的事情远不止这些，比如老师说的通过API选股； ###今天一个重要的领悟是什么？####学习方法写ORID要认真的回顾体悟自己的情绪； ####编程知识通过rails+api可以实现爬虫功能； ##Decisional###我们会如何用一句话形容今天的工作？了解程序员求职的一些过程； ###有哪些工作需要明天继续努力？补完招聘网站的作业；","link":"/2017/03/14/1577480/"},{"title":"编程套路：Rename heroku repo的方法","text":"###重命名heroku repo名称的方法有两种，一种是在网页里设置，另一种是在command里设置，方法来源：https://devcenter.heroku.com/articles/renaming-apps#updating-git-remotes。具体如下：####一、在网页里设置1、现在heroku对应的专案页面中的settings的name中修改；2、因为远端的名称修改，本地的远方地址需要重新设置；3、执行 123git remote rm herokugit remote -vgit remote add heroku https://git.heroku.com/XXXXX.git（XXXXX是heroku名字，在heroku网页中可以查） 4、或者可以执行： 12git remote rm herokuheroku git:remote -a newname ####二、在iterm里设置使用命令： 1heroku apps:rename newname 如果不行，可再执行一中的步骤4；","link":"/2017/03/15/1585602/"},{"title":"2017年第11周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是轻松冥想，上周李思成分享的工具，使用以后发现坐享效果很好，真的好。 2.“本周遇到最大的坑”本周遇到的最大的坑是ORID的情绪纪录，周一在Xdite老师的直播里老师提到有个同学通过两个月写orid纪录情绪后，对自己的情绪掌控提高了很多，才发现自己之前写的orid忽略了感知情绪的这一块。","link":"/2017/03/18/1606964/"},{"title":"编程作业：什么是巢状表单","text":"指的是在一个model里面添加数据的时候，相关的其他model里面也会增加几笔数据，这几个model间就是巢状关联，我们形成的数据表就是巢状表单。","link":"/2017/03/27/1647655/"},{"title":"编程作业：什么是ActiveJob","text":"####1 简介Active Job 是用来声明任务，并把任务放到多种多样的队列后台中执行的框架。从定期地安排清理，费用账单到发送邮件，任何事情都可以是任务。任何可以切分为小的单元和并行执行的任务都可以用 Active Job 来执行。 ####2 Active Job 的目标主要是确保所有的 Rails 程序有一致任务框架，即便是以 “立即执行”的形式存在。然后可以基于 Active Job 来新建框架功能和其他的 RubyGems， 而不用担心多种任务后台，比如 Dalayed Job 和 Resque 之间 API 的差异。之后，选择队列后台更多会变成运维方面的考虑，这样就能切换后台而无需重写任务代码。","link":"/2017/03/27/1647697/"},{"title":"2017年第12周总结","text":"1.“本周学到的最棒概念/工具”本周学到的最棒的工具是流利说，之前在玩swiftplayground的时候，屡屡被解说的英文打断积极性，在使用了一周的流利说后，轻松完成swiftplayground的学习任务； 2.“本周遇到最大的坑”本周遇到的最大的坑是没运动、没运动、没运动。从开始学习全栈营后，就停止了原先的跑步习惯，第一个月的时候身体出现了神经衰弱，以为是没休息好。之后，睡眠时间越来越长，但是白天的状态也越来越差，直到最近才意识到这个问题，自己可能是因为没运动亚健康了，之后运动了一晚，果然第二天状态就好了很多，再之后有时像以前一样有时谁6个小时也没什么大问题。","link":"/2017/03/27/2017-12th-week-summary/"},{"title":"编程作业：?号的意义","text":"在方法/函数后面带上？表示执行这个方法后，得到的值是true或false。","link":"/2017/03/27/programming-assignment-meaning/"},{"title":"编程作业：什么是session","text":"在计算机科学领域来说，尤其是在网络领域，会话（session）是一种持久网络协议，在用户（或用户代理）端和服务器端之间创建关联，从而起到交换数据包的作用机制，session在网络协议（例如telnet或FTP）中是非常重要的部分。 在不包含会话层（例如UDP）或者是无法长时间驻留会话层（例如HTTP）的传输协议中，会话的维持需要依靠在传输数据中的高级别程序。例如，在浏览器和远程主机之间的HTTP传输中，HTTP cookie就会被用来包含一些相关的信息，例如session ID，参数和权限信息等。","link":"/2017/03/27/programming-assignment-what-is-a-session/"},{"title":"编程作业：SecureRandom.uuid的作用","text":"SecureRandom.uuid 是 Ruby 内建的随机生成器。","link":"/2017/03/27/programming-jobs-securerandomuuid/"},{"title":"20170609学习纪录","text":"##Objective###今天做了什么？ 看完了LOGDOWN的笔记 整理了下印象云笔记 整理的下近段时间的ORID。 ###关于今天的学习，你记得什么？####新旧知识 无 ####遗留问题 无 ####涉及资源 网页：LOGDOWN； APP：印象云笔记 ##Reflective###你要如何形容今天的情绪？ 花了几天终于把LOGDOWN的内容看了一遍，算是继续学习编程的热身，不得不说一下看这么多文章还怪挺累，看的过程中经常会有厌烦的情绪，碰到这种情况，只能暂停下来，等一会再接着看。 ###今天的高峰是什么？ 在看到logdown最新的几篇时，心流了。 ###今天的低点是什么？ 看文章过程中有几次脑袋空白，看不下去。 ##Interpretive###我们今天学到了什么？ ORID可以写一份总的，然后把技术部分提出来放到技术博客上面去。 ORID可以分两天写，当天写主要部分，第二天再补充，包括当天写完后面的事情，还有一些另外的想法。 即便是写ORID也不能代表不用复习。 ###今天有什么重要的领悟？ 即便是写ORID也不能代表不用复习。 ##Decisional###我们会如何用几句话形容今天？ 完成了之前的学习博客的阅读，回到学习编程的正轨上来，正是进入辞职后的第三阶段——就业技能储备阶段。 ###明天有什么计划？ 从头开始过一遍全栈营的课程 写ORID","link":"/2017/06/10/20170609-learning-record/"},{"title":"20170610学习纪录","text":"##Objective###今天做了什么？ 复习了全栈营VIP入学手册和Rails第一课：环境建置 写ORID ###关于今天的学习，你记得什么？####新旧知识 Rails是通过rubygems.org安装的，这么算来rails是当作gem来被ruby使用咯？而且rubygems的地址是通过RVM来指定？在安装ruby时是通过RVM，而并非GEM，但教材中出现若ruby安装不成功是，则将ruby源改成改成中国的，意思就是安装ruby的来源其实也还是gem。 而ruby是通过RVM安装的，而不是通过ruby官网，因为需要版本控制。 Homebrew和rvm的安装方式相似，很像是从远处拷贝过来，然后在本地安装。 通过 herouku logs 命令可以查看错误heroku上面运行的错误信息。 ####遗留问题 无 ####涉及资源 网站：全栈营 网站：LOGDOWN； ##Reflective###你要如何形容今天的情绪？ 因为是复习旧知识所以比较轻松，初始加速度较快，感觉进入了状态。 学习完rails第一课的时候有些疲劳，就开了个电影放松，就想着不长，结果一看两个半小时。。想了想看就看了，就看完吧，结果后面梁璐打电话过来，最后还是没看完。 ###今天的高峰是什么？ 复习的时候很快回想起了原来学习过的知识。 ###今天的低点是什么？ 学习完两个全栈课程后，有点疲劳，状态下降。 ##Interpretive###我们今天学到了什么？ 流利说可以一天学一个新课，复习一个卡片，然后刷一个满星。 Homebrew确实是一个便利的工具。 ###今天有什么重要的领悟？ 英语的提高对编程学习确实有很大的帮助作用。 ##Decisional###我们会如何用几句话形容今天？ 从头开始复习全栈的课程，发现学习的速度比之前确实快了很多。 ###明天有什么计划？ 写ORID； 学习全栈营；","link":"/2017/06/13/20170610-learning-record/"},{"title":"20170613学习纪录","text":"##Objective###今天做了什么？ 写ORID 完成了Rails第二课：初级练习 ###关于今天的学习，你记得什么？####新旧知识 在rails里面，model对应active_record、controller对应action_controller、views对应action_view，而后两个合并起来又叫action_ pakge model是用来对数据库操作的 class和集合类的命令都是适用于群体的 @media是设置在不同的显示环境下适用的css youtube上面有很多的原理解释视频，简直是学习的宝库 IRB（Interactive Ruby Shell） :pluralize前面的冒号表示这是一个方法或者函数，总之可以调用或是接上的意思 method会取参数parameters（参数），表示它们要对那些参数操作。 method也可以return（回传）资料。在Ruby里面，method会回传最后一行的结果，无论该结果是什么。 scaffold（包括modle、view、controller）。可以理解成是database和人之间的操作媒介。 generate scaffold 相当于打包了generate model,generate controller, generate view了。 空间模型应该理解有四成，加入database View会产生html来显示在浏览器，view档案是用ERB写的，它是一种样板语言（tamplate language），里面是html加上内嵌的ruby程序码。views里面的ruby的变数便是当使用者要浏览该页面的时候，所要填入的内容。（还有别样的样板语言，但是在railsbridge我们只用ERB。） Controller把objects在Model和View之间传来传去。 每一个URL都对应到Controller里面的某一个特定的method。 在这一步骤以后，当你打开你应用程式里面的任何一个页面，该请求（request）会被某个Controller的method处理。 当我们把Model、Views、Controllers放在一起的时候，他们会遵循以下的模式： 给一个Url，Rails会去检查要使用哪一个Controller里面的method（又称为“Action”）。Controller Action会去呼叫Model里面对应的methods。Model会去读写资料库，然后把包含资料的object回传到Controller。Controller会拿到这个object并且丢到View里面。Action通常会有对应的View档案，Rails会自动寻找并使用它。） Scaffold展示的就是一个最基础的CRUD（new topic, show, edit, destroy） root “topics#index” 中的除了#index的写法外还有没有其他的参数？ routes定义的是启动controller(action)的名称、调用路径、使用方法及需要的参数列表。 也可以打成，后一种方式更好理解（我的自己想出来的做法），前一种简洁（教材上的做法），貌似路径名和当前的object名相同的时候才能使用后一种方法，而且默认方法是GET，因为edit_topic就不能用后一种方法写。 View的文件夹是生成controller时候同时生成的，touch只是创建里面的子文件。 ####遗留问题 按票数排序，先插入票数column，设置初始值为零（这个没想好怎么做），之后票数变化对应的进行值更新，用教材的公司，update_attribute ####涉及资源 网站：LOGDOWN； 网站：全栈营 网站：heroku 网页：Active Record Query Interface的资源页 ##Reflective###你要如何形容今天的情绪？ 早上没吃早饭，明显感觉到在写ORID的时候的缺能量感 吃完饭后，觉得有点疲劳，然后来了罐可乐开始学习很快疲劳感就没了 下午连着学几个小时的程序后，感觉有些恶心感，就安排了休息。 ###今天的高峰是什么？ 程序学习的时候效率非常高 ###今天的低点是什么？ 下午连着学几个小时的程序后，感觉有些恶心感 ##Interpretive###我们今天学到了什么？ 解决程序问题的时候重要是解决问题，不要太执着与一定要用什么办法解决，先把问题解决了，再来完善方法。 ###今天有什么重要的领悟？ 解决程序问题的时候重要是解决问题，不要太执着与一定要用什么办法解决，先把问题解决了，再来完善方法。 ##Decisional###我们会如何用几句话形容今天？ 有计划、有意外，保持平静才能更好的应对突发状况，不然很容易放飞情绪。 ###明天有什么计划？ 写ORID； 学习全栈营；","link":"/2017/06/14/20170613-learning-record/"},{"title":"报错纪录：belongs_to :topic 打成belongs_to :topics","text":"app/models/vote.rb123class Vote &lt; ApplicationRecord belongs_to :topicend 错误打成了 app/models/vote.rb123class Vote &lt; ApplicationRecord belongs_to :topicsend","link":"/2017/06/14/error-records-belongs-to-topic-a-belongs-to-topics/"},{"title":"20170614学习纪录","text":"##Objective###今天做了什么？ 写ORID 完成了Rails第三课：Rails101，前两节。 ###关于今天的学习，你记得什么？####新旧知识 写ORID的时候还是要做一个当日笔记把闪念、知识点记下来 emmet用得好的话可以提高效率 emmet的基本符号有：&gt; + ^ $ ( ) [ ] { } . # emmet中的#和.对应了css中的id和类 emmet中通过tab键替换，加上返回键基本完善了编辑功能 emmet过程中重点是要理解各个元素间的包含关系 Dash这个应用可以作为常驻一屏来使用 Spectacle让笔记本的屏幕起到了多屏的使用效率 bootstrap是一个套件框架，包含了css和js 要使用bootstrap的css功能和js功能先要安装gem，之后在将相应的模块接入project的css和js里 helpers里面的功能及代码 Bootstrap是Web设计圈有名的CSS框架，提供了开发项目快速便利的元件素材，如按钮、下拉选单、表格等等样式。 在Rails上要帮项目穿上Bootstrap，用的是bootstrap-sass这个套件。 option+G能快速输入©符号。 bootstrap/alert是bootstrap的js提示套件 生成MVC的时候，从底层开始，即：M→C→V ####遗留问题 按票数排序，先插入票数column，设置初始值为零（这个没想好怎么做），之后票数变化对应的进行值更新，用教材的公司，update_attribute lash_class(key)的函数原理，以及怎么在rails c中测试它的值，及to_sym emmet有几个功能按照dash的说明没能成功。 ####涉及资源 网站：LOGDOWN； 网站：全栈营 网站：heroku App：Dash Atom package：emmet ##Reflective###你要如何形容今天的情绪？ 在学习使用emmet的时候，感慨自己之前怎么没有专门安排时间来学习一个它的使用。 ###今天的高峰是什么？ 理解了flashes_helper的原理 ###今天的低点是什么？ emmet有几个功能按照dash的说明没能成功。 ##Interpretive###我们今天学到了什么？ 我们现在学习的工具和套件最简便的学习方式就是去他们的官网或者github上面查看使用说明，而dash就是把这些工具拉到本地来使用，反而特别好用。 很多工具朋友们之前都介绍了，但是没有自己真正消化，其实它们和自己一点关系都没有。 ###今天有什么重要的领悟？ 我们现在学习的工具和套件最简便的学习方式就是去他们的官网或者github上面查看使用说明，而dash就是把这些工具拉到本地来使用，反而特别好用。 ##Decisional###我们会如何用几句话形容今天？ 为了提高效率学习了一些工具的使用。 ###明天有什么计划？ 写ORID； 学习全栈营；","link":"/2017/06/15/20170614-learning-record/"},{"title":"报错纪录：将app&#x2F;helpers&#x2F;flashes_helper.rb 打成 app&#x2F;helpers&#x2F;flasher_helper.rb","text":"在生成flashes功能时，将 1app/helpers/flashes_helper.rb 打成了 1app/helpers/flasher_helper.rb","link":"/2017/06/15/an-error-record-app-helpers-flashes-helper-a-app-helpers-flasher-helper-rb-rb/"},{"title":"20170615学习纪录","text":"##Objective###今天做了什么？ 写ORID 看了全栈营二期的创意大赛比赛总结直播 学了Rails第三课：Rails101第四章 重点学习了下RESTful的概念 ###关于今天的学习，你记得什么？####新旧知识 routes里面的resources是一组资源的意思 RESTful概念是指，将CRUD封装起来，然后在外面对应着四个基本verb：POST、GET、UPDATE、DELETE，里面则是基本的七个acion和四个页面 rails就是按照RESTful概念设计的，所以在编程的时候只要重点写好CRUD其他功能rails基本就已经帮我们完成了，只需要在进行参数设置、数据限制、页面设计就可以 path路径其实就是helper的一个简写，在生产网页的时候还是会转换回基本的url的 在controller中定义的变量，带@的这些基本可以理解成中间量，他们只在controller中运算，在传送给view或者model后就会失效了。 浏览器真是一个重要的角色 人和浏览器之间的交互就两个，分别是request和response。 response分两种，可见、不可见。可见的就是在views上、不可见的就是在model里。 request面向controller，这里就用到了RESTful概念了，request原先用GET和POST两种，在RESTful里面有四个verb如上所述。而，request是通过调用url来实现的，这个功能的背后就是routing也是我们在config/routes里面的设置。 Controller收到request后，对应四个动作，有七个响应（行动）及四个页面。他们通过Verb（动作、方法）和path（helpler、路径）来选择。 不同的对象会有不同的controller文件和views，在rails里生成controller的时候会生产对应的controller文件及views文件夹，七个响应在controller里是有固定名字的，对应其中的四个会有相应的四个自动调用的页面，他们的命名也是有规则的。 如果需要数据，则需要在controller中定义@变量，controller在model和view之间传输数据就是靠@变量。 Controller的@变量和view之间只是数据传递关系，@变量和model之间则是运算关系。 model和数据库之间使用的是数据库语言，但是controller和model之间使用的则是method方法，controller通过method方法完成和model的对话，这类方法本质上应该是属于model的方法（这点需要确认），但看上去对数据库的操作是使用model的method。而@变量和数据之间的关系，就像word应用程序与doc文件的具体关系，在CRUD后，C与U还需要进行保存操作，而D则不用。R就相当于用word打开doc，C相当于在word上新建doc，之后还需要保存到数据库，U相当于更改R或C后的doc，同样需要保存。D则相当于直接在word里删除doc。 params[:id]的意思可能是，从当前的参数列表中提取id这个参数 render是返回某个页面但是不刷新数据，就是不会重新进行一遍controller里面的取值操作的意思，也可以理解成不重新从model里面拿object的意思。 默写的CRUD前面四个是给views传参数用的，后面几个是对model传参数用的。 validates是表示model接受数据时候的限制，这个并不限制controller的输出，而是限制model的输入 render “form”是 &lt;%= render :partial =&gt; “form” %&gt; 的“缩写”，意思是要引用 Partial (局部）页面的方式。大量重复的程式码可以用这样的方式收纳。它的规则是同目录底下的 _xxxx.html.erb，要是其他地址则需写全，比如：”common/footer”或”common/navbar” &lt;%= f.label &quot;title&quot;, :class =&gt; &quot;string optional control-label&quot; %&gt;和 &lt;%= f.text_field :title, :class =&gt; &quot;string optional form-control&quot; %&gt;中，f.xxx表示显示类型，第二个的title表示接受数据对象，后面的class是样式。f,是前面复制的group gem 不是动态载入 Rails 环境的，只有“在 app/ 下开发的程式码”是动态载入，所以当有 app 外的档案被修改，都应该“重开”治百病。动态载入可以这么理解，就是这类动态载入的内容在程序运行期间是会不断发生变化，也就是刷新的。所以，新的变动会立马发生变化，但是类似GEM这些在程序一开始运行的时候载入后，后面就不会变动了。 在 Restful 的概念里把这个 groups 叫做 resources，“一组资源”的意思。 为了要控制它的运作，我们会创建一个新的 Controller文件 叫做 groups_controller.rb、 这七个 action ，是每个CRUD功能里最基本的动作。只要我们在 controller.rb 里定义 (def) 好这七个方法当作动作 (action)。其他的部分 Rails 就会帮我们处理了。 比如，设定 Routing (路由) 只需要简单一行: resources :groups,就可以了，所以我们定义好这七个action就算是完成了最基本的后端工作。这样不管浏览器端跑来什么样的请求 (request) ，Routing都会聪明地帮我们导向正确的 action 去运作后续流程。 因为 CRUD 是常见的操作行为，但是大家实作的方式、与网址设计方式不一样。造成很多维护上的困扰。后来就有人发明 RESTful 这个概念，希望用 HTTP 的动作 ( Verb）一起去封装 CRUD 的行为。所以，RESTful实际上相当于一个打包好的CRUD，适用于不同的浏览器。 而CRUD是指四种面向浏览器的四类操作，涉及七个Action，也可以理解为七个动作，以及四个页面。 所以，我们只要做好这七个ACTION，其他的工作rails会帮我们处理，因为其他部分的实际上是通用的程序。只需要进行一些通用设定就可以。 所以，本质上来看ROR就是写好CRUD，设置到config（routes），规定好model，设计好views，再加上一些其他的设置。 使用封装过后的RESTful，CRUD在外部看来就是四个HTTP request。所以提高了兼容性。 resources就是一组资源的意思，在routes中就是表示这是一组restful资源，也即是一组规定格式的CRUD。 ####遗留问题 能否不适用@而直接对数据库操作？ ####涉及资源 网站：LOGDOWN； 网站：全栈营 网页：Rails 还有很多内建验质函式，你可以看这里：http://guides.rubyonrails.org/active_record_validations.html ##Reflective###你要如何形容今天的情绪？ 学习RESTful的时候大脑有过载的感觉，边调整呼吸边喝水坚持学习完了。感觉还是有些理解的不够透彻。 ###今天的高峰是什么？ 加深了对RESTful的理解 ###今天的低点是什么？ 学习的时间长了会有疲惫感。 ##Interpretive###我们今天学到了什么？ 大脑有过载的感觉时，边调整呼吸边喝水坚持学习完了。 scaffold也许是早起rails内置的，后面虽然功能完善，但一直保留，貌似后面建立程序就不是这么用了。 全栈营的论坛就像个矿场，没事可以去挖一挖。 有五个对象的MVC模型图貌似比四层空间模型好用，在加一个浏览器对象做中介效果更佳。最后画了个六个对象的关系图。 Rails MVC架构、CRUDRails的RESTful是重点内容，要多回顾。 ###今天有什么重要的领悟？####编程知识 本质上来看ROR就是写好CRUD，设置到config（routes），规定好model，设计好views，再加上一些其他的设置。 ##Decisional###我们会如何用几句话形容今天？ 加深了对RESTful的理解。 ###明天有什么计划？ 写ORID 学全栈营","link":"/2017/06/16/20170615-learning-record/"},{"title":"20170616学习纪录","text":"##Objective###今天做了什么？ 写ORID 学习Rails第三课：Rails101第五章 ###关于今天的学习，你记得什么？####新旧知识 devise的使用知识在command line上面显示的很清楚 两个量建立连接其实是先给一个量插入另一个的主键，之后在设置对应的关联 method分内建的功能和后建的，内建的又包括rails原有的以及GEM接入的。 current_user 是 Devise 提供的“正在登入的当前用户”，你可以在 controller 或 view 里面使用它。model不能使用。 !在函数或值前表示不等于，!current_user 表示“现在没有登入的用户” 要想在两个数据间建立关联，首先要选好主键，之后再设置外键，具体就是给被关联量插入主键XXX_id。先产生migration文件，再写入待插入列，最后rake db:migrate 建立关联需要在model里声明，通过has_many :xxxs 和 belongs_to :xxx。 model里面是定义数据结构和数据method（供controller使用） @group.user = current_user里的.user不是.user_id，导致能有两者理解，第一种是.user_id可以省略_id。第二种是.user中的点表示关联，这个命令的意思是关联的用户是当前用户。 在使用url的时候，同时要送出verb类型，这个是routes的必须的，而且在不指定的时候，是有默认verb的，可能是get，就好比在浏览器直接输入地址。 而送出表单的时候，额外的，还需要同时传输表单数据吧？ 创建者确认不需要在new和create中，因为不涉及确认问题啊。 “ = ”是指派，“ == ”是等于“!= ”是不等于。 ####遗留问题 PUT和POST这个动作及数据传输在views页面上具体是怎么完成的？？？ 有没有办法绕过views，直接create、update、destroy数据？ ####涉及资源 网站：LOGDOWN； 网站：全栈营 ##Reflective###你要如何形容今天的情绪？ 写ORID的时候感觉有些疲惫，可能过度提取了，这样会产生厌恶感，要控制好这个分寸，不然会影响学习的热情。 安装devise的时候，意外的体会到其实命令窗已经给我们很多信息了，只是我们习惯性的往下走而不去看它。 ###今天的高峰是什么？ 加深了对devise的理解 ###今天的低点是什么？ 学习的过程中感觉RESTful的应用还有些细节没弄明白。 ##Interpretive###我们今天学到了什么？ 知道什么是Action后，before_action就很好理解了。 devise的安装提示里面就写了，要修改页面运行命令 rails g devise:views即可，命令窗还是给了我们很多信息的，这些显示出来的信息之所以会显示出来，是有原因的。 devise安装好就可以用了，后面的只是设置权限和按钮页面等工作。 当年看电影还在想那些黑客怎么输入代码这么快，怎么记的？现在想明白了，他们就是在打英语啊，类似我们聊天那样，只不过他们是和及其聊天。 从find_group_and_check_permission的使用来看，private函数的声明是在先的，而且在before_action之前，不然他们将不能被before_action及action调用。 ###今天有什么重要的领悟？####编程知识 命令窗口其实给了我们大量的信息。 ##Decisional###我们会如何用一句话形容今天？ 学习有点吃力。 ###明天有什么计划？ 写ORID 学习全栈营","link":"/2017/06/17/20170616-learning-record/"},{"title":"20170617学习纪录","text":"##Objective###今天做了什么？ 写ORID 全栈营学习：Rails第三课：Rails101的第六章和部分第七章 和广州Meetup的小伙伴们进行购书交流 ###关于今天的学习，你记得什么？####新旧知识 关于数据的method是在model里面定义的，并且在view里面又可以使用，比如我们的群成员判断功能。 当要定义多对多关系是一定要使用中间表，通过中间表的两个一对多完成多对多功能 在完成好了多对多的关联后，还要写清楚多对多的两个量的关系，也就是谁是谁的成员，又是谁加入了谁 No route matches [GET] “/groups/1/posts/new”，如前面说的，方法+路径。 教材题目是设计 Post 的 model 架构，设计model就是设计架构吗？ routes是定义资源调用地址的，资源需要你写，但写出来要使用的话还要给他们赋予一个地址 resources :groups do – resources :posts – end就是一种定义地址的方式 数据关联是在model里面设置的，action在controller里面也已经有了，view也是匹配的controller，而controller的文件夹，gourps和posts是并列的，所以这个路径地址实际上影响的只是url。 数据关联的另一个意义，可能还是在于参数绑定，比如：group和post的id同时获取，那么就是post的id在group的id的名下。 命名规则相当于用group_post替代了group 另外还有第八个动作PATCH，但它和PUT一样都是update功能。是同名还是同功能？ 命令git commit -m “add posts nested route”中的，nested意思就是数据关联其实就是巢状链接？nested route的意思是，这个uri了带有关联关系吧？ :only =&gt; [:new, :create]和only: [:new, :create]等效。多参数就加上中括号，若果只有一个参数就不用中括号，其他的一样。 在post里@group = Group.find(params[:group_id])的写法是:group_id，而在group里的写法是:id。是否在每个对象里:id默认是自己model的id，而XXX_id则是你要调用的其他model的标准写法？ 可能在@post.group = @group及@post.user = current_user这类写法里，group和user和group_id和user_id是等效的吧，就像人和身份证号。 用group_path(@group)而不用group_posts_path(@group)，那是因为前者的页面已经包含了我们的信息，而且这样可以少一个post的index的action。 @posts = @group.posts表示一旦建立了数据关联，就可以轻松调用。 method除了是“程序语句”，还可以同时是“功能叙述”。比如，.order(“created_at DESC”)用.recent代替。 Scope是Rails 里面的一个内建 API可以用来包装一些查询式，让代码更直观一些。你可以想像成，拿来包装“常用 query”的方法。 scope是在model里面定义，表明controller里面使用的关于数据的方法应该就是model的方法。 教材的解释，应征了前面关于model和dababase交互的理解。rails的ActiveRecord框架帮我们完成了翻译，下面一句话摘自教材。 教材：“实际上呢，Model 里面的所有语句，看起来是“Ruby 语句”，实际上是 Rails 帮我们“翻译”成为了数据库语句。（这一套叫 ActiveRecord 框架）” 不单单是命令窗的指令输入的返回文字有意义，rails s的运行log也有很多有用信息。 “因为数据库语句也是个“巨坑”，Rails 开发的目的，在于希望程序员专注于“产品”的逻辑设计，而花上少一点时间去纠缠非常底层的细节。在刚开始学习过程中，其实你是不太需要去纠结数据库语句的，大部份你想要捞的数据，ActiveRecord 都能帮你搞定，而且可以“形容”的非常“口语”。” 推送上heroku的程序，不需要bundle install，但是需要heroku run rake db:migrate 要去哪里才能知道，我想要的功能要用什么 gem 呢？*各种功能的gem一览： “RubyToolbox” 涉及到多对多的关系是，就需要建立个中间表，明确完三个表之间的关系后。还要通过命令明确主从关系，比如，教材：“has_many :participated_groups, :through =&gt; :group_relationships, :source =&gt; :group”和“has_many :members, through: :group_relationships, source: :user”，分别先后在model的user.rb和group.rb里面明确关系。这样当捞 user.participated_groups 时，就会捞出“参与的所有群”。如果只执行上面两句命令中的一句，那么只能捞出members或者participated_groups的。 建立联系后，就可以通过activerecord去捞出数据。这个实现了比主从键直接捞数据更复杂的功能。 “=&gt; #&lt;Group id: 8, title: “Board 1”, description: “Board 1 body”, created_at: “2017-06-17 06:37:08”, updated_at: “2017-06-17 06:37:08”, user_id: 2&gt;”和“ =&gt; #&lt;ActiveRecord::Associations::CollectionProxy [#&lt;Group id: 8, title: “Board 1”, description: “Board 1 body”, created_at: “2017-06-17 06:37:08”, updated_at: “2017-06-17 06:37:08”, user_id: 2&gt;]&gt;”的区别在于前者是直接从数据库读出来，后者需要通过ActiveRecord去捞出来。 这个与“2.3.1 :004 &gt; g.user — User Load (0.1ms) SELECT “users”.* FROM “users” WHERE “users”.”id” = ? LIMIT ? [[“id”, 2], [“LIMIT”, 1]] – =&gt; #&lt;User id: 2, email: “2@qq.com“, created_at: “2017-06-16 13:01:10”, updated_at: “2017-06-16 13:01:10”&gt;”的命令直接捞出的User还不一样，更复杂也更强大。 “2.3.1 :004 &gt; g.user — User Load (0.1ms) SELECT “users”.* FROM “users” WHERE “users”.”id” = ? LIMIT ? [[“id”, 2], [“LIMIT”, 1]] — =&gt; #&lt;User id: 2, email: “2@qq.com“, created_at: “2017-06-16 13:01:10”, updated_at: “2017-06-16 13:01:10”&gt;” 还有 “2.3.1 :005 &gt; g.members — User Load (0.1ms) SELECT “users”.* FROM “users” INNER JOIN “group_relationships” ON “users”.”id” = “group_relationships”.”user_id” WHERE “group_relationships”.”group_id” = ? [[“group_id”, 8]] — =&gt; #&lt;ActiveRecord::Associations::CollectionProxy [#&lt;User id: 1, email: “1@qq.com“, created_at: “2017-06-16 12:08:50”, updated_at: “2017-06-16 13:00:39”&gt;]&gt;” 关于数据的方法要在model里面定义，教材上的另一种解释：“is_member_of?(group) 为什么这一段要放在 User 的 model 里？因为它是要被 user 所使用的判断式” 所以要看对象选择写函数的地方，比如join!和quit!就写在user的model里，因为这个是user要进行的操作，而且是设计到数据库数据的操作。 在model的里定义了方法后，还要思考方法启动方式，这个工作是在controller里完成的，如果默认的7个action都不能作为调用途径的话，那么就需要新建另外的action，则需要设置routes和在controller写出对应的action。虽然使用rails console可以使用，但还是要考虑到网站作为面向对象的程序怎么给用户触发的问题。 ####遗留问题 render在Controller里和view里是否一样？ ####涉及资源 网站：LOGDOWN； 网站：全栈营 网址：http://localhost:3000/rails/info/routes 网址：更多 scope 的用法：http://guides.rubyonrails.org/active_record_querying.html 和之前Rails第二课提供的查class的method的页面是一样的。果然method就是针对针对method的，也就是active_record。 网址：要去哪里才能知道，我想要的功能要用什么 gem 呢？*各种功能的gem一览： “RubyToolbox”：https://www.ruby-toolbox.com/ ##Interpretive###我们今天学到了什么？ rails console本质上其实是不需要view和controller而直接使用函数和对数据进行操作的地方。 render的意义，在于回到前页，且数据保留不刷新，包括已经填写的表单数据。 可以不使用@而直接对数据库操作，比如Group.delete_all 在把上面的命令放在@groups = Group.all的下面，在主页依然没有数据，反映两个问题，要么@groups只是指向Group而已，要么程序运行顺序不是按语句从上到下的。 学习的速度感很重要，因为写ORID降低了学习的速度感是很不好的一件事情。 做事永远比总结重要，不要让总结影响做事的效率，要掌握好度。 SQL语句可能倒着读能协助理解。 遇到程序问题是先想着有没有现场的解决方案，如果没有再分解再找，依次进行下去，最后的结果就是自己解决问题。 ###今天有什么重要的领悟？####编程知识 遇到程序问题是先想着有没有现场的解决方案，如果没有再分解再找，依次进行下去，最后的结果就是自己解决问题。 ##Reflective###你要如何形容今天的情绪？ 写ORID写到有点厌烦，然后就不写了，毕竟心情愉快对坚持学习很重要。 ###今天的高峰是什么？ 加深了对model的理解 ###今天的低点是什么？ 学习过程中容易疲劳，导致总学习时长不长。 ##Decisional###我们会如何用几句话形容今天？ 上午还行，下午开始感觉没有什么节奏感。 ###明天有什么计划？ ORID 全栈营","link":"/2017/06/18/20170617-learning-record/"},{"title":"20170618学习纪录","text":"##Objective###今天做了什么？ 写ORID 全栈营###关于今天的学习，你记得什么？####新旧知识 current_user是devise接入的user的model方法，所以能不能被model使用需要验证呢。 Model里面定义的methodview也可使用，比如：.is_member_of? 在一个对象的下面加入action，等于在它的这组资源上加入动作，这除了写代码，需要设置，调用路径和使用方法，这句是在routes里面设置的，”resurces :group do — member do — post :join — post :quit — end — end” member表示这个动作在groups资源名下且是对groups的单个对象进行的操作，post 表示使用方法，join和quit表示的是函数名称。有一个疑问就是，为什么是POST?试了发现在这个程序了，post、get、put、delete都可以，而另外用的abc则不行。难道这个方法名称和地址只是用来启动controller里面的函数用的吗？这个问题先留着，免得混乱 这和groups名下的posts只表示从属关系不同，member涉及到对group的操作，而posts只是在对自己操作，而且是在自己的controller文件里，它只是需要group的相应id而已。 脑袋模拟功能的时候要想到：动作、页面、数据。对应的来设计自己的网页。 运行rails g controller account/groups时，表示了两个信息，一个是我们要形成一个关于group的account，第二个就是我们需要对group对象进行动作。 在routes写入“ namespace :account do – resources :groups – end”只是设定了触发设定的链路，而并不是表示有两个groups，实际上他们操作的对象是同样的group，只不过形成两个controller文件及对应的动作和触发链路。 bootstrap真是提供了不少样式啊。 .participated_groups不用加.All表明，集合量和Group.All还是有区别的，后者相当于对一个抽象的概念进行运算才能拿数据。 如果对应一个url只有一个verb则可以省略verb，比如edit，但如果有多个的话，就需要，比如destroy、update和show这类公用地址的。 几个th和td是默认等间距安排位置的，所以他们的位置会随着网页大小的变化而变化。 在实现destroy功能的时候，漏了 @group = Group.find(params[:id])这一句，居然也能删除。。搞不懂。啊，是因为find_group_and_check_permit这个before_action里面已经有了。 current_user是系统参数信息，所以不用像在group里面打开posts那样还需要送group的值。 虽然附加作业在调用delete和edit的时候有传送group的数据，但是在controller里面并没有用到他们，试了一下，不使用@group来接受也没问题。 simple_format用来修饰网页的，所以它属于helper。或者它本来就是程序提供的helper功能，不过是本身自带还，还是bootstrap带的，还是simple_from带的这个就需要去验证才行了。 后面教材解释了，simple_format 是 Rails 内建的 Helper，可以在生成网页时帮忙把 \\r\\n 翻译成为。 Helper 就是用 Ruby 写的“View 装饰的小方法”，你也可以自己定义。自制 Helper 都会放在 app/helpers 下。 partial 还可以用在循环上。例：“&lt;%= render :partial =&gt; “group_item”, :collection =&gt; @groups, :as =&gt; :group %&gt;”另外一个_group_item.html.erb 要注意区分“git push -u origin master”和“git push —all origin”的区别 和前面不一样，这课要选择推送分支“ git push heroku ch08:master”如果退主分支的话，“ch08：”省略就行了。 root ‘welcome#index’是指root指定到welcome的index ####遗留问题 member表示这个动作在groups资源名下且是对groups的单个对象进行的操作，post 表示使用方法，join和quit表示的是函数名称。有一个疑问就是，为什么是POST?试了发现在这个程序了，post、get、put、delete都可以，而另外用的abc则不行。难道这个方法名称和地址只是用来启动controller里面的函数用的吗？这个问题先留着，免得混乱。 右边的下拉菜单在窗口横向分辨率小于768时，如何正确显示。 ####涉及资源 网站：LOGDOWN； 网站：全栈营 Helper 的意思是“小方法”，View 用的小方法，Rails 内建很多这种有趣的小东西。这里有更多小方法：http://api.rubyonrails.org/classes/ActionView/Helpers/TextHelper.html ##Interpretive###我们今天学到了什么？ 知识的迁移本质上就是从上一个知识提取出框架，然后将相应的具体对象换掉。 貌似只有带挑战而且能快速闯关（不停的活动小反馈）的事情才能进入心流 优化了下ORID的顺序，不知道这个顺序最初是由哪里传出来的 学习过程的理解，可以理解也是一种“中翻中”，或者说翻译，不断将未知的东西翻译成已知的东西，将他们连接起来，最开始的就是观察到的现象和图片、文字连接起来。这么看起来，除了最单一的感受外，其他所有的记忆都是复合体，并不是单一的一个记忆点，而是一个记忆集合，只不过用一个概念把他们连接起来，你在使用的时候连接了这个概念，并且相当于建立了通过连接这个概念而连接它被后其他关联量的链路。 大脑学习的时候可能会出现疲劳感，坚持到它消退，和换个内容学习来消退其实本质是一样的，但坚持下去还是有不会消退的风险，就是疲劳感和厌恶感加深。所以，一定要注意自己的状态，累的时候或者厌倦的时候换个事情做来缓解一下或许是个更好的方法。这个方法应该也可以用在看书上。 有很多拓展工具也，回头一定要细细研究下。 helper有自带的、接入的、自定义的三种。 ###今天有什么重要的领悟？####学习方法 学习过程的理解，可以理解也是一种“中翻中”，或者说翻译，不断将未知的东西翻译成已知的东西，将他们连接起来，最开始的就是观察到的现象和图片、文字连接起来。这么看起来，除了最单一的感受外，其他所有的记忆都是复合体，并不是单一的一个记忆点，而是一个记忆集合，只不过用一个概念把他们连接起来，你在使用的时候连接了这个概念，并且相当于建立了通过连接这个概念而连接它被后其他关联量的链路。 ####编程知识 知识的迁移本质上就是从上一个知识提取出框架，然后将相应的具体对象换掉。 ##Reflective###你要如何形容今天的情绪？ 今天情绪平稳，无大的波动。 ###今天的高峰是什么？ 做附加题作业的时候思路清新动作飞快。 ###今天的低点是什么？ 学习的过程中有些地方理解不够透彻。 ##Decisional###我们会如何用几句话形容今天？ 用回了交叉学习法，英语时间不减少的情况下，编程时间大幅加大。 ###明天有什么计划？ 学习全栈营 写ORID","link":"/2017/06/19/20170618-learning-record/"},{"title":"20170619学习纪录","text":"##Objective###今天做了什么？ 写ORID 学习全栈营 开始做rails101的附加作业。 ###关于今天的学习，你记得什么？####新旧知识 无 ####遗留问题 无 ####涉及资源 网站：LOGDOWN； 网站：全栈营 ##Interpretive###我们今天学到了什么？ 理财的重点不在具体花了多少钱，而在于你还有多少钱，大体花了多少钱。 涉及到新安装GEM的，不止在bundle install后重开 rails s，在设计到相关安装的命令的时候也一样要重开rails s。 教材里的“before_action 后面加的往往是一个 controller 内的 method”说明了controller的action也叫controller的method .destroy_all和delete_all是alixs 把“权限检查”的代码，套用到 update / destroy 上说明两个问题，第一是可以不通过edit来启动update因为前面edit已经设置权限了，这表明可以伪造表单来传送。第二，说明在程序码里面还是按顺序来进行运算的，因为这段代码在保存的那段之上。 在生成post的new的时候需要group是因为，的后面的create的时候需要页面提供group来确定关系，所以虽然在显示这一步不需要，但还是要提供。 拿数据是ror的一个重要内容。 has_many :participated_groups和has_many :members的红色字部分实测可以自己任意取名字。 ###今天有什么重要的领悟？####编程知识 拿数据是ror的一个重要内容。 ##Reflective###你要如何形容今天的情绪？ 今天出门办事虽然过程复杂，但是情绪平稳。 ###今天的高峰是什么？ 做附加作业的时候速度很快 ###今天的低点是什么？ 做的太快，过程中出现了一些小bug，后已修复。 ##Decisional###我们会如何用几句话形容今天？ 办事的缘故，今天的进度不多。 ###明天有什么计划？ 全栈营 ORID","link":"/2017/06/21/20170619-learning-record/"},{"title":"20170620学习纪录","text":"##Objective###今天做了什么？ 完成了rails101附加作业 ###关于今天的学习，你记得什么？####新旧知识 namespace就是域名空间，和资源不同，它没有具体的action，知识一个名字，所以和同层级的资源是并列关系。 调用经过中间表连接的数据时，使用的不是source名称，使用的是在model里面定义的名称。 will_paginate的使用方法有三步，安装、controller使用，页面加上页标。 面向对象的话，可以理解视觉限制和行为限制还有数据结构控制，分别通过view和controller还有model设限制。 ####遗留问题 无 ####涉及资源 网站：全栈营 ##Interpretive###我们今天学到了什么？ 要注意区分push github和heroku 的命令。 ###今天有什么重要的领悟？####编程知识 总结will_paginate的使用方法有三步，安装、controller使用，页面加上页标。 ##Reflective###你要如何形容今天的情绪？ 晚上头疼，已经有段时间没有这感觉了，可能需要休息了。 ###今天的高峰是什么？ 完成了作业。 ###今天的低点是什么？ 头疼，学习学不下去。 ##Decisional###我们会如何用几句话形容今天？ 在解决了一件脱了很久的事情，把作业完成了。。 ###明天有什么计划？ 写ORID 学习全栈营。","link":"/2017/06/21/20170620-learning-record/"},{"title":"20170621学习纪录","text":"##Objective###今天做了什么？ 写ORID 全栈营 ###关于今天的学习，你记得什么？####新旧知识 全栈营的课程框架：懂得拆、懂得做、做得完、卖得动、卖得好 懂得拆（Computational Thinking，User story） 懂得做（Programming，architecture） 做得完（Project managing） 卖得动（Marketing research，Solving value problem） 卖得好（UX，growthhacking） Xdite写ORID的时候，是白天简单记笔记（关键词），然后洗澡的时候回忆下，接着第二天再写出来，这就比我们直接第二天动脑子回忆轻松很多。 cd - change directory ls - list pwd - print work directory rake - ruby make db - database mkdir - make directory rm - remove rails g - rails generate rails s - rails server rails c - rails console 编程要做的事是：观察输入和输出是什么；把大问题拆成小问题；寻找资源；用电脑自动化解决问题； render大致是将数据提交给表单的意思，所以在controller和view里面本质是一样的，controller里面是直接给action表单，view里面是给partial表单。 当老师的情绪影响她做事的时候，她就去睡觉，她解释说因为她的血糖耐心已经用完了，注意力很重要，所以要去休息。 “所有的人都是从镜像模仿开始，掌握基本的高频小套路，熟练之后，才复盘补充、学习基础理论，最后牢固的。” “Computational Thinking =&gt; Programming；在这里给各位总结一下，编程是什么？编程是：观察输入是什么，输出是什么（就是大问题的起始条件和最终结果）；把大问题拆解成可以实作的小问题；在实作过程中找到资源；用电脑自动化解决问题；如此单纯而已。” rake = ruby make ####遗留问题 无 ####涉及资源 网站：LOGDOWN； 网站：全栈营 网站：youtube - extra credits 视频：How to be a developer I 和 II atom package：atom-beautify和atom-block 工具：computational thinking 网站：textcompare.com（slack和论坛上面有） 视频：全栈营直播：1月3日 开学第一课 视频：全栈营直播：1月23日 编程英语 ##Interpretive###我们今天学到了什么？ 程序员的核心技能是：逻辑思考能力；手机工具能力；不断学习能力；交流协作能力； developer的本质核心是解决问题，特别是解决还未解决的问题。 ORID可以用一天的时间慢慢写完 ###今天有什么重要的领悟？####编程知识 程序员的核心技能是：逻辑思考能力；手机工具能力；不断学习能力；交流协作能力； ##Reflective###你要如何形容今天的情绪？ 今天把ORID这个学英语和全栈营的心理负担降低难度了，使得其它学习量一下就上来了，但是感觉脑袋有点吃不消，可能要适应两天。 现在已经可以做到基本理解全栈营课程上面的每一个概念，感觉很费脑。 ###今天的高峰是什么？ 对全栈营课程设计循环的理解上了一个高度。 ###今天的低点是什么？ 容易疲劳，可能是最近没好好运动的原因。 ##Decisional###我们会如何用几句话形容今天？ 开始把之前在全栈学习的内容不断推向更深入的阶段。 ###明天有什么计划？ 写ORID 全栈营","link":"/2017/06/23/1970268/"},{"title":"明志","text":"天地悠悠，人海茫茫。一心不改，道阻且长。 必有事焉，勿助勿忘。忠乎恕乎，至大且刚。","link":"/2017/09/22/know-will/"},{"title":"元学习课2017版学习心得","text":"元学习课元学习课是一门关于怎么学习的课程，它是重点针对类似于英语与编程这类技能类学习而设计的。全栈营的编程课程即是这么元学习课的践行版。所以，同其他课程一样，元学习课是需要践行的，如果学习了而不践行等于是浪费自己的时间与生命。 编程编程最简单的描述就是输入一些东西，然后进行运算，最后输出一些东西。所以，本质上来说，它其实是很简单的一件事情。然而，一般人觉得他难的原因在于，大家并没有使用正确的学习方法。他就如同我们在生活中学习的其他技能一样，重点在于先模仿后理解，比如做菜、踩自行车、走路等等。如果一开始就纠结于原理，不但不能很好的上手，而且还会充满挫折感，导致从入门到放弃。 编程等技能的学习方法元学习课的核心理论主要有三点：1、拼图理论；2、成就感；3、重复训练。 拼图理论拼图理论是指，在学习过程中，将要学习的知识分散学习，而不需要强调从小到大，从前到后。也就是像拼图一样，一块知识一块知识的收集起来。而在收集到足够多的知识后，自然而然就会开始理解拼图之间的联系，这时候如果需要深入学习，再像登山学习一样，从头串到尾，从小概念联系到大概念。 成就感在学习过程中保持持续的成就感很重要，因为一开始的激情很容易退却，如果没有后续的情绪激励则会放慢下来、或者产生厌学情绪，进而很容易放弃。 重复训练由于我们是通过拼图式的方式学习，所以一定要通过多次训练将这些小知识巩固在我们的大脑里，进而形成“肌肉记忆”。正式这些基础的记忆为我们后面的深入学习奠定重要的基础。 游戏化学习游戏化正式运用了上述三个理论点的学习模式，它通过将不同的知识点形成知识块的小关卡，同时以整合知识块形成稍大一些的知识块的模式，使我们一边获得升级成就感的同时，复习旧的知识，不断学习新的知识，让我们在游戏化的学习方式中不断进步。 认知心理学原理游戏化学习的原理是源于人类的大脑认知模式，即左脑模式和右脑模式。左脑模式为分析模式，专注于细节间的解析，而右脑模式则专注于捕捉外界的大体框架。由于左脑模式的分析是基于已有的知识之间的联系，所以在新学一门技能的初始，脑内还没有建立很多相关的知识点，所以这个过程就会相当的“痛苦”，进而容易导致意志力薄弱的同学放弃，而右脑模式则更类似于拍照式的粗略记忆，所以并不会产生解析上的痛苦。因而，我们在学习新技能的初期，为了降低学习的难度于挫折感，可以试着关掉部分或全部的左脑分析功能，让其在学习过程中任期自发的解析，或者留到后期拥有足够的知识点后再从头来一遍理解式的学习。 践行不管是否接受老师的这套理论，但是不妨先假设它是正确的，然后开始行动，行动之后，是否有效就自会明了。 初学者的错误认知基于元学习理论的知识实际上真对应着初学者对于学习的错误认知，初学者通常认为技能学习必须要有天赋、必须看懂每一步、必须从基层原理学起、禁止使用捷径。它们实际上是错误的观念。真是由于使用了这些错误的观念，学习才变得枯燥和难受，进而需要我们咬牙坚持。实际上，取得技能和学会技能是两码事。取得技能即表示我们能够使用它，而学习技能不但表示我们能使用它，还能对它说出一二三四。比如语法、单词、腔调等等。每个人在学习母语的时候，都是先取得，再学会。但是在学习第二门语言和其他技能的时候，却常常想先学会，再取得。事实证明，大多数采用后者的学习都失败了，尤其是编程学习。一方面的原因，是大多数的编程人员，其实并不会教，他们只是想教，但是却没能get到教编程的技巧。在面对这个情况下，我们就需要发挥自学来摆正这个错误的认识了。比如，买一本实作型初学指南，做出小项目，重复做三遍（，之后再去补基础理论知识）。这三遍，可以先复制粘贴一遍、跟着打一遍，边尝试理解边跟着打一遍。这个过程中碰到错误要重点纪录，而且要连解法一起纪录。纪录错误的是因为，能加深印象。而正确的可以不用纪录，因为教材上面有。这样，在跳过一个又一个错误后，我们就可以不断的前进。 大脑运作原理如前所述，根据认知心理学，学习的时候有两个要点：1、初速度要快，形成正循环；2、先利用右脑，形成肌肉记忆。而这是由大脑的运作原理所决定的。具体有以下几个方面： 1、大脑并不善于快速思考大脑在进行快速思考的时候实际上依赖的是习惯，而并非是像慢速思考那样调取各种资源来解决问题。一个例子就是蜡烛、图钉和墙壁。 2、多数的思考，并不是真的思考，而是调用过去记忆所组成的结果人的大脑记忆分为了个区间，一个是工作记忆，另一个是长期记忆。工作记忆区间就像电脑的内存，内容小、时间段、会丢失，但是存取速度够快。而长期记忆就像是外村依旧是硬盘，内容大、时间长、可重复调用，但是存取速度慢。简单的例子就是78的运算和70008000的运算。 3、人是利用已知的事物理解新的事物理解一定程度实际上是记忆。一方面如果它不是记忆，那么我们理解完了以后就不可能记得下来，另一方面他又是在存在我们大脑中的知识点建立连接知识点。这一点和数据库的存储结构有点类似。git的使用指南，实际上就是一个很好的反例，它展示了我们在理解未知事物的过程中是多么费劲。对比的，人类在利用已知的事物理解新的事物时，就轻松很多。本质上，理解未知事物的过程也是在一点一点的把未知变成已知，然后在通过理解建立联系。 4、没有重复的练习，不可能精通任何脑力活正如前面所说，我们进行快速思考的时候，实际上是调用已经形成的记忆。而这些快速调用的记忆又可以称之为“直觉”。他们是保存在大脑里的深刻的记忆，课程里的说法是深焊在肌肉里面的长期记忆。要达到这种程度的记忆，必须通过持续的、大量的、重复的练习，否则不会形成如此深刻的记忆。做不到这一点，对任何脑力活都不可能精通。 5、题海战术以及填鸭教育，有时是必须的明白了大脑的工作原理，就可以明白，题海战术以及填鸭教育，有时是必须的。比如，我们最初的九九乘法表，以及最开始的古诗学习。他们都是通过先种下记忆点的方式，之后在逐步理解。而对于种下记忆点的方式，有两种强化的方法：一种是提取练习，另一种是迁移练习。提取练习是通过靠记忆力将学到的知识回忆或者写下来，之后在于教材或者上一份知识比对的方法来强化相关记忆的。更进一步的，将写下的记忆教给别人，创造出一套属于自己的传播的学问模板。学习之后复习是很重要的一件事的，学习之后不复习，只不过是刷了个脑袋爽而已。而提取练习，就是很好的一种复习方式。迁移练习是指我们在开始学习一个东西的开始，会进步非常快，这有两个原因，一个是因为初期的知识比较简单，另一个是教材设计者设计的比较好。但是当我们要具体使用这些东西去解决问题的时候就会发现适用不出来，这个就叫做新手运。解决这个问题的方法就是换个状况做迁移练习。在这个过程中要秉持取得技能的心态，所以快速取得成就感最重要，而且要明白的是，野路子不需要他人的认可。最终，通过复盘与练习我们就可以将听与学的单条连结，通过教编程无数连结。 要点首先，挑选高频小套路-&gt;练熟-&gt;提取-&gt;教别人-&gt;练习更多小套路。其次，小套路兜出中套路-&gt;练熟-&gt;提取-&gt;教别人-&gt;迁移到兴趣主题 一万小时理论通常是的从平凡到超凡需要经过一万小时的理论是怎么得来的，在业界成为专家通常需要五年，而这五年的时间并不代表说需要五年才能学会，实际上它是在学会以后经过一段积累起才成为了专家。便于编程也是如此，通常需要工作五年的时间才能从入门到成为编程专家。 德雷福斯模型德雷福斯模型将成为专家的道路分成了五个阶段：新手、高级新手、胜任者、精通者、专家。 经验通过执行这项技术，最后促成了思维与技能上的改变。有的人工作了十年，但是水平还是像一个新手一样，那是因为他的十年其实只是一年的有效经验重复了十年而已。 新手新手无法独立完成某个事情，他们完成一个工作会遵循这么一个模式：Standard Operation Procedure。即当X时执行Y。 高级新手能使用基本规则完成任务，能够独立解决问题。 胜任者能把很多经验梳理成规则，属于团队核心。 精通者能提炼出指导性的架构与方法。 专家能创造出方法把所在领域往前推进。人们常常认为业界人员分布在这五个阶段符合正态分布，即胜任者占大多数。然而事实上，是高级新手占多数，也就是说着不符合正态分布。实际比例是，高级新手&gt;50%，精通者&lt;10%，专家&lt;1%。若以通常的职称来评定的话，通常的新手就是指初级工程师，高级新手就是工程师，胜任者就是资深工程师，精通者就是架构师，专家就是大神。而成为一个资深工程师往往需要3-5年。而成为高级新手，只需要400小时。所以，成为高级新手的核心就是如果坚持400小时。一个一秒钟辨别大师&amp;高级新手的方法是，问他们如何坚持学习。教你如何坚持做事的方法论的一般是高级新手，而回答白痴，我都不知道怎么坚持，才有可能是真正的专家。因为能成为专家的人必定是在兴趣之下投入大量的时间，光靠意志力是很难走这么远的。 坚持坚持，是一种很低效的行为。它实际上表明你不喜欢现在正在做的事情，而大师们的坚持，其实是上瘾状态。看上去的坚持，其实只是一种习惯，一种由于上瘾而引发的习惯。即便是之前提到的有效学习方法，即高频小套路-&gt;重复练习-&gt;烧到记忆里，如果没有感受到乐趣，也是很难持续执行的。 游戏化游戏的核心就是建立习惯。所谓游戏，就是根据人类大脑原理，用来“引导建立习惯”的一套系统性公式。它形成习惯的原理是（Habit Loop）提醒行动-&gt;惯性行为-&gt;相关奖励。游戏的本质就是习惯+强烈的奖励。有一本书《Actionable Gamification》，就是游戏设计原理的。主要步骤如下：Discovery（发现这个游戏可以玩）-&gt;Onboarding（获得头几次胜利状态）-&gt;Scaffolding（达成多个胜利状态）-&gt;Endgame（没有胜利状态了，弃玩）。其中Onboarding阶段不能让人不知怎么玩，Scaffolding不能太单调/太难玩，到达这一阶段后，为了让用户不弃玩，会设置大小和时机都会变动的随机奖励，以上用户保持上瘾的状态。所以，好的学习方法应该也能达到这一种，让用户上瘾的状态。然而，事实上很多人在教育之下是极度排斥上瘾的，理由也很简单，因为我们通常上瘾的东西，都是诸如游戏之类的影响生活的事物。然而，大多数的大神，其实也是瘾君子，他们其实并不排斥自己会上瘾的体质，但是会将他们用到合适的地方。这就是他们和普通人不同的地方，普通人无法控制自己的上瘾，所以后来变得拒绝上瘾。对于游戏，我们通常不要沉迷往往是有益处的，但是如果对于学习也如此，那么可能会在学习效果上大打折扣。虽然老师把这两个和平庸挂钩，但是我并不这么认为。事实上，还是有很多大神大师采用的是另一种非常自律的生活方式。当然，如果采用普通的方式没法学一个东西的话，不妨试试游戏化的学习。我个人学习英语就是试过了各种方法，最终尝试了游戏化进而走上正轨的。所以，比起逃离上瘾，不如将自己的瘾安放在合适的地方让他起作用。但是，则需要平时不要抵抗上瘾，而是将它合理利用与转化，这样才不会把你体内的上瘾机制给扼杀掉。Xdite老师的方法是，比如她对一个游戏上瘾，她觉得不合适，就是跑去玩另一个更容易上瘾且生厌的游戏，而通过这个更容易上瘾的游戏，将之前一个游戏的瘾盖掉，进一步的通过这个游戏生厌后，她同时也就对游戏生厌了，这样就不会沉迷之前的那个游戏了。可以说这个方法因人而异，如果是对游戏比较执着的人，我想最后有一定可能还是会跑回去玩之前那个游戏的吧。 如何人工制造“成瘾”游戏成瘾的本质其实是自我价值的他处实现，也就是说，实现自我价值才是成瘾的核心。比如健身族，迷恋自己的身材。学习族，享受性感的大脑。这都是通过这些东西实现了一定程度的自我价值。所以，依据这条理论，有一个方法可以创造学习的自我价值，那就是，将你学的东西拿去教别人。帮别人会收获到变动的意外奖励，进一步变得停不下来。 B = MATBehavior = Motive + Ability + Trigger行为 = 动机 + 行动能力 + 触发点降低行动的门槛-&gt;提高行动的动机-&gt;触发行为的发生 设计自己的成瘾行为能实现的小套路-&gt;帮别人实现自我价值-&gt;得到变动奖励辛苦学习-&gt;苦逼练习-&gt;变成大师，老师说大师没有一天是苦逼的，我不认同这个观点。因为像博尔特这类运动大师，觉得是经过苦逼的练习才有今天的身体素质的。只能说他们练习中通过办法减低难受度，自我价值加强坚持度，但是不能说它们是不苦逼的。心理学上的心流和肉体调整上的还是不一样。虽然，在跑步的某一过程中是会出现心流，但他也是平时训练加前半程苦逼换来的。所以，还要具体的东西具体看。有的苦逼过程还真的就跳不过。但是在学习入门这一点上，确是可以通过元学习理论获得可能的。 总结主题第一周1、学习是拼图2、获得成就感3、重复的训练 第二周1、大脑是如何组织存取知识的2、如何利用肌肉学习巩固知识3、右脑与左脑搭配快速学习法4、用高频小套路攻克一个领域 第三周1、德雷福斯模型2、游戏化 &amp; 成瘾","link":"/2017/09/27/2613282/"},{"title":"Refactor &amp; 效能提升第一章作业","text":"打开一个网站的速度通常取决于三个因素：1、网页文件的大小（和网速决定下载需要的时间，通常一个页面100-200KB，网速通常不可控。）；2、服务器所在位置；3、服务器生产页面所需要的时间（通常100-200ms）。网页打开的时间实际上是由这几个因素需要的时间的累加。网页文件代码通常包含html、css、javescript三部分，他对打开网页的影响就体现在其对下载文件所需要的时间的影响上。后端代码通常包括ruby code以及数据库相关，其对打开网页所需要的时间的影响，体现在它运行代码从数据库拿出相关数据并生成相应的页面和文件需要的时间（也就是从收到quest请求，到routing、controller、model、view的时间）。服务器所在地就简单多了，主要看服务器离使用者的远近（对应相应的地理位置）以及服务器能够提供的带宽，它可以通过使用ping命令查看完成一次封包请求需要的时间来测试。所以，针对这三点我们要提高一个网页的打开速度。其中，提高网页文件的大小属于前端调整。而提高服务器的位置以及服务器产生页面的时间属于后端调整。然而，在进行代码优化的时候我们就不得不考虑一个问题，那就是从那块开始优化的时间投入产出比最高？也可以说，如果使得见效最快。这就需要考虑两个问题，一个是优化需要的时间，还有一个是优化后的效果。比较三者，可以发现调整网页文件的大小和服务器的位置效果最明显。而，调整后端命令，由于本身后端生成页面时所需要的时间量级已经小于两者，所以收效较低。举个例子如下：调整前端架构或搬机器：从 10s 下降到 2s (1s = 1000ms)调整后端代码或数据库架构：从 500ms 下降到 150ms再来看看投入时间，由于服务器通常是成组的，而且调整服务器会涉及到很多问题，特别是跨大区域调整服务器是问题非常多。而修改网页代码以及后端程序生成代码则相对简单得多，只需要对代码进行调整就好。而其中，后端代码往往相互关联所以调整起来规模又会比调整相对独立的前端页面代码复杂的多。所以，综上，优先调整前端代码的时间和效率是最划算的。特别是作为个体户程序员来讲，这个往这个方向思考会更有效率。","link":"/2017/09/27/2613586/"},{"title":"Refactor &amp; 效能提升第二章作业","text":"1.为什么要将 CSS 放在最顶层，将 JavaScript 放在最底层？首先，网页打开的时候会经历一个过程，这个过程中会加载html、还有下载相关文件、执行css和js。由于css是进行页面渲染的，所以通常需要一开始就执行。而如果将css和js文件放在一起，它的下载时间就会很久，这样就会出现画面很久才打开。又因为javascript是进行动作相应的，所以这一块实际上对现实页面的主题影响不大，因而把它放在后面。这样就可以实现页面的快速打开后，才加载js。这不但复合网页加载逻辑，而且也会使得用户在打开页面的时候会有很好的体验。 2.如何尽可能减少HTTP Requests?减少http requestes的方法就是将文件打包下载，而不是多次请求。具体方法，就是将css文件以及js文件合并在一起，而不用分写在多个文件里，进而多次请求。然而，在使用ror的时候，实际上rails已经帮我们实现了这些功能。 3.CDN是什么？请用自己的话解释CDN的英语是content delivery network，直译就是内容分发网络。通常我们读取文件都是之间链接到明确的一台服务器去取得，这样就是收到和这台服务器之间的网络链接所限制，而CDN就是解决这个问题的一个办法，具体的就是我们在取得资源的时候，不是直接连到源服务器。而是连接到这个内容分发网络，它是由分散的服务器组构成，它会缓存一些源文件在分散的服务器中，所以如果同过它取得资源时，如果该内容在他们服务器组中有储存，它就会自动的选择一台离我们最近的服务器给我们回传数据，如果内容在他们的服务器组中没有存储，它们会去源服务器读取文件并发送给我们，同时会进行一份缓存。 4.如何提升自己的网站加载速度？提高自己的网站加载速度有以下方法：1、将css放在Html文件开头，而把javascript放在html文件末尾；2、使用CDN来分发网络资源；3、使用多节点访问网络资源；4、将css/js文件合并在一起；","link":"/2017/09/28/2614655/"},{"title":"安装gem &quot;bullet&quot;","text":"1、打开bullet的github官网网页，认真阅读README.MD文件2、在gemfile文件里，gem rails 及数据库gem的后面加上1gem 'bullet', group: 'development' 3、在config/environments/development.rb里加入初始化命令1234567891011121314151617181920config.after_initialize do Bullet.enable = true Bullet.alert = true Bullet.bullet_logger = true Bullet.console = true #Bullet.growl = true #Bullet.xmpp = { :account =&gt; 'bullets_account@jabber.org', # :password =&gt; 'bullets_password_for_jabber', # :receiver =&gt; 'your_account@jabber.org', # :show_online_status =&gt; true } Bullet.rails_logger = true #Bullet.honeybadger = true #Bullet.bugsnag = true #Bullet.airbrake = true #Bullet.rollbar = true Bullet.add_footer = true #Bullet.stacktrace_includes = [ 'your_gem', 'your_middleware' ] #Bullet.stacktrace_excludes = [ 'their_gem', 'their_middleware' ] #Bullet.slack = { webhook_url: 'http://some.slack.url', channel: '#default', username: 'notifier' }end 由于是本地开发使用的，因此不需要使用发信及关联其他软件，故将相关的选项屏蔽 4、打开localhost:3000，依次打开相关网页测试是否需要进行后端优化5、针对对应的N + 1 Query、Table Scan、counter cache、index来进行优化。","link":"/2017/09/28/2615087/"},{"title":"Refactor &amp; 效能提升第三章作业","text":"为什么后端效能大部分是慢在资料库？如何解决这个问题？主要有两个原因，首先，是因为网页生成代码实际上近乎完成了，大体上只差相关数据而已，相对运行起来会比较快。而数据则需要去数据库里面去，这就涉及到读取和赋值，并最终生产网页。所以会慢一些。其次，是因为有时候数据库和后端代码并不在一个地方，所以本身传输又会占用一些时间。综上两点，读取的数据越多，这相应的时间则越多。而后端的code代码则是基本不变的。解决这个问题本质上就是减少数据读取的时间，具体有4个方法： 1、减少数据请求次数因为在读取数据前，还会进行数据请求，这个过程就会花时间，所以同样的数据量请求的次数越少则消耗的时间越少。 2、提高数据读取效率在读取数据前需要找到数据，但数据量比较大时就会在搜寻数据上就会画更多的时间。所以，使用一些数据寻找技巧就非常重要，而最主要的就是建立索引index，它的本质就是对数据建立分类索引，因而能降低寻找范围进而提高效率。 3、使用更合理的数据结构来索引由于不同的数据占用的存储资源不同，所以在使用索引的时候，如果使用占有存储资源小的数据结构来进行的话，也会减少一些时间。比如布尔值和数值就比时间值快很多。 4、减少数据运算时间在请求数据是有时会对数据进行运算，比如counter运算。所以，相对的就可以事先进行相应的计算并把计算结果存入关联的counter_cache里，这样在请求数据的时候就不需要进行计算，而是直接读取。这样就把读取网页的时间减少了，而是把运行过程留给数据推送后的后端进行。","link":"/2017/09/28/2615176/"},{"title":"Refactor &amp; 效能提升第五章作业","text":"由于商店网站中有订单时间这一项，而且出现在了用户及管理员两个订单页面，而且时间格式可能会更改。所以，针对读取时间且装换类型的语句进行了，helper封装。由于网站中并未出现HTML 与Ruby 高度混杂、该段程式码有很多 if / else、该段程式码衣服穿很多层，所以并未使用helper来输出ruby代码。最后，由于商店是个精简的系统，所以代码并未出现重复，且相关的功能已经实现partial，所以也不需要进一步的partial优化。","link":"/2017/09/29/refactor/"},{"title":"一叶","text":"一叶可知秋， 一叶可障目。 是叶儿的问题？ 是眼睛的问题？ 错错错错错， 这是你脑袋的问题啊。","link":"/2017/10/04/one-leaf/"},{"title":"Javascript连学一月活动总结","text":"一个月的时间，很快就过去啦。一个月来在老师的带领下学习和复习了很多的知识点。关于知识点的总结在问题里还有老师的总结里已经写得很详细，我就分享一下心得体会吧。首先要检讨下自己，由于中间好友结婚去帮忙所以有几天的学习是后补的。好在学习这个事情永远都躺开大门，只要你想学，知识永远在等着你。在上老师的JavaScript入门课之前，我实际上并没有真正接触过JS。虽然有着大学C的基础，以及先前学习过Ruby on Rails框架的基本套路，但我始终没有搞明白在底层的数据结构和上层的功能之间究竟发生了什么，也就是他们是如何打通的。这个疑问我最终在老师的JS入门课上找到了答案。然而这个答案只是思想上的答案，它并不能使我立即懂得Ruby的基础，也不能使我立即拿起C的基础去实现高级的功能。它只给了我一个方向，至少要先把一门语言的知识从下到上真正打通。这时我就面临了是往上学JS还是往下学Ruby的问题（直接抛弃C）。由于JS和HTML及CSS一起构成了前端三大件，在深入学习ROR过程中也早晚需要学习，加上在JS入门课时已经在看了部分犀牛书，因而选择优先深入学习JavaScript。就在我慢慢啃犀牛书的时候，老师发起了这个一连三十天的活动。到今天为止，我也就啃到了7.6，更不用说一个月前。然而，这并不影响我参加老师的活动。闭包、索引、Promise、constructor、docker……这一票的概念我也是看到问题后才去翻书、去google的学习的。这是看书学习的两种模式，在面对实际问题的时候往往第二种模式更有效率。第一种模式，类似于我们的对象遍历方法，它是在遍历书上的知识，并为他们在你的大脑里建立索引。而这么做的一个目的无非是为你将来在使用第二种模式解决问题的时候更有效率，能更快的找到你要的东西。个人认为老师这一个月不单为了教给我们一些知识和工具，更重要的是尝试着带我们熟悉这种解决问题的模式。给你一个问题，去找一个知识点；给你一个库，去找它的用法；给你一个需求，去找它的实现。写到这里，不由得想起老师在js入门课第一节和最后一节上说过的话，大意是：我们不希望这门课只是教你们一些套路，我们更希望能教你们一些东西，能让你们去解决问题，能去做出真正的东西来。问题就是我在JS入门课上找到的把编程语言从下到上打通的关键，经过这一个月我更加坚信这一点。在编程的世界里没有多余的东西，因为那会消耗多余的资源。数据类型也好、方法函数也好，它们一定解决了什么问题才得以在编程世界存在，而它们解决问题的方法又能组合起来解决更大更复杂的问题，以此类推直到我们能直观感受到的程序与应用，这就是这些基础知识存在的意义。而打算迈入编程世界大门的我们需要掌握这些基础知识的意义在于，当我们遇到一个未知的问题并试图分析解决的时候，你会发现在这棵发散的问题树的末端，等着你的始终是基本的数值、文本、布尔值、数组、对象、方法、函数、库这些最基本的东西。只有你懂得并正确运用它们，才能将这棵发散的问题树反向收敛，并最终解决你想要解决的问题。诚然，有一些问题不需要太多的知识，可能掌握一两个库就能轻松解决，但另一些问题则不是。掌握越多的知识意味着能解决的问题也就越多。而要掌握越来越多的知识，也即意味着不断的学习。老师带领我们的这一个月，充其量不过是常规热热身而已。","link":"/2017/10/31/javascript-learning-month-activity-summary/"},{"title":"对我影响最大的三位老师（一）","text":"身处这个互联网的时代，向他人学习的方式有很多很多。大到平台大V，小到寻常朋友，我们都可以从他们身上学到很多很多。在这里要感谢，那些不吝给我分享各种知识与经验的各位朋友，谢谢。 在众多我学习的对象中，有三位对我的帮助是最大的，在他们的为人处世中我完善了自己应对世界的体系。因而，把他们三位当作我的人生导师一点也不为过。我在平日的生活以及文章中经常会直白的表示自己受到他们的影响，这回就系统的把他们对我的影响说一说。 每个人最初都会受到父母的庇佑，所以我们最根本的观念是来自于父母。然而，当我们逐渐走出父母的保护，面对着这个外在的世界的时候，自然而然我们要面对这么几个问题，无论你有没有具体的想过，它们就是实实在在的存在于你的行为模式中的。它们分别是：你要成为一个什么样的人？你要如何与他人打交道？你要如何认识与改变这个世界？ 第一个问题是关于自己的问题；第二个问题是关于自己与其他独立个体的问题；第三个问题是如何提高自己解决前两个问题的能力的问题。这三个问题并不是完全割裂的，它们虽然立足点不同，但本质上是相辅相成的。而对我影响最大的三位老师分别帮我找到了这三个问题的答案。他们是罗永浩(老罗、罗哥)、连岳(连叔)、李笑来(笑来老师)。括号里的是我平时对他们的称谓。根据他们分别在这三个问题上，对我的实际帮助来排个序的话是这样的。 第一个问题：老罗、连叔、笑来老师。第二个问题：连叔、笑来老师、老罗。第三个问题：笑来老师、连叔、老罗。为了不太啰嗦，每个人就只说影响最大的问题了。 你要成为一个什么样的人？ 每个人都是有个性的，个性就表示了你在为人处世的时候会有所偏好。在我们这个土地上，在我们心智未开的年纪，总有一帮人会想要告诉你，你要如何如何。他们未必有恶意，很多时候可能还是好心。“你得怎么样怎么样，不然的话会怎么样怎么样。”还在爸妈身边的时候，这种言论对我倒是没有什么影响，但是当我踏入大学开始，这种言论就多了起来。本来这些建议如果只是一种选择标准那也还好，但总有人喜欢把话说的很绝对，貌似你不按他们说的做就吃亏倒霉。可事实是这样的吗？当然不是。在大学第一次知道了老罗，也是第一次知道在这个土地上的各种乱象。更是看到了老罗在选择面对各种“歪风邪气”的时候，依然坚持内心中的那个自我。那会他常说：“真正的勇士敢于直面惨淡的人生。”这里的勇是坚持内心的自我，这里的惨淡是那些社会上鼓吹的你不怎么样就会怎么怎么样。后来，我才明白这叫价值观。对于一类的人来说，内心的自我大于外在的如何如何。这些年，要感谢老罗。他让我看到了做一个有个性的异端并不会必然导致如何如何。这一点在后来的经历中尤其重要。如果你也是一个有个性的人，并且也困惑于自己与周围人的不同，不妨看看老罗。 你要如何与他人打交道？","link":"/2018/01/28/my-three-teachers-one/"},{"title":"对我影响最大的三位老师（二）","text":"你要如何与他人打交道？ 做一个有个性的人，势必会引起那些“没个性”的人的议论，这是不可避免的，谁让个性就是共性的对立面呢。有时它甚至会引起与他人的冲突。可能在观念上、言论上、甚至实际的利益上。在一个鼓吹集体主义的土地上，个性常常是大多数人眼中损害集体利益的行为。如果大多数人眼里的观念就是正确的观念，那么这世界上怕是早就没有多少有个性的人了，可能也不会有首富。因为集体可以投票分了诸如马云、李嘉诚等的财富。可事实并不如此，大多数人还是知道有的事情是错误的，有的事情是正确的。那么，在与人相处时具体的边界在哪里？哪些冲突是合理的？哪些冲突是不合理的？冲突发生时我们究竟采取什么样的行动来应对才合适？这属于哲学中的道德问题。一切哲学问题本质上都是一种选择后的理论，所以在碰到这个问题时我们自然而然也并没有所谓的“真理”。这样看来这个问题是否就是无解了？答案当然不是。若你是个“坏人”的话，这自然不是问题，一切以你的利益最大化为考量。杀人放火会坐牢不能做，沾点便宜推卸责任有甜头那得做。你要是个“好人”的话，这就有点麻烦了。朋友借钱不还怎么办？上司要求欺骗客户怎么办？在一些本该捍卫自己底线与边界的问题上，大多数好人经常会犹豫，甚至会理亏，坏人最喜欢利用这点。得益于连叔，我才可以清晰的认知到个人的边界在哪里，才可以识别出那些“坏人”。无论他们是有意的还是无意的，总之捍卫好个人的边界就是了。当然，连叔教我的可不止这些。在和他学习人际伦理的几年里，还从他那学到了自由、投资、择业、市场、婚恋等等知识。对他，我只能说相见恨晚。","link":"/2018/02/07/my-three-teachers-two/"},{"title":"对我影响最大的三位老师（三）","text":"你要如何认识与改变这个世界？ 当你想明白了自己要成为什么样的人，以及明确了在于他人相处时要奉行什么样的原则。你自然而然会碰到很多现实的问题，虽然现实问题总是存在的，但由于预设了原则，你在解决问题的时候就会少了很多选项。这是由于主观选择造成的，而并非是客观上的不可能。从这个角度来讲，做一个有诸多原则的人确实会比没有原则的人来的辛苦很多。好在尽管现实充满了诸多的限制，但潜在的可能性还是很多的。当我们主观排除掉一些选项的时候，并不表示我们就无好路可走。也许我们只是没有发现它而已，或者发现它了但是没能掌握走好它的方法。这几年常常听到一个叫认知升级的词汇，认知升级说得简单点就是能认知到一些原来没能看明白的东西，包括看到一些原来没有看到的好路。而认知升级我更喜欢另一个词——心智解放。这个词是《把时间当作朋友》这本书的副标题，作者是笑来老师。后来他又写了很多书，除了《人人都能用英语》我都看完了。从笑来老师这里学到了不少做事的具体方法，也有一些理念。这些理念对人的帮助还是挺大的，尤其是你有了明确的目的与方向时。它们即是学习与成长的方法，也是把事做成的方法，更是做自己以及与别人划清界限的方法。不管你要成为什么样的人，笑来老师的东西都能对你有所帮助，哪怕你是要当希特勒。但我深深的相信这一点，当你成长到一定的程度时，你是不屑于当希特勒的。因为成长的下一层级是共同成长，这天然的就需要共赢意识，而这恰恰是大多数笨蛋一辈子也想不明白的道理。从这个角度说，笑来老师也有在认真的改变着这个世界、让它变好。不同于老罗与连叔的是，他是从能力这个不确定性更大的更现实的角度入手。","link":"/2018/02/14/my-three-teachers-three/"},{"title":"健康管理","text":"健康的身体是生活的基石，也只有在健康状况下人们才能更专注更高效的做事。 健康很可能是一个被大多数人选择性无视的话题，虽然仔细考量会发现我们的周遭还是有许多关于健康的宣传，遗憾的是更在意这个问题的往往是中老年人，而且大部分还是中医养生。大部分年轻人反而不太在意这个事情，当然也包括我自己。 我自己是一个典型的好了伤疤忘了疼的人，长年在不锻炼-感冒-锻炼-不锻炼这个循环里。每一次感冒过后就跑一阵步，然后渐渐的又不锻炼了。如果不是我免疫力低下感冒的话，我想十有八九是不会运动的。 因为感冒而跑步的另一个好处是，每次跑几天后感觉个人的状态就特别的好，从睡眠质量到精神状态再到记忆力，方方面面。就我个人来说，健康的身体确实能带来诸多的好处。只是每次习惯这些好处以后，不知不觉的又忘记了这些好的状态是怎么来的。 在这种循环里往复了很多次以后，最近我终于意识到了维持健康的重要性。健康这种东西如果不管确实是会自发的走向劣化的，要维持它需要主动地消耗能量，而要维持这个主动就需要持续的主动意识。 就像规划金钱、时间、注意力一样，健康也是一个需要规划、需要管理的东西。健康管理需要关注三个方面：营养、运动、休息。这三个方面应该算是常识吧，就我个人经历来看，只要有一小段时间没有好好处理这三条中的一条的话，身体就会提意见了。 在这三个方面如何注意网上就有很多资料了，真有心去做的话还是不难的。关键在于自律，在于把它纳入自我管理的内容当中。 仔细想想，身体作为内心的居所、作为与世界互动的桥梁，对它放任自流是不是有点说不过去啊？","link":"/2018/02/21/health-management/"},{"title":"吓跑那只猴子","text":"最近看了Tim Urban讲拖延症的TED演讲——Inside the mind of a master procrastinator，很是喜欢。这是一个轻松愉快的演讲，并没有很多高深的科学理论与调查，是作者的个人体验与总结。但这又不局限在他一人身上，作为一个博客作者，他的这个观点早已得到了不少读者的验证，也包括我。 这个TED主要说的是我们的大脑系统是如何在拖延下运作的，包括我们期望的行为、为什么会拖延以及何时停止拖延。Tim将我们的大脑系统抽象成了三个个体：理性者、开心猴子、焦虑怪兽。 理性者是我们的理性能力，它进行逻辑分析、做出宏观判断、并能制定出那些能实现长期有利目标的重要任务。而开心猴子则不管这些，它只要当下开心，它倾向于做愉快和简单的事情。有时理性者和开心猴子能达成共识，做一些轻松愉快并重要的事，比如吃饭、比如睡觉。 然而大部分时间它们是无法达成一致的，因为很多重要的事情并不轻松愉快，而很多轻松愉快的事情也不重要。每当碰到这种情况，往往是开心猴子占据主导权。这只开心猴子，就是一切拖延症的根源，理性者拿它完全没有办法，任由时间流逝、事态恶化，直到我们的第三位主人公登场。 焦虑怪兽大部分时间都处于沉睡状态，只有我们出现危及时刻它才会出现，比如寒假要结束了寒假作业还没开始写这类。在重大事项上我们之所以不会拖延到尽头全靠焦虑怪兽的苏醒，虽然它的苏醒意味着我们彻底陷入了崩溃的边缘，但有意思的一点是，开心猴子比我们还害怕焦虑怪兽。所以当它苏醒的时候，就是开心猴子溜之大吉的时候，而一旦开心猴子给吓跑了，我们的理性者就可以临危受命专注的解决我们的问题了。 梳理下它们三者的关系，理性者受制于开心猴子，开心猴子受制于焦虑怪兽，而焦虑怪兽对理性者则基本没有影响。由于理性者才是我们做重要事情的主体，因此Tim给出了克服拖延症的对策——唤醒你的怪兽，吓跑 那只猴子。具体方法就是通过主动给自己多设置deadline（可以叫死线、也可以叫任务节点），并时刻紧盯着它。 Tim的这个方法我试了一周，奇效。它不单解释了我过往的一些经历，而且为自我管理时理性脑对感性脑的无助提供了强大的后援。","link":"/2018/02/28/scare-away-the-monkey/"},{"title":"GDP","text":"城市的意义是什么？我认为是交换，大量的交换。尽管现在的物流快递外卖相当发达，但城市作为交换主体的地位是不会动摇的。在大多数县城，你是看不到摩拜和ofo的，送外卖的小哥估计也是看不到的。只有规模足够大的城市里，你才能享受互联网带来的一些交换红利。 可交换的东西很多，基本就两类：商品、服务。除此之外，还有作为交换媒介的钱。如果没有商品和服务，那么钱就是一堆纸。 得益于互联网，很多以前只有在大城市才能享受到的东西现在小城市和农村都可以享受。同样的，一些以前只在特定区域享受到的东西现在也可以在城市里享受。虽然还是有一些东西，只在特定地区才有，比如旅游景点。但不可否认的是，大城市里能交换到更多的东西，更多的商品、更多的服务。而这意味着人们有更多的选择。 GDP是衡量商品和服务提供量的一个指标，虽然有着统计上的问题，但当我们用来进行城市间的横向比较时还是能说明很多问题的。 至于能说什么问题，我就不说了。打开去年的各城市的GDP统计结果，算一算人均GDP。聪明的你会有自己的结论的。","link":"/2018/03/07/gdp/"},{"title":"投身市场","text":"去年的3月13号给前单位递交了辞呈，之后就开始了离职流程，一直到4月1号的半个多月里天天在办公室里等批复。在之后就是去旅游、学英语、学编程、看几本重塑核心观念的书。期间很多人问我工作了嘛？我都会说还没，还在给自己放着假期。这期间发生了不少事情，也并不像我说的这么轻松，这一年并不是放假。过去几年工作很辛苦，但毕竟是体制内的传统行业，大多数问题都是些费心的人际问题。解决这些问题的过程虽然也提高了能力，但是市场积累却是零。这是向往自由的我所不能接受的，我可不想把自己的命运绑在单独的一个企业上。这不单是失去独立性的问题，更是风险问题。这一年长的白头发比过去几年还多，它们反映出了这一年我究竟动了多少脑子。决定一个人的不是他怎么想，而是他怎么做。看书学习这些事情只要愿意谁都会，他们一点都不难，只要你有一点点的耐心。难的是你能不能把你认为正确的东西付诸实践、把你认为正确的事情坚持到底。我常说，对连叔我是相见恨晚。如果早些年我能知道这么一位对社会有深刻认识的前辈，能知道一些市场的观念，那么我是怎么也不会进入体制的。那时的我单纯的以为体制只是公务员之类的，全然不知央企、国企也一并在列。随着时间的推移，一方面对于市场的认识也日渐成熟，另一方面体制对我的影响也日益加深。在2014年初的时候，我就萌生了离开的想法。然而，在父母的几个问题之下，我自己也迷茫了。真想给那时的自己做做思想工作啊。不过好在，做正确的事情永远不算晚。一个人，只要不断成长，就能不断的看到机会。之后的事情，就是奋力一搏。16年底经过在各种学习和兴趣爱好上的大量尝试，我找到了自己喜爱的事物——编程。可喜的是，编程不仅还是一种可以谋生的手段，甚至是还能是改变世界的一种工具。事实也证明，它一直在重塑着我们的世界。但这两点都不重要，重要的是我喜欢编程。我从巴菲特和查理芒格哪里学到的最重要的一条经验不是怎么投资理财。而是要找一份自己喜欢的工作，然后一直做下去。这类工作最大的特点是，你不需要工作的时候也会做下去。而做到这一点，只要你不是智商有问题，你必然在长期做的比大多数人好，比那些只为了钱工作的、那些做自己不喜欢的事的人。找到了想做的事情，自然要付诸实施。为了确认自己真的想清楚，我把决定离职到递交辞呈的时间拉长到两个多月。期间，朋友也劝，家人也劝。时间证明，我是想清楚了，即便是要冒着巨大的风险。更有意思的是，离职的第一天，我就发现风险反而没有我想的那么大，这个时代不缺工作，也不会饿死努力的人。真正需要担心的是那些没有创造真正价值却拿着高薪的人，因为他们根本不配。也正是辞职后的第一天，我为接下来的一年定了几件要做的事情：“我会四处逛逛思考思考人生，同时修补一下几个脑洞还有一块大短板，顺便这几年积攒的仍旧有热情的一些事情做一下。然后，定了方向后会再储备具体的就业技能。”如今快一年过去了，这些事情我基本做完了。这句话我也可以做一下更深层的解释。首先，四处逛逛主要集中在中线的几个城市，还有东南沿海城市。除了散心之外，另一个重要的目的是拓展我的备选城市范围。既然，要面向市场那就不会局限于一城一地，有机会的地方都可以作为求职和发展的备选。大城市的机会还是蛮多的，但考虑到我是定向转行，等于每个城市的机会有受到了限制，所以有必要把几个城市的同一行业机会集合起来考虑。其次，是修补几个脑洞和一块大短板。第一个脑洞就是投资理财，我去北京上了MJ林明樟老师的神奇数字力课。之所以会去上这个课，是因为我是带着房贷裸辞的。我必须考虑到后续现金流支撑不住时卖房后的款项处理问题。另外的脑洞就是，周围环境和人的行为是会影响自己的观念的，这些年虽然一直在不断更新着观念，但保不齐我会在无形中被某些周遭的观念入侵。所以，为了做到这一点我必须与先前的环境进行切割，并且拉出足够长的时间来重塑和巩固那些正确的观念，具体修补方式就是把连叔当年推荐的人生最少五本书给看完了，也正是看完了这五本书我完善了应对这个世界的一个认知体系，成了一个合格的市场人。除了这些脑洞就是我的大短板——英语，我以前英语真的很差，有多差呢？就是高中英语就及格过一次，大学在第三次考试才通过了四级的时候能激动的流眼泪的那种。对于这滴眼泪我要解释下，我的学校是要求强制通过四级的，也就是说没有考过四级是不能毕业的。如果我打算长期做一名程序员，那么英语必然是我新的职业生涯的一个拦路虎，我当时有两个选择，暂时放过它，或者趁着职业空挡把它拿下，我选择了后者。这也就有了后来我屡次推荐流利说的事情的发生。再次，就是把这几年有热情的一些事情做一下这一条。这一条与其说是作为对过去的弥补，不如说是对未来的透支。在毕业六年多快七年后进入新的行业，必然有着很多硬仗要打，有很多基础要补。这个时间我估计可能在两到五年左右，所以加上旅游，我等于提前把未来的玩乐给进行了。后面的就是准备打硬仗了。最后，就是编程这个问题。在学编程的过程中我也走了些弯路，不过比前面的那条六年的弯路好很多的是，在新的道路上我并没有太多的沉没成本。而且，技术选择的不合适也并不是全然无用功，它们多少还是会有些帮助的。一开始，我选择了ruby on rails 入门。本来是打算往这个方向发展的，在这个过程中我很自然的接触了 javascript。纯论技术的话，其实大家都能做很多事情，只是在具体事务上表现出的性能会有优劣，如果脱离应用谈技术都是扯淡。然而，当我们用长期的眼光去看技术和应用的时候，我们会发现这里面同样有着市场的概念，那些应用市场更大的技术未来必然更有前景。另一方面，纵观人类发展的趋势，专业化与分工起到了实质的作用。放到技术层面来说，那就是未来的开发也是趋向于分工化的。结合这两点，我在未来的技术方向上拐了第一次弯，ruby -&gt; javascript。尽管这对于没有工作的我来说又加长了待业时间，也增加了不少风险。但考虑到长期，还是决定再冒一次险。当然，更重要的是，我的粮草、我的现金流还能支持着我。在 javascript 上学习了几个月后，感觉自己具备了找工作的条件，于是准备找工作。但这时又碰到了另一个风水岭的问题，那就是前端还是 js 后端。虽然，一直给自己定位后端，但是对于从0到1的这一次入行工作心理还是没谱，于是咨询了下我的 js 老师徐高阳老师，得到的答复是建议前端。后来，在和他学习vuejs的时候也深刻体会到了，前端开发模式改变带来的变革，以及在技术路上弯道超车的可能性。至此，我的转职方向才算真正定了下来。而后，就开始针对前端工作补相应的知识点，并和朋友了解找工作的相关情况。就在几天前，我把该准备的东西都准备的七七八八的时候，意识到去年刚好也是在这个时间点递交了辞呈和体制脱离。于是，加快了进度并等了一天后，在一年后的同一天，也就是昨天3月13号投出了我的简历。虽然这个找工作的过程会持续多久我并不确定，但我相信市场，相信在市场上每个努力都人都会有更多的选择。最后想对市场说声：让你久等了，我来了！","link":"/2018/03/14/personal-track-join-the-market/"},{"title":"工作三周分享——做前端可能需要的一些知识","text":"转行成为前端工程师三周了，有很多东西想分享给社区的小伙伴，但无奈现在每天都是枪林弹雨，周末和晚上都在狂补基础，时间实在有限，更多的东西等缓过来再分享，这里就先简单的分享下这段时间我觉得对转前端比较重要的东西，很多是徐帅在课上强调过的，还有一些我开始找工作的时候徐帅也给过建议，但是当时没有get到点，现在有了切身体会，所以供小伙伴们参考和补课。1、DOM对象，这是链接HTML/CSS与JS的关键知识点，也是jQuery/Vue等库和框架的底层基础，少了它前端知识会有重大缺失。有的公司不一定用它，但这个知识对于理解前端框架非常重要。2、原生CSS，虽然有很多框架，徐帅也说过用框架会有效率。但是，工作中不可避免会遇到一些框架解决不了的问题，这个时候使用原生的CSS就不可避免。然后，这里重点的是CSS布局。因为布局定好以后基本就是调样式的问题了。3、jQuery，很多公司已经不用这个了，但是还可能有很多公司在用，我公司的一个管理页面就是用的它。所以，有时间的话最好学习一下，而且如果了解了上面提到的 DOM 对象，看jq其实非常快。4、js基础，就像徐帅说的一切都是JS，无论是小程序还是各种框架甚至是google插件本质上都是JS写出来的。js基础越好就意味着你能做的事情越多，在具备基础的html/css知识后，本质上考验的就是你的js基础知识了。5、VUE和小程序，小程序和VUE很像，但是还是有很多不一样的地方，如果要开发小程序，一定要认真看小程序开发文档，虽然有和徐帅学VUE理解会很快，但这不代表你可以直接上来就用。认真看文档是程序员最基本的素质。6、把知识用起来。很多同学跟着学习了好长时间还不知道怎么用，这里反应了两个问题。第一个是没需求，第二个是没思路。（1）工作与不工作对于学技术最大的区别不在于有没有工资，而在于有没有需求。当产品提需求的时候，为了工作我们自然而然要去把知识用起来。但是还没工作的同学就没有这个条件。那怎么办呢？自己找需求。方式很多，比如做老师布置的作业、做自己想做的东西、到freecodecamp上做题以及问问工作了的同学在做什么，只要你想给自己找需求自然找得到。（2）有需求后很多同学做的时候会没思路，这个问题其实不单没工作的同学会遇到，工作了的也会遇到。除了多看基础多思考外，更高效的方法就是多看别人的Demo，demo就是别人写好的项目代码，最好看类似项目的开源代码。这个过程里不单可以直接把部分代码拿过来用，而且可以学习和借鉴别人的思路解决自己的问题，同时这也是运用基础知识的过程，通过这个过程你会发现自己的不足，就可以有针对性的去补基础了。 7、看demo的技巧。（1）有的demo往往很大，这个时候很难下手，这个时候可以试着庖丁解牛。就是需要用什么功能就重点看对应部分的代码。（2）在想弄明白代码作用的时候，可以多用删除和撤销。这样就能很直观的理解很多代码的作用。（3）编辑器搜索，当我们想了解一个变量或者函数的作用的时候，不妨在文件甚至项目里搜索它，看看它都用在什么地方，或者在那里定义，又或者从哪里引入。这对于理解变量和函数有着非常大的帮助。（4）把开发文档、w3c和mdn当作字典来用。虽然google也可以很快查的你想要的东西，但直接使用开发文档或者w3c和mdn来查相关内容效率会高很多，看demo就像看英文文章一样，学过html/css/js就像基本知道了语法，剩下的标签、属性、借口无非就是单词。碰到不懂的查一查，看demo基本问题就不大了。8、photoshop，如果是找做前端页面的工作（比如实习工作），会要求你根据PSD切图还原界面，这是传统的前端做法。psd就是ps设计稿，基本你需要做的就是切图还有写html，再通过css调样式，之后给页面绑接口。如果是找这类型的工作，建议简单学一下PS的基础技能，不算难，学几个具体的PS技能就可以办到了。","link":"/2018/04/07/after-workeg-in-new-profession-three-weeks/"},{"title":"年近三十，非计算机专业，在体制内工作六年后转职程序员心得","text":"三月份转职成为程序员，现在已经一个半月了，虽然转职的路上充满了很多的未知和不确定，但只要方向正确、路径合适，转职成功率还是很高的。回顾自己的转职历程，有些收获也有教训，在这里分享一下，希望对想转职的朋友有所帮助，希望能帮助想改变自己命运的朋友更快的达到目标。 个人基本情况89年生人，大学本科，电气工程及其自动化专业，11年到17年期间在央企工作了六年。 学习过程大学期间有学过c语言、汇编语言、网络应用基础等理工科的公共课。毕业后工作的六年里再无实质性接触过编程，直到2016年度底报名新大全栈营学习ruby on rails，在学习ror期间发现自己对编程的兴趣，于是产生了转职程序员的想法，加之先前的工作做得不是很开心于是萌生了脱产学习的想法，给自己一个空窗期用于学习和思考人生。最终于17年3月底开始脱产学习直到今年三月。脱产期间除了学编程外还认真学习了英语以及研读了一些社科类书籍。学英语是因为它是程序员的玻璃顶，由于打算将编程作为终生职业，所以想趁着间隔年一并解决。研读社科书籍是因为编程只是一项技术，它只有结合具体使用场景才能发挥作用，而使用场景更多时候是由技术以外的东西决定的。之所以要说这些，是想说明如果你只安排学编程的任务，转职根本不需要一年的时间。三月底离职后，我又学习了一段时间的ror，原计划半年后也就是9月份找工作的。结果在8月初的时候徐帅开js课了，抱着补充前端知识以及报了不吃亏报了不上当的199元，我报了徐帅的课程。在上了徐帅的课程后，我开始深入理解编程是怎么一回事，于是学习重点暂时由ror转向了js，并将找工作的日期推后一个月。可万万没想到，徐帅开完入门又准备开进阶课，于是自然而然的又想跟着上了。在这个过程中，一方面全栈营的同学给我反馈了ror在中国就业情况不理想，另一方面我也开始留意到js大发展的趋势，以及ruby衰败的态势。最明显的两个数据就是github去年10月份发出的程序语言排名，以及rails和express两个功能类似框架的star数。于是，徐帅十月份在JavaScript社区办一日一学活动的过程中，我逐渐确定了放弃ruby的路线，改走js路线。后来，自然而然跟着徐帅上进阶课，于是找工作的日期再次推迟。由于先前学习的ror偏后端，所以原计划在进阶课结束后去找nodejs的工作，如果不行再试着找前端或者ruby的工作。12月份的时候进阶课结束，我按计划打算开始找工作，但这时不太确定是先尝试nodejs是否稳妥，于是给徐帅发了条微信咨询，最后徐帅给我打了电话，给的建议是先从前端入手。于是，我就开始补之前略过的一些前端知识html5、css3、bootstrap3，决定补完它们去投简历。万万没想到，这时徐帅又要开vue课。那还能咋办？跟着学呗。于是，找工作的事情就安排到年后了。这期间，一方面跟着徐帅学vue，另一方面补充上面提到的几点知识。就这样到了今年三月份上面的知识我才大致过了一边，并且把简历准备好。 找工作情况三月份中旬开始正式找工作，在主动投简历之前朋友介绍了一家，但不是自己要走的方向就没给简历，之后自己先后一共投了三份简历，一份说不合适，一份没回复，一份约面试然后面试当场就确定入职，后面也没再投过。找工作的平台是boss直聘。找到工作后，上面又有三家主动联系我，但因为现在的工作时间不长都没有去接触。 简历张越张大大在群里说过，找工作最重要的是作品。这点我深表认同，尤其是在简历阶段。在和同期入职的程序员接触了才知道，找第一份编程工作时简历能三中一还是蛮难得的。当然，这是他们说的，究竟如何可能还有运气成分。但，我觉得要说自己简历的优势在哪里，那就是有作品。首先是两个我在学习ror时做好且部署好的网站。其次是和徐帅学习express时做好的博客雏形，虽然没部署，但完整代码在github上。再次，就是github上的commit数。虽然不算多，但近一年也有将近三百条。它们证明了我最近一年确确实实在敲着代码。最后，就是我在学习ror的时候写得一个记录博客。在学js的时候，想自己做出博客再写。。结果现在博客也没部署好，记录也很长时间没写了。。。简历还有一些其他东西，比如知识面，技能等等。这些基本来来去去都是那些，但有一点，如实填写你的掌握程度，或者适当抬高一点点，比如写个熟悉。有了这些，我觉得简历关基本是可以过去的。 面试如果不算找工作前和朋友介绍的公司cto吃饭闲聊的话，我就只面试了现在的这家公司。面试过程除了自我介绍，就是问我简历上的东西。更具体的，就问了我vue和express抄（这里要感谢徐帅一下^o^）。vue的话，问我用来做过什么，我就说做过徐帅的那个抽奖及打卡，并且移植到了vue-cli。express就问了中间件和错误前置处理原则。由于两个问题答的比较流畅，他们也没多问，当场就叫hr来谈入职。这里要说一句，碰到这种情况千万不要急着入职，最好再多面两家挑一下。不过我也是因为编程工作零经验，主要目的是尽快拿经验，其它的一律以后在考虑。 心得回看自己的转职历程，发现目标确实不够明确，没有分清轻重缓急。假设时间能倒流，或者我能给过去的自己提一些经验，我会和他说下面这些： 1、如果是想转职，那么应该先以成为工程师为目标，而不要一开始就拘泥于长期想发展的方向，转职是从0到1，转方向是从1到N。先把最重要的事情办了。 2、程序员重经验，所以越早积累好处越大，而转职效率最高的是转前端工程师。这不但是从入门难度低，而且就业需求也高。这一点可以打开招聘app看到，这也好理解。无论什么后端，什么公司，什么内容，最后总需要一个页面去呈现内容或者实现交互，无论是对用户还是对管理者。 3、html、css、js是基础，而js同时也是重点。html除了基本的外还要学一下dom，css的难点是布局，弄好布局其它的都是小问题。有了基础的前端知识以后，熟悉一下前端框架。从使用率和就业市场讲就是徐帅讲的vue还有他推荐的bootstrap。至于其它的比如，jquery，看过dom学起来就和玩似的。而express则是一个加分项，懂点后端的前端工作起来会顺畅很多，但这不是转职前端的必须项。 4、要有自己的作品，以及记录自己学习的证明，github就是最理想的平台。有事没事往上推，而且作品完整度越高越好。不过前端的话，有本地可呈现的页面也就可以了。作品会和需求挂钩，要给自己找需求，没有的话问问工程师朋友，他们都做过什么项目，有哪些简单的自己可以试着做做。 5、学好一门语言再去学其他的，js就是最理想的入门语言，而且日后发展方向多。从使用量和前后通杀的现状来看，必然还会活跃很长的时间，未来哪一天成为编程界的英语也保不准。 6、多在程序员的圈子浸泡，很多概念可能一开始没理解，很多别人讨论的问题可能也没听懂。但，这些概念的熟悉度会提高，这些问题未来的某天可能也会遇到，那时一个聊天搜索或者帖子搜索就能帮你剩下几个小时甚至几天寻找思路的时间。（时间点回到现在，js微信群和JavaScript社区就是很好的技术圈子，已经帮我解决了不少技术问题。） 写给想转职的朋友的其他的话很多事情都是有风险的，包括转职这件事。但这件事的风险也并非不可控，它的风险并不在于你能不能学成编程这项技术，只要你够努力，方法对，学成只是时间早晚的问题。风险在于，如果你想把它当做一门职业，你能不能为市场提供它想要又价钱合理的东西？这涉及两个因素，一个你学的技术是不是市场需要的？另一个是，你是否能拿得出匹配你想要工资的能力？如果上面两者你都能回答是，那么年龄、专业、学历、经历通通不是问题。因为人家要的就是你有他买得起的又想要的能力。 对于这两个问题。 工资嘛，你可以开的低点。大不了中级水平去应聘初级岗，老板肯定高兴得当场想把你签下。 至于你的技术是不是市场需要的这个问题，我敢说你能来到JavaScript社区，这个未来几年已经不是问题了，前提是你够努力。至于几年之后会如何，那就要看JavaScript社区的小伙伴们的努力了。 当然，这里面自然也包括了你，加油哦^o^。","link":"/2018/05/05/the-way-i-transfer-new-profession/"},{"title":"纸上得来终觉浅，绝知此事要躬行——半年工作总结，一年学习总结","text":"转行工作差不多半年了，而学习js的时间，则是一年多。一年的时间里，真的学习了很多东西，在这里要感谢一下徐高阳老师和JavaScript社区的各位小伙伴。 学习知识的总结2017.08-2018.03：脱产阶段学习 学习编程先导课-JavaScript编程入门（在花了超值的199买了入门课程后，开课前补看的） 学习JavaScript编程入门（认真的完成了每节课的作业，上完课后获赠了《Head First HTML5 programming》） JavaScript编程入门结课后按徐帅的推荐开始看犀牛书 参加了JavaScript社区的十月每日一学，连学三十天活动 学习编程幼儿园—快速攻破编程学习障碍课程 学习Web与网络基础先导课 学习JavaScript进阶先导课 学习Web与网络基础课 学习JavaScript进阶课 向徐帅请教找工作建议，徐帅建议从前端入手 学习HTML5和CSS3（以前学过一次html和css但没有学5部分还有3部分） 学习bootstrapUI框架 学习VUE课程 学习vue文档基础部分 准备简历，重点梳理自己学过的知识和完成的作业及项目写到简历上 2018.03-2018.09：工作阶段学习 学习使用原生接口写页面交互，重点学习了DOM知识及相关API 学习小程序开发，结合徐帅在JavaScript社区里关于小程序的描述及vue的思想来学习小程序开发文档 学习Chrom插件开发，重点看了几篇网上的Chrome开发指南 学习用原生CSS写样式，边用边学，但一开始重点学习了CSS布局相关知识 学习使用Postman测试后端提供的接口 学习跨域相关知识 学习http请求相关知识、axois库及辅助库qs 学习使用chrome开发工具排查接口及样式问题 学习自适应布局，小程序中通过rpx 了解mpvue, wepy 学习使用图形界面给后端搭好的服务器放静态页面 学习jquery 学习vue文档router部分和vuex部分 学习给站点js嵌入广告 学习给站点检查sdk及排查木马植入 学习如何防御DDOS 学习如何防御http劫持攻击，了解IIS的配置方法 学习防盗链相关知识，顺道学习了NoSQL和了解redis 学习svn操作 学习小游戏开发文档，公司后来取消了开发需求 学习小程序打包编译及埋点原理 实践使用vue-cli起项目，并拆分可复用组件 学习elementUI 学习UEdit 学习Ramda 深入学习promise 实践封装API 学习eslint，后来开发任务重就一直没打开检测 学习async/await 学习webpack相关知识 了解微信第三方开发平台 了解grunt、gulp、npm等前端自动化手段 学习写windows的cmd自动化脚本 此外工作过程遇到的很多问题也在微信群还有JavaScript社区找到了答案。比如大师兄的模仿网易云音乐转碟的css文章；于鑫关于import/export的文章；大师姐的风格的要素等几篇文章；学习JavaScript社区家树的箭头函数的几篇文章；至于徐帅的就太多不列举了~有时间的话，每一篇都值得看^o^。学习心得先援引陆游的一句诗：“纸上得来终觉浅，绝知此事要躬行。” 在实战中进步从去年开始就一起学习的同学应该可以看得出来，在工作阶段里我学习的很多东西其实在先前的课上很多是已经学习过的，比如postman，再比如vue组件抽离。 编程有其知识的属性，但更多的是技术。而技术是需要实践的，未经实践的技术很难说被我们真正掌握了。这里可以从两个角度来说，一个是未经过充分的实践，编程的知识并没有在大脑里形成足够鲜活的有效的记忆链接。另一个则是，没有形成肌肉记忆，不能形成一种条件反射式的应用直觉。所以，要想真正掌握一个东西就要把它用起来。 要用就需要给自己找需求，找那种需要技术去解决问题的需求。尽管跟着例子、跟着demo敲这个也是一种提高熟练度的方法，但这种方法对大多数人大多数时候并不能形成其应用技术的思维习惯。换言之，这不是最有效的技术应用场景。 在我看来，最有效的场景是工作！你永远不知道会有什么新需求新挑战在等着你。没有工作条件的朋友，最好能把尽快找到工作，并在工作中实践为目标。这里的工作不单只给别人打工，创业、解决社会一些问题也是。总之，就是能用技术解决问题的需求。 找不到这类需求的同学也不用急，没有新需求的话，我们找别人实现过的需求来自己做也是差不多的，只是这类需求可能少一些刺激与挑战，毕竟没有时限以及属于明确可以实现了的需求。 先举几个例子，比如为了练习vue全家桶（vue-cli,vue-router,vue-vux），可以使用cnode提供的接口，来自己模仿写一个cnode社区出来。比如为了练习小程序，可以使用豆瓣电影提供的接口，自己写一个小程序的电影资讯小程序出来。还比如，可以自己起一个express及mogodb，模拟豆瓣接口提供的数据，自己把数据拔到自己的接口上，在实现一样的接口逻辑。 值得一提的是，经过这种方式的学习，你最终收获的不仅仅是技能，还有简历上多出的项目也就是你的作品哦。 在路径上努力路径通往目标，弄清楚自己的发展方向很重要。我并不认为什么都学一些不好，但人的时间确实是有限的，特别是当你有某个有期限的目标时。学习要有主次，而主次权重是和你的具体目标相关的。这就好比打牌，大家手里的牌数是一样的，但是出牌顺序的不同牌局的结果自然也不同，时间也是一样的。 举个转行的小例子吧，如果某个同学是想转行成为一名工程师，想在这条道路上取得一定成就。而且刚好认同我上面提到的在工作中积累是最快的（上面不是这么表达，但意思是一样的），那么他就会以尽快找到工作为目标，如果他想找前端他应该开始收集html、css、vue、elementUI等就业市场，或者说大多数用人公司希望能应聘者具备的技能，而不是将时间一半分给vue一半分给node。 诚然，熟悉后端的前端会有加分，但加分项就是加分项，总是在基本项之后考虑。当然，有少数公司比较看重综合性和成长性，但我们这里关注的是行业的一般状态或者说大多数招聘公司。如果不是对自己的运气特别自信，还是按大概率的事件来决策比较好。 同样的道理，对于工作中的同学也适用。结合自己的中期规划，学会逆向思考。从你想到达的地方，倒退出到当前自己的脚下的路径，一步一个脚印，踏踏实实往前走。边走边调整目标、方向、路径。路自然就越走越明朗。 在交流里学习编程属于工程学科，所谓的工程学科意思是你不需要从零开始造汽车，大部分时候我们要做的只是组装工作。 老板给你提了一下需求，大多数时候是希望你尽快保质完成，而不是希望你独立完成每一个细节。这是市场竞争决定的，大多数创业公司考虑业务发展的第一要素还是在于又快又稳。这个时候，使用已有的技术实现方法就是优选，除非解决问题的技术方法还没出现需要你们去开拓。 那这种技术实现已经出现了没有？如果出现了已经出现了几种？在已知技术的前提下，我们看技术文档同时做一些适当测试当然是必不可少的，但问题在于你怎么知道有什么新技术呢？ 最近看到了一个对“沟通能力”的解释，就是用信息换信息的能力。这个形容真的好，我们在解决工程问题的时候，很多时候并不是技术手段的问题，而是思路的问题。 萧伯纳说：“你有一个苹果,我有一个苹果,我们交换一下,一人还是一个苹果;你有一个思想,我有一个思想,我们交换一下,一人就有两个思想。”思路和思想也是一样的，虽然我们有github、有各大技术app，但他们和技术交流并不冲突。以前是你有一个解决技术问题的思路，我有一个解决技术问题的思路，我们交流一下我们等于每人具备了两个解决技术问题的思路。现在是你逛github、逛技术论坛、看技术app有100个解决技术问题的思路，我也做类似的事情也有100个解决技术问题的思路。如果假设我们关注的方向不同，那么我们一交流，就等于我们每人具备两百个解决技术问题的思路。如果，我们交流的人再多一点呢？ 嚯嚯，很吓人对不对？ 就我个人而言，这不是空谈。半年来，我有好多次工作遇到问题的时候，跑到群里、跑到JavaScript社区里找思路。JavaScript社区的好，谁用谁知道^o^。 工作心得软技能在成为程序员前，我在前公司工作了近六年。离开时，有种悲壮的伤感，觉得过去十年的积累（因为做的是对口专业的工作）一朝尽弃。 后来在学认真学习js的过程，我发现自己大学所积累的东西并没有完全白费，很多知识是互通的。框架、模块化等等工程思想并没有局限在一门特定的学科中。 再后来在工作中进一步发现，过去工作中所积累的东西也并没有完全白费。一方面虽然继电保护、潮流计算这些专业知识凉凉了，但是故障分析与处理、负载均衡这些专业知识背后的软技能却是可移植的，姑且叫bug分析与处理、访问量负载均衡等等。可移植本质上是因为电力系统和计算机系统甚至互联网这个系统还是具备抽象上的可比性，所以自然也存在可借鉴的地方。 另一方便，处理业务上的软技能，比如项目管理、汇报工作、不同专业间沟通、了解客户需求这些则根本不存在所谓的移植一说，他们直接就是伴随一生的技能。 你可能不禁要问，这些和编程工作有关系嘛？ 有啊！在敲代码之前，我们是不是要先通过沟通明确好需求？在明确好需求后我们是不是要设计好程序的流程及结构？ 在我看来，代码只是用编程语言把我们要解决问题需求的思想方法表达给计算机去实现罢了。徐帅之前说的：“代码只是最后一步。”正是这个意思。 任何工作都分软技能，编程工作的软技能就是这些沟通和思想的东西。而硬技能则是写出让计算机能按预期工作的代码。 那么软技能如何培养比较好呢？自然是工作和交流，当然还有贯穿其后的不懈的学习与思考。 从这个角度而言，无论你是不是在从事编程工作，软技能的积累都已经开始了，无论何时认真对待自己的工作，总不会白费的^o^。 硬技能硬技能也就是我们敲代码的能力了。 在提高代码能力的路上，我自己也才刚刚上路，需要学习提高的地方也还很多，这里就浅薄的谈谈近半年的一点小体会。 先说句废话：“电脑是没有脑子的”。 计算机和互联网本质就是机器，再说一句废话，机器是”死”的，是不会变通的，所以我们的代码最终都必须遵守一些”死”的规范，这样”死”的机器才会去执行。在遵守这些”死”的规范之上，才会有我们发挥的空间。 小到编程语言的词法，中到api文档，大到各种协议。遵守他们是代码正常工作的前提，这些知识都需要掌握，掌握好他们能避免绝大多数bug的出现。 初学入门编程容易忽略这些最基本的东西，但是当工作后才发现，它们又非常重要。是整个工程的基础，而且掌握了他们其他的东西也自然不在话下。 在掌握好基础后，还需要掌握一些常用的数据处理方法及典型算法，以及对一些常用库的掌握，比如ramda、vaild、moment等。更甚至可以试着尝试函数式编程等等这些提高我们开发效率的高端技能。 提高开发效率对程序员是很重要的一件事情，因为它能让老板更开心，让自己更轻松或者更高产。而老板开心自己高产意味着收入的提高啊！！！ 当然，也不能单纯的以开发效率来考虑代码质量。语义性、健壮性、可扩展性、易维护性等也很重要。 语义性，更多的是为未来的自己或者其他合作的同事节约时间，最差不要人家或者自己以后看不懂吧。。。 健壮性，则是保证生产环境的代码别动不动就当机，服务崩掉或者出现预期外结果。给别人打工就要对工作负责，给自己打工就要为客户负责啊。 可扩展性和已维护性要说的就多了，以目前个人浅薄的水平理解的话，就是在语义明确的基础上，合理设计架构，使得维护或者更新升级的时候，代码改动范围及影响范围限制在一定范围内。 这貌似的设计模式要考虑的问题，徐帅又说函数式编程秒杀一切设计模式。而我又还没看，就不继续妄议了，同学们感兴趣的话可以研究下。 写在最后决定我们的不是我们怎么想，而是我们怎么做。 想学编程？ 想换一份工作？ 想过另一种人生？ 选择只属于去选择的人。 写了好多，希望能对大家有所帮助。^o^","link":"/2018/09/14/summarize-for-recent-year/"},{"title":"辞旧迎新（戊戌）","text":"戊戌年即将过去了，今年又经历了很多事情，估计这是每一个认真生活的人都会有的感受。眼看还有几个小时就要新年了，赶紧回顾一下。时间有限简要说说我觉得重要的几点吧。 一、保住了爱情。今年特别忙，先是996995，后来干脆就996了。这个过程了，我感觉最对不起的是自己的女票。忙碌的工作，不单减少我们能交流的时间，而且多数时候下班也累的精疲力尽，很多时候说话的时候脑袋已经不在转了，交流的时候就像没魂了似的。这里要感谢女票的包容与理解，来年我会更加完善我在关系里的表现的。 二、实现了一个儿时的梦想。在我十二三岁的时候产生了一个理想，做一名程序员，后来在高考的过程中遗忘掉了。两年前正是想起了这个被我遗忘多年的理想，最终给我提供了正向的力量，脱离了体制。 三、分享了一些理念。接触了很多的朋友，有一些遇到了一些困惑的问题。由于多年受到连叔的熏陶，在一些朋友遇到问题的时候，从我的角度分享了一些观念。人本质上还是要靠自己，所以这些观念只是告诉他们，在我眼里他们的一些他们没看到的选择。作为自由主义者，我觉得帮人的边界也就到这一步了。 四、认识了一群不错的人。今年任职了两家互联网公司，虽然两家公司都让我觉得冰冷冷的，但是公司里的小伙伴们反而让我觉得很温暖。这是我很诧异的一个问题，一群温暖的小伙伴，为何会组成一个冰冷冷的公司？思来想去，我觉得答案在管理者上。 五、确立了一些新的原则。一年的工作经历，给我带来了很多困惑，这里面也不乏观念冲突。在冲突中，我确立了一些新的原则。这些原则还需要进一步打磨，也还需要实践，暂不分享。 六、积累了客可观的开发经验。今年的996995、996工作时长，以及两家公司的非技术导向型管理，让我经历了地狱式开发。我不是喜欢从苦难中学习的人，也不认为苦难必然会催生成长。只是作为一名成长型的人，很多经历都可以提炼出一些东西。世界上没有白走的路。 七、今年工作的原因，很多好习惯都没能坚持下来。我认为真是变态工作制的弊端。对于这种工作制我是不认同的，第一家是因为转行的第一份多苦都要熬下来。第二家，则是由于个人加入使得团队工作量多了一人份，且小伙伴都是被动型人格，没忍心在Q4关头走。996是我不认同的工作方式，这是牺牲长期个人成长换取公司短期成长的方式。强调一下，个人和公司共同成长才是最合理的工作方式，除此之外，概不认可。 明年，希望能有更多时间花在重要的人身上，有更多的时间热爱生活，有更多的时间运动学习。当然，预期靠希望，不如靠自己。 想要什么样的生活，就要做出什么样的选择。 最后，祝各位朋友新年快乐！","link":"/2019/02/05/hello-to-newyear-2019/"},{"title":"春风又绿江南岸","text":"在经过了一年的忙碌加班后，稍稍静下心来，忽然发现又到了遍地都是股神的时期了。 上周和同事一块吃午饭的间隙，听到一个刚毕业不到两年的同事和另一个毕业不到一年的同事兴奋的交流到：“昨天股票赚了三百多”。 那天的午饭他加了餐，吃了近四十块，在中信广场这本不算很贵，但对比平时，这顿饭充满了乐观的喜悦。作为一个体重不到一百斤的小伙子，他平时也就吃个二十多块。 早在2015年初牛市的时候，当时的几个同事也天天在单位的饭堂里，互相对比昨日收益，早饭、午饭、加班时候的晚饭。那时他们还有一个群，好像叫“冲破一万点”。 后来的事情大家都知道，别说一万点六千点都没到，每日的兴奋交流，也变成了后面的比惨交流。谁谁谁割了多少肉离场，谁的哪支股票被停了牌，谁又要彻底放弃等待下一个牛市。前同事说，冲破一万点后来也逐渐没人说话了。 转眼间四年过去了，似乎新的一轮小牛又来了。听说新晋大妈们纷纷操起家底准备到股市里，大有所为一番。前同事的群可能会再次沸腾吧，只是这一次是为冲破一万点高喊呢，还是为了解套高喊呢。 我问赚了三百多的同事：“你是咋买股票的？买了哪支？” “我兄弟教我买的，买了XX股。” “他很牛逼嘛？” “他玩了半年，有人带他，他一个同事比较牛逼。” 我没在说话了，因为不知道他这兄弟信息准不准，也不知道他这兄弟的同事是否是真牛逼。 隔天中午，前一天和我们一起吃饭的另外两个也是刚毕业不久的同事开始讨论起了开户的问题。再隔天同事们开始讨论起了具体的股票。一如我前同事们当年开始炒股的架势。 他们当中或许会出一个真正的股神，也可能大潮退去全身而退。 但人性告诉我，他们更可能成为新一波的韭菜。","link":"/2019/03/10/grass-green-again/"},{"title":"我读《跃迁》：顺心而动，顺势而为","text":"最近把古典的《跃迁》读完了，知道这本书是因为一起学JS的珠海的大师姐半个多月前来广州面基的时候她送的。 拿到书的当天晚上我就看了起来，光是在看几位大牛写的推荐序的时候，我就知道这本书不简单，为什么这么说呢，因为除了三篇正儿八经的推荐序外，腰封还有背面推荐的大V就有十几个，徐小平、吴伯凡、李笑来、姬十三等等。我想，看到这里稍微有点眼力劲的你应该也能看出点端详了吧？ 要知道在一个IP时代，大V们普遍还是很看中个人声誉的，推荐书这种事情可不单单是顺水人情这么简单，想要推荐关键还是得有料。 《跃迁》顾名思义，讲的就是“跃迁”。这个跃迁既可以是人生等级的跃迁，也可以是能力等级的跃迁，还可以是职位的跃迁。之所以如此，因为本质上都是个人的跃迁。在书中，古典划分了三个次序：认知跃迁、能力跃迁、能级跃迁。经过这三个阶段，你就会收获一个跨越式成长。而这就是本书所谓的“跃迁”。 本书一共有五章，前四章讲述跃迁的方法论，而第五章则偏向于信念，讲述的是古典关于跃迁的内在动力也既他所说的心法。 第一章说要想成为高手，实现跃迁必须要懂得“利用事物规律，放大个人努力”，属于贯穿本书的一章。 接下来第二章开始讲了我们要利用的“规律”，即由“幂律定律”揭示的头部效应。本章的核心就讲一个道理：无论身在何处、在做何事，要往“头部”靠拢。这既适用于就业、择城等个人选择，也适用于做好本职工作等个人努力。说得更直白一点，在面临选择的时候要选择头部。在选择既定的时候时候，要在方向上努力进入头部。 第三章承接第二章主要讲如何提高自己的认知效率、学习效率、构建自己的知识体系。在古典看来，学得更快，学得更好，意味着更强的选择能力、解决问题的能力。也既，能更好的完成上一章的选择头部、进入头部的战略。所以，本章其实是实现上一章的方法论中的基础能力部分，也既个人的内在提升部分。与内在提升对应的就是与外在交互的部分，也既接下来第四章的内容。 第四章，讲的是我们如何从时间的维度及空间的维度去解决我们在现实生活中面临的问题，这一章是本书的核心方法论所在。时间和空间的描述我觉得不是很清晰，我觉得更好的说法是，看得更远、看得更深。其中看得远，只讲了“轮回问题”模型，提供的方法论是打破负循环，建立正循环。而看得深只讲了“系统”模型，提供的方法论是多层布点。 最后的第五章，古典讲了在应用上述方法论时的内在选择。即，我们看世界、看自己、看人际的出发点。这一部分更多的是个人选择，而非方法论。就好像一副扑克牌，1、2、3的大小问题是可观的。而打牌的时候，先出1还是3，又或者是2，这就是个人选择了。这一章，可以归结为是古典基于观察及个人人生体验提出的一些面对人生的底层方法分享。 自打进入IT以来，我的加班一直很多，个人时间严重被占用，诸多好习惯也停滞了。在我个人反思过去一年加班得失的时候，看到了这本书。第一个冲击我的是“聪明的勤奋”的观点，我不是一个不勤奋的人。但，近年的观察确实注意到了一些有趣的现象，那就是同样的努力放在不同的地方，结果能差很远。是努力不对嘛？不是，努力是基础。只是我们要在正确的方向上努力，以为努力能解决一切问题，那是思考上的偷懒。这和那些勤奋上的偷懒的人没有本质的区别，唯一的区别是，如果对方是一个勤奋上偷懒的人，而选择上勤奋的人，你可能连他都不如。所以，为了维护努力的勤奋的好名声我们要做什么？ 聪明的勤奋。 我们要把勤奋交给聪明的选择，而不是交给运气。这是本书对我最大的提醒，提醒我过往我留意到了却没有认真思考过的，选择大于勤奋的问题。除此之外，还有很多提醒我的观念，但最重要的问题是这一个。 对于这本书我也是有一些不认同的地方，仅举一例。里面说了功利的学习法，或许为了打破常规的学习法，所以古典强调这个，但我认为他忽略了一些问题。那就是，功利的学习法的目的在于找到答案。而我们的阅读除了找答案还有体验历程、提高逻辑等等。不同的读书方法有不同的使用场景，我觉得这是古典没有意识到，或者意识到了但没说的。 书里还有很多的观点和方法论，推荐每一个人不能了解下面这句话的人都去看看：“取势、明道、优术。” 这好像是长江商学院的校训，我最近常常在思考这个问题，这里的“势”是什么？是区块链火就去做区块链、AI火就去做AI嘛？ 我觉得不是，我觉得“势”是一种系统性的外在力量，它在于能放大你的努力。 取势在取，我们不是要跟着趋势走，而是要借助趋势加快实现我们的目的。 有网友给这句话的前面加了一个词，甚是喜欢。 “正心、取势、明道、优术。”","link":"/2019/04/15/follow-your-heart-then-use-the-trend/"},{"title":"恋爱就像照镜子","text":"每个人对自我的认知都是有偏差的，当然，我们对他人的认知也是有偏差的。所以，真实的我们究竟是什么样的其实很难说的清楚。能说清楚的往往只是其中的一些侧面，再考虑人在时间中的变化，那么我们究竟是什么样子的，那就更说不清楚了。真实的我、我眼中的我、他人眼中的我从来都是不同的。真实的我究竟是什么样的，往往并不重要。我们通常更希望自己是自己眼中的那个模样，至于真实的我究竟是不是自己的认为的、希望的那样，那就很难衡量了。大部分时候，我们还是倾向于认为自己就是那个样子的。直到某天从某个他的口中我们听到了不一样的看法。“啊，原来是你是这样看我的。”“什么我既然会是这个样子的？”我们究竟是什么样的，并不取决于我们怎么想，而在于我们怎么做。我们在独处的时候，很多需要多人参与的行为是无法发生的，因为我们在此种情况下究竟是如何的，那也真的只能是凭空想想而已。就好像一个没有做过程序员的人，和你说996很轻松，那是不靠谱的。如果他甚至要开编程课，你十有八九是会嗤之以鼻的。这些事情，即便是做过程序员的人也未必说得一致，何况是一个没有实践经验的人呢。这里面的问题在于，他的观点是没有实践支撑的，因而他对于事物的认知也就停留在想想。而就像我们上面所说的，想法并不等于实际。我们看一个人靠不靠谱，并不是要听他怎么说，而是要看他怎么做。看他做过的事情以后，你才能衡量他说的那些东西是否是他做过的。思维的大多数形式，还是语言。所以，一个人说的东西，如果如其所想，而他又不是不说实话的人，那么他的话语就反映了他的想法。对于一个言其所想的人而言，当你发现其言行不一的时候，就可以知道，他的自我认知出现了偏差，亦或者你对他的行为认知出现了偏差。对于一个亲密关系中的个体来说，无论是哪种偏差，都是需要进行自我认知的校验的。恋爱就像照镜子。一个独处的人，是无法发现自我认知的偏差的，甚至对自己的认知存在的巨大的盲区。我们在他人的面前展现越多真实的自我，则越有可能发现自己不知道自己的那一面，也越可能发现自己在有的方面和自己想得不太一样。而与他人交往的最深层的关系，当属情感关系。在情感中，我们认识他人更认识自己。有时或者有一些困惑和沮丧，这是纠正一切认知偏差都会发生的事情，因为他们在否定那个“自以为是”的自我。然而，正视他，我们才有可能成为更好的自我，成为我们想要成为的那个自我。以前没谈恋爱的时候，很多人和我说，你要谈恋爱，你怎么能不谈恋爱的。问及他们理由的时候，总是留出一丝诡异的笑容。成年人当然知道他们在说啥。但，仅仅如此么？我觉得不是，在我看来，除了生理需求的满足外，更重要的是下面两点。更开心的生活，更完善的自我。除此之外，宁缺毋滥。","link":"/2019/05/16/love-is-like-look-at-mirror/"},{"title":"我读《动物农场》：不要被猪忽悠，更不要做猪","text":"前不久读了乔治奥维尔的动物农场，在里面看到了熟悉的历史，甚至还有一些熟悉的人。不同于王小波笔下的特立独行的那只有勇气的猪，这里的猪更加聪明，也更加讨厌。农场是一个生产的地方，要生产就需要有劳动，而有劳动自然就应该有所得。理论上应该是一分耕耘一分收获。事实上，农里的劳动分配却是不均的。动物们感受到了剥削，于是偶然的机会，大家造反赶出了人类，建立起了动物的农场。然后呢，经历了一段时间当家做主的热情以后，农场里的动物再次出现了阶级，大多数的动物最终过上了不如从前的生活。这本上个世纪的书，揭示了一些有趣的历史。当然，在如今这个年代，还是有一些神奇的国家在上演着动物农场的故事。这些国家的人，怕是一辈子也看不到乔治奥维尔的这个故事吧。那么，对于极端环境下看到故事的我们，除了希望自己的国家不要变成这种极端情况外，这本故事对我们究竟有没有启发意义呢？有的。因为总有一些人，会想去当猪的。这个故事有多个面向，但是最本质的内核就是劳动及劳动所得的分配。里面的欺骗、暴力、洗脑等等都是为了让某些动物多劳动，而另一些动物多获得。想获得更多有错吗？没有。想劳动更少有错吗？没有。既想获得更多，又想获得更少有错吗？还是没有。有错的是，暴力、欺骗、洗脑。你看，抢劫、诈骗、传销这些，是不是就是当代的动物农场现象？然而，现象不仅于此。这些只是已经写入法律法规的，还有大量在模糊地带的劳动成果侵吞的事情每天都在发生。而且，即便是写入法律的那些现象，在发生之后，诉诸于法律已经是完羊补牢。所以，事前识别这类现象相当重要。怎么识别呢？就是上面说的，是否有人想通过暴力、欺骗、洗脑等不在信息对称情况下，又或是自愿方式获取你的劳动所得。再强调一次，是否有人想通过暴力、欺骗、洗脑等不在信息对称情况下，又或是自愿方式获取你的劳动所得。抢劫、诈骗、传销这些你当然知道了。下面做一些简单的场景分析。给老板打工算不算？如果劳动内容、工时、待遇是提前谈好的那就不算。但是，如果工作后，发现很多之前没谈甚至和说的不一样的情况，那么就是。比如，招聘的时候公司伪装自己的外包公司属性又或者不说明自己996加班的事实，那么就是。购买了知识服务没有达到效果算不算？如果在购买知识服务之初，服务提供方清楚说明了，按照何种方式使用知识服务能达到何种明确的效果那就不算。但是，如果购买知识服务之初，服务提供方含糊其词，对于使用知识服务方式及能达到的明确效果没有给出清晰说明，那么就是。比如，一个叫《30天速成英语》的课程，一来没有说你每天需要学习多少小时，二来没有清晰定义“速成英语”。结果，你以为每天五分钟，三十天达到英语专八水平。但，最终知识服务方的解释是，每天读十六个小时以上，速成英语是指三十天每天能记住十个单词。这种就是通过暗示给你一个预期，然后卖的是另一种不符合你预期的东西，最终解释权还是在对方那。我个人很看不惯这种现象，现在的很多知识服务提供者都玩这种东西，出现的现象就是只能隔一阵子出一个新的课程误导一波新的读者，杖着人口基数大总有收不完的智商税。旁氏骗局算不算？如果是明着的庞氏骗局就不算。但是，如果是明着说一套，背地里说一套的，那就是了。比如，和你说你买一个理财产品，每给月给你50%的回报，然后没有说这些利润何来，且最终无法兑付，那就是了。注意，辨析点在于，能否兑付。如果，不能兑付那就算了。能兑付你赚钱了，就不存在被获取劳动成果的事实。再比如，一个卖家告诉你，我们卖一个东西给你，你要赚钱重点在于你购买某个东西之后，有人愿意从你这里花更高的价钱购买，或者是更多的人买更多份。这里的东西，不管是课程还是虚拟币。只要明确说明了，那么就不算，只能是愿赌服输。信息不对称算不算？那得看情况，如果卖家和你一样不知道某些信息，那么就不算。因为如果他把他知道的告诉你，那么你们之间的信息就是对称的。比如，上面的hr也不知道老板接下来要996，那么他就不是。推荐你知识服务的朋友也不知道，那么他也不是。卖你理财产品的销售不知道到该产品的本质，那么他同样不是。这一条是对信息不对称情况下的补充。同时，它也告诉我们既要防止坏猪，也要防止笨猪。如同动物农场里猪之外的动物，每一只都是受害者，同时每一只都在推波助澜。于我们而言，最重要的是，去收集尽可能多的信息，把问题想得更明白，理性做决策。然后，很多时候，想获取你劳动成果的人是不希望你有理性的。要不通过洗脑搞坏你的脑子。要不通过调动你的情绪压制你的理性。典型的就是贩卖焦虑和贩卖希望的。不否认，焦虑和希望是每个人都会有的，也是确实存在的。但，贩卖者的焦虑是不是真的是你的焦虑？如果是的话，是否真的有那么大的影响？又，贩卖者的希望是不是真的是你的希望？如果是的话，是否真的有那么大的影响？如果是的话，他是真的能做到还是只是一个想做猪的人？","link":"/2019/05/19/do-not-hurt-other-people-and-be-hurt-by-them/"},{"title":"我读《世界为何存在》：体验比结果更重要","text":"从罗辑思维买下这本书很多年了，但是一直没时间看。每每在书架上看到它，心底总会跟着问到那个问题：世界为何存在？ 这个问题由来已久，不单是我个人，更是贯穿了整个人类文明史，或许在文明未形成之时，某个原始人惊异于这个世界的存在时，在语言尚未形成之时，它就存在了。 很多人，或许对这个问题并不感兴趣，做好自己的事情，过好自己的日子，开开心心的不去想那些难解的问题，生活也照常进行，太阳依旧东升西落，一切也没有什么变化，可能还会少一些困惑，多几分知足常乐。 思考大问题时很容易带来困惑，你会直面虚无，你会发现自己的无知，更有甚者会否定存在的意义，否定生活的意义。思考大问题看起来好像不单充满了艰难险阻，还可能让你脑海里熟悉的世界支离破碎。 然而思考大问题也并不是只会带来这些东西。神经病院里究竟有多少人是思考大问题住进去的我并不知道，但我知道的是，很多历史上优秀甚至伟大的头脑都思考过这类问题。在这个过程里，他们留下了不少经典著作，我们往往管他们叫哲学家。 《世界为何存在？》自然是这些著作里的一本。不同以往的是，他记录着当下的优秀头脑们对这个对最新思考。也可以说，记录着人类对这个问题的最新认知。 当然，和人类历史上的每个时期的经典著作一样，他并没得到问题的最终答案，似乎这个问题也永远没有最终的答案，理性总会在某个地方停下脚步。 从这个角度而言，那些说不要想那么多的人，也没说错。想那么多干什么呢，毕竟你也不会彻底想明白。在大多数人的眼里，结果总是那么重要。 世界也常常是以结果来做为衡量标准的。你的考试分数是多少？你的账户余额是多少？你的不动产又有多少？数字作为我们认知世界的工具，同时也成了认知我们自己的标准。然而，数字真的是一切嘛？ 颜色有着特定的光波长，但为什么某个数字的波长会成为你眼里的蓝色？而另一个则是红色？水有着不同的温度，为什么某个温度你会觉得“热”，而另一个温度会觉得“冷”？ 数字可以量化一些东西，做为评价的标准。但，它永远不能代表我们最完整的体验。体验是远比结果更重要的东西。夏天十几度的水往往让人觉得凉爽，冬天十几度的水则往往让人觉得冰凉。 对哲学问题的思考，如果仅仅用结果来衡量，那么它就是0和1的问题。0说明你没有获得答案，1说明你获得了答案。从0出发，往往到不了1，很可能永远是0。 量化来看，一切似乎没有变化，一切都显得没有意义。然而，真的没有意义吗？ 当然不是。过程里你至少能收获智识的体验。当然，这个体验是不是在你的价值观里占有一席之地，则另当别论。 体验是很重要的东西，它能让人直面人生的虚无。如果说人生有什么意义，抛去具体但答案不论，客观地讲它给我们提供了可能仅此一次的终极生命体验。 但话说回来，这一生究竟有何体验呢？做为一个非宿命论者，我更加相信我们的自由意志正是给我们选择自我体验的基石。对于一个内心强大的人而言，不论我们处在何种境遇，我们都有选择的自由，选择我们自我体验的自由。 我们的体验，小则可以卑如蝼蚁，大则可以壮如宇宙。卑微者往往无法察觉自我的卑微，宏大者则往往暗爽于自己的宏大。“天地与我并生，而万物与我为一。”“宇宙便是吾心，吾心即是宇宙。”“一年菩提，便是开悟。”等等都是内心宏大的体验。 但也不是人人都能修炼出这等心境，大多数人而言，我们的寻常体验不过就是喜怒哀乐。如果说分数只会带来痛苦，财富只会带来悲伤。那么这些社会对人的衡量标准于我们还有用吗？ 我觉得没有。 对我们最重要的是那些能带来开心快乐的体验。而苦痛悲伤，应该是我们要避免的体验。我们追求成长，追求财富增长等等，本质上都应该是为了丰富我们的开心快乐幸福体验，如与此相背，则本末倒置。 如果在每一个选择之中，我们能衡量自己短期会牺牲多少快乐体验，又收获多少快乐体验，长期又有则怎样的结果，那么一切选择应该就变得简单了。 遗憾的是，真相和未来往往在于迷雾之中。虽有自由意志，但是很多选择未必那么明朗。一定的经验、犯错和学习是不可避免的。 尽管如此，想明白自我体验的重要性还是非常有必要的。它能避免你在打磨自己选择能力时，朝着牺牲自我体验的方向一路狂奔。同时，你也就能多一个角度看待他人的选择。 有的人行事利益至上，那是因为财富的增长让他体验到了最大化的快乐，或者最小化的痛苦。 有的人行事道义至上，那是因为底线的坚守让他体验到了最大化的快乐，或者最小化的痛苦。 有的人行事疯疯癫癫，那是因为放飞的自我让他体验到了最大化的快乐，或者最小化的痛苦。 而还有的人，做事犹犹豫豫，赚钱觉得低俗了，坚守底线觉得吃亏了，按心情做事又觉得浪费时间，自己吃素又见不得别人吃肉…这群可怜的人，根本不知道自己最想体验的是什么。 让自己体验良好的事情也就是让自己开心的事情。 而让自己开心的事情就是自己心中有价值的事情。 你觉得有价值但没能让你开心的事情其实没价值。 如何让幸福体验最大化呢？ 我目前也没有具体的答案，它就如同如何使财富最大化一样，是个复杂的价值衡量体系。 但我知道情绪是对一个体验的检验标准，归结起来有如下两点， 一、多做让自己开心的事情； 二、不开心的时候，想想为什么。 如果你思考世界为何存在这种大问题会不开心，那就不要想了，哪怕你想得明白。 如果你思考世界为何存在这种大问题会觉得很愉悦，即便你想不明白又有何妨呢？ 很多事情都是这样的，比起结果体验更加重要。 比如这终将结束的生命^o^。","link":"/2019/05/29/feelings-is-more-important-than-result/"},{"title":"水滴阅读学习体验","text":"几个月前萌生了考雅思托福的想法，但是考虑到自己的词汇量问题就先搁置了。再过了一个多月，知道了水滴阅读，是从池建强老师的公号上知道的。出于好奇点了一下推荐链接，然后给我跳到了词汇量测试的页面。接着同样出于对自己词汇量的好奇，我进行了测试。 测试完后水滴阅读给我推荐了初心之旅三的课程，是三本童话：《小王子》、《爱丽丝梦游仙境》、《绿野仙踪》。本着年纪越大越需要年轻的心态的想法，我就报了这个课程。 课程是一百天的，完成八十天的学习就能获得实体书，于是我在拿到实体书后，没等课程结束就把他们都看完了。 三个月下来的体会是，童话真好看啊！ 我甚至觉得，童话其实不是写给小朋友看的，而是写给大人看的。当然，还有另一种可能，那就是其实我还是个孩子啊！这非常可能，毕竟我还长着豆豆。 我之前使用过流利说，还写过文章分享。那也是个很好的学习app。但是，流利说有个弊病，那就是学完课程以后，就没啥可学了。只能重复课程，当然这是相当无聊的。 学习英语的目的是把它作为生活的一部分，比如看美剧呀、看英文书等等。流利说侧重于口语，所以在阅读和美剧上面，总是差一点点。当然，有了语感对看美剧和看英文书还是很有帮助的，只是词汇量真的是一道坎。 最典型的场景就是当你看着美剧，能听出他们的每一个发音，但是就是不知道他们说的是什么词…又或者你能一目一行的扫过一句英文，偏偏有一个词汇不懂。 词汇不像帅哥美女，能让你一眼就能记下来。他更像我们这些大众脸的普通人，要想从人堆里认出来只能多接触。背单词书是一种方法，但大部分和我一样的凡人是抗不住的，太难受了。我十分肯定，能经受住单词书的无聊的人，如果能保持那种坚忍早晚出人头地。 另一个方法就是阅读原著，不过阅读原著也是有个要求的，那就是要有一定的基础词汇量。你想啊，十个单词的句子，你九个不会，咋看下去？这比背单词书还难受。 鉴于此，我的词汇量一直很差，自然我的英语一直也不咋地，直到我后来遇见了流利说。在跟着流利说叽里呱啦的复述跟读的过程中，无意中积累了一定的基础词汇量。这让我在水滴阅读的测试里，达到了中等词汇水平（其实就比文盲好一点），然后我就不用从美国小学语文开始读，而是开始读更有趣味的童话。 兴趣是最好的老师，如果有一定的基础词汇量，可以去测试一下，看看推荐阅读书目感不感兴趣，感兴趣的话可以试一下，没准英语就用起来了。","link":"/2019/07/11/learning-experience-of-dida-reading/"},{"title":"ARTS第一周","text":"Algorithm：1. Two Sum 123456789101112/** * @param {number[]} nums * @param {number} target * @return {number[]} */var twoSum = function(nums, target) { let map = {} for (i = 0; i &lt; nums.length; i++) { if (map[nums[i]] !== undefined) return [map[nums[i]], i]; map[target - nums[i]] = i; }}; Review：WebAssembly — Is It As Scary As It Sounds? 作者通过实作一个简单的项目介绍了WebAssembly，里面还应用了几个介绍资源，看完后能对WebAssembly有个大致的了解。 Tip：如何快速搭建一个博客通过Hexo搭建个人博客非常方便，不到半天就能搭好。 Share：Typescript未来会如何？","link":"/2019/07/21/arts-first-week/"},{"title":"typescript未来会如何？","text":"日前，阮一峰老师公开发表了对typescript(后简称TS)未来的不看好的观点。 阮一峰老师的核心逻辑是这样的：1，未来任何语言都可以写前端；2，在此前提下，为了解决js类型问题的ts本身作为js的超集并不具备天生的类型优势；由此两条得出一个结论，既然能用诸如java等强类型语言来写，为何还要用ts呢？ 那阮一峰老师的观点如何呢？我们来分析一下。 未来任何语言都能写前端？其实准备的说，是未来会有更多的语言至此WebAssembly(后简称WA)。浏览器目前的主流工作方式是，通过V8引擎将js代码进行编译，之后交由浏览器更底层的内核来执行。而WA，则是由多种语言转换成字节码交由WA虚拟机执行，而WA虚拟机则对接浏览器底层，其工作原理类似JAVA。从性能上，WA的执行比JS快很多。就像在服务端的JAVA的执行优于JS。 这么说来，好像JS会被淘汰一样。但事实是，就目前来说，WA还不能直接操作DOM。现有的方法都是通过间接调用JS实现，就使用和性能上说，还不如直接使用呢。WA与其看做是JS的颠覆者，倒不如看成是JS的补充者。在强计算的场景下，利用各语言的特长来对客户端的能力进行进一步的扩展。 这么看来，即使很多语言能参与到浏览器中来，但核心地位的JS短期还是不会变化的，而且就目前的实现方案来看。现阶段的.wasm文件还是需要通过JS引入执行就很好的说明了问题。 即便你通过JAVA写了WA，你还是得使用JS。而有JS的地方，自然也就还有TS。 从另一个角度讲，微软背书的TS未来是否也会成为支撑WA的语言呢？如果可以，那也不是一种选择？ 另一方面，JAVA的类型系统更加全面，但也更加复杂。就类型而言，很多人认为JS是自由的，在写代码的时候，不用考虑那么多东西，专注在业务逻辑上，某种角度来说，动态弱类型反而是JS的优良特性。而TS的出现，可以认为正好在JAVA和JS的中间建立了一个桥梁。一方面我们可以用any类型享受到JS的自由，另一方面我们又可以通过明确的类型在编译阶段扫除掉弱类型带来的潜在问题。阮一峰老师认为TS的类型系统不如JAVA就不如写JAVA这一点显然是不对的，因为若如此JS就不会有今天的发展。 JAVA的发展和JS的发展源于他们在不同领域的特长发挥，脱离场景谈语言优劣是没意义的。 typescript未来会如何？ 我觉得就类型系统和WA的发展来判断是不足以得出具体结论的。我更倾向于详细人类群体的惯性。我不认为未来会有很多后端会转职成前端，特别是使用它们现有的技术语言写前端。我更倾向于认为，未来写前端的还是前端。而要它们放弃现有的语言去学习新的语言来写前端也是不太可能的。所以，JS在前端领域依旧会是霸主，而WA的支持语言也并不会把JS、TS排除在外。而在前端项目复杂度越来越高的前提下，TS无疑是前端同学应对复杂工程最优的选择。","link":"/2019/07/21/how-about-typescript-future/"},{"title":"我的博客终于正式上线啦！","text":"搭建个人博客的想法最早出现在2017年初，那会还在学习ruby on rails，想着有空自己搭建一个个人博客网站出来。在此之前，都是在各个平台零零散散写东西，qq空间、校内网、新浪博客、网易loft、部落格、微信公众号。 可以看到，由于网龄较长感觉各大平台都淌了个遍。也见证了各个阶段发布平台随着时间的变迁，微信的出现qq空间没落了，微博的出现新浪博客和校内没落了，网易loft和部落格也是小众，现在也就还有微信公众号还在浪潮上，这也是我目前公开写作的主要地方。但，谁又说的清楚下一个浪潮何时再来呢？ 一开始只是写着玩玩又或者宣泄情绪，更新频率也是变来变去。但时间久了以后，发现自己已经写了不少东西。17年初是写的最频繁的时候，那会天天写ORID，于是萌生了把所有文章统一汇总到一个地方的想法，考虑到平台变迁的规律，加之在学技术，自然而然萌生了搭建个人博客的想法。 万万没想到的是，这一搭就是两年多… 一开始想着学ror的话，就用它搭一个，搭出来丢到heroku上，网速慢的不行，就想着自己搞台服务器部署一下，好不容易部署了，就差域名和UI优化了，结果转去学js了…再然后，学express的时候，把服务器重置了…然后，想着既然学js，那就改用express + vue在搭一个吧。等一切准备就绪，服务器也续费了，域名也买了十年，工信部那边也备案了，就等部署的时候，js的学习进入了单页面应用阶段，于是开始重构博客项目，要写成前后分离的形式。这一步完成以后，就过年了…等过完年，我就开始找工作了，之后就开始了996的快乐生活。而搭建博客的事情也就没有在想过了。 终于，前段时间我结束了一年的996生活，搭建个人博客的事情再次提上了日程，然而尴尬的是我的阿里云服务器过期给注销了…在和阿里云沟通过后，考虑价格因素（双十一至少打对折）我决定等到今年双十一再买云服务器，博客的事情也就推到双十一以后了。 当然事情再一次没有按照我的预料发生，上周我报名参加了左耳朵陈皓的ARTS打卡活动，每周要写一篇技术文章，同时还有写一个汇总贴。考虑到我的微信公众号里90%以上的人没啥技术背景（其实他们也不怎么看…），总觉得在微信公众号上面长期更新技术类文章总是不太靠谱，于是乎又开始想着搭建个人博客了。鉴于之前的项目都没有做什么UI优化，就想先了解个博客模板系统来搭建，之后再买个服务器来部署。 先了解了几个朋友在用的模板，一了解发现服务器都可以省了，技术朋友们之前好像和我说过，但那会没有那么强烈的需求（需求果然是前进的动力啊！）也就没过脑子。于是上周末用小半天的时间，初步上线了（用第三方的东西就快啊）！这两天零零散散给配了域名和证书，还有就是把一部分的数据从之前的平台迁移过来，看起来算是有模有样了。后面有时间的话会把以前在各平台写过的文章都汇总过来，再看看情况考虑一下完善SE0、评论、RSS等功能，但这些都是次要的，发布功能才是最重要的。有一个自己的发布平台感觉还是不太一样的，哈哈哈！ 虽然拖了很久，也还有很多不完善，但不管怎么说， 我的博客正式上线啦！","link":"/2019/07/23/my-blog-formally-lauched/"},{"title":"如何快速搭建一个博客","text":"昨天的文章发出后有朋友问我有没有搭建教程，我当时回答他说是跟着hexo官网搭出来的。事后想想，仅靠官网上的文档是不足以搭出像我这样一个博客的，虽然并不是很复杂，但我自己在使用hexo之前其实还做了些其他工作。昨天复盘了搭博客的经历，今天就来复盘一下搭博客的步骤吧。 我的博客最终使用的是 hexo + Github Pages 搭建的。前者提供一个搭建模板，用于生成博客的静态网页。后者用来部署同时提供了类似 Nginx、IIS 等 http 代理服务。 准备工作 一台安装了 NodeJs 的个人电脑，用来进行文章编辑和发布用，同时也提供文章本地保存，也可以使用Github对项目及文章数据进行保存 一个Github的账号，免费的就可以，需要给电脑和账号间配置好ssh，详见github官网。 一个域名，由于目前主流浏览器对 http 协议都会进行安全提示，所以最好配个 ssl 证书，证书目前有收费的和免费的，免费的就可以 开始搭建 本地系统搭建，按照官网操作即可，命令如下： 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 运行完命令后，本地预览项目就跑起来了。可以通过浏览器打开 http://localhost:4000/ 预览效果。此时可以在项目文件夹内的source/_post下新建文章了，使用的是markdown格式，而且文章的开头需要按照示例的模板填写文章相关信息，详见官网。 在 Github上新建一个仓库，在项目的_config.yml中配置该项目的地址，以及指定推送的分支。之后会把 生成的静态博客页面发送到这个分支上，用来给 Github Pages 发布用。注意，免费账号只能通过 master 分支发布。 做完上述工作后，就可以在本地运行如下两行命令生成静态网页，并推送到我们先前指定的项目分支中了。 1hexo clean &amp;&amp; hexo deploy 上述命令是重新生成我们的静态网页，希望增量更新可以使用下面的命令 1hexo generate --deploy 发布到对应的分支后，在项目的 setting 中的 Github Pages 的下，设置一下 source 选项就可以了，选择你要之前配置的发布的那个分支，免费账户目前只能是master。配置好，就能看到 Github 给你分配的项目地址了，一般是 https://你的账户名.github.io/你的项目名/ 这样的形式，过一会就你打开了。之后，你每次添加完文章后，都需要执行第三步来提交网站更新。 补充一下，这里的项目只是用来发布的，如果需要进行项目管理的话，可以用其他分支来保存项目数据，比如edit。也可以另外起一个github项目来保存，我就是使用的这一种方式。 配置域名到上面我们的完整就可以用了，但是作为个人网站，没有使用一点个人特色的域名总觉得少了些什么。所以接下来，我们配置一下域名。 首先在我们的域名提供商那将我们的域名指向前面 Github 提供的地址。域名指向有几种，我们用的是域名指向域名的方式。 在github的项目中的 setting 中的 Github Pages 的下，设置一下 Custom Domain 填上我们的域名。此时 Github 的项目中会自动生成一个CNAME文件，里面正是你刚刚填写的域名。 到这里我们的域名配置就完成了。但是，Github Pages 有个小bug。那就是我们每次提交更新的时候，项目里面的 CNAME 文件都会被冲掉，需要我们每次都重新填写域名，这非常低效。解决方法是，在你本地项目的 themes 里面的模板文件夹下的 source 文件夹里放入这个 CNAME 文件。也可以直接新建一个无扩展名文件，写入你的域名即可。这样之后，每次更新这个文件会自动部署到你的发布项目中。 最后就是 https 的问题了。若你的域名不支持 https 的话很多浏览器会有不安全提醒，这个时候去给你的域名申请一个ssl证书就好了。申请好了以后，在Github的项目中的 setting 中的 Github Pages 的下勾选 Enforce HTTPS 就可以了，Github会自动去证书提供商那里扫描证书，后面打开页面 https 就正常了。 值得注意的是，域名配置和申请证书都涉及到相应的运营商，不同的运营商处理的速度不一样，所以域名和证书生效的时间也不等，一般最长不超过一天。 持续写作如果一切顺利我们的博客就搭完啦，但你会发现它空洞洞的没什么内容。想要博客丰富起来，只能靠你自己持续的写作了^0^。","link":"/2019/07/24/how-to-build-a-blog-quickly/"},{"title":"ARTS第二周","text":"Algorithm：2. Add Two Numbers 123456789101112131415161718192021222324252627/** * Definition for singly-linked list. * function ListNode(val) { * this.val = val; * this.next = null; * } *//** * @param {ListNode} l1 * @param {ListNode} l2 * @return {ListNode} */let addTwoNumbers = function(l1, l2) { let result; let currentNode; let temp = 0; do { if (!result) result = currentNode = new ListNode(0); else currentNode = currentNode.next = new ListNode(0); temp = (l1?l1.val:0) + (l2?l2.val:0) + temp; currentNode.val = temp % 10; temp = (temp - temp % 10) / 10; l1 = l1 &amp;&amp; l1.next; l2 = l2 &amp;&amp; l2.next; } while(l1 || l2 || temp); return result;}; Review：Simplify your JavaScript – Use .map(), .reduce(), and .filter() 作者讲解了.map(), filter(), .reduce()，以及同forEach做了一些使用上的对比。阅读这篇文章，可以对上面三个方法的使用场景有更清晰的认识。 Tip：这周参加了一个线上面试，一紧张用了for循环去做了字符串对比，哈哈。其实有更高级的接口可以实现，甚至用正则也可以。通过这件事情，体会到平时养成使用高级接口的重要性，遇到问题先结合使用环境考虑一下有没有什么高级接口可以使用，如果没有再去用低级接口自己实现。 Share：await探究我在这篇文章里简单探讨了一下await的一些执行表现。","link":"/2019/07/28/arts-second-week/"},{"title":"await探究","text":"这周在js群里讨论了一道今日头条的面试题，这题考察的是对microtask(微任务)和micratask(宏任务)的理解。题目和输出如下： 123456789101112131415161718192021222324252627282930313233343536async function async1() { console.log('async1 start'); await async2(); console.log('async1 end');}async function async2() { console.log('async2');}console.log('script start');setTimeout(function() { console.log('setTimeout');}, 0);async1();new Promise(function(resolve) { console.log('promise1'); resolve(); }).then(function() { console.log('promise2');});console.log('script end');// output:// script start// async1 start// async2// promise1// script end// async1 end// promise2// setTimeout 这里就不对微任务和宏任务进行深入探究了，这里我们来探讨一个有意思的小问题（假设你已经掌握了微任务和宏任务）。 很多人对于async1 end出现在script end之后，而不是出现在async2之后感到有所疑惑。 出现这个疑惑是因为对await的工作原理不够了解，下面我们来解释一下。 先说说为什么有的人会认为async1 end出现在script end之后。这是因为，在代码的书写上，由于使用了await关键字，所以可以使得我们用同步的代码去写异步的代码。 12await async2();console.log('async1 end'); 很多人会觉得是js引擎在执行第一句的时候会暂停，等异步函数执行完了再去执行第二句，这就是误区所在。async/await的作用只是让我们像写同步代码一样写异步代码，而不是把异步代码变成同步代码。 这段代码还是异步的。 await只是promise的一个语法糖，我们对async1进行一个改写，你就能明白await的运行机制了。 123456789101112async function async1() { console.log('async1 start'); await async2(); console.log('async1 end');}// =&gt;function async1() { console.log('async1 start'); Promise.resolve(async2()).then(() =&gt; { console.log('async1 end'); });} 试着运行改写后的整段代码，是不是发现运行结果是一样的？ 我们在来假设一下async2会返回参数，那么代码改写前后的效果如下： 123456789101112async function async1() { console.log('async1 start'); let msg = await async2(); console.log(msg);}// =&gt;function async1() { console.log('async1 start'); Promise.resolve(async2()).then(msg =&gt; { console.log(msg); });} 我想看到这里你就能明白了吧，这也就解释了为什么通过 1let msg = await async2(); 这样的写法，我们拿到promise拿到的结果。其实，我们并不是拿到了结果，而是把结果传给了msg这个形参。这放映了一个有意思的问题，代码的执行很可能和我们感觉的非常不一样。 我们在来看看上面的改写，不知道你有没有发现什么问题？ 你应该一经发现了，对于promise而言，居然没有catch。很遗憾，这个就是使用await带来的代价。为了应对处理，我们需要使用try…catch来额外的捕获异常。目前还没有更好的解决方案，如果有请你告诉我，博客下面有我的邮箱。 对错误的处理，从另一个角度也说明了在异步嵌套较少情况下（一两层）使用async/await未必是最理想的选择。当然，这还的看业务完整逻辑来判断，比如我们请求一个借口，在封装好的接口内如果已经对错误进行了统一的预处理，那么之后使用await则不用再考虑这个问题。 最后在说一个小小问题，当我们把最开始的代码块放在浏览器里运行的时候，在promise2之后，setTimeout之前会输出一个undefined。这是因为我们通过console输入了一段代码段，而这段代码段会成为当前javascript主线程的执行脚本，在这段脚本执行完后（微任务也执行完才算），会有一个输出值给到控制台，这个输出是脚本最后一条语句/表达式的值。我们这里最后一句是： 1console.log('script end'); 而它执行值正是undefined。","link":"/2019/07/28/make-explore-of-await/"},{"title":"辞旧迎新（己亥）","text":"今年过年不太寻常，但说回来又有哪年是寻常的呢。只能说今年特别不寻常吧。开始写这篇文章的时候已经是初三了，其实假期也不是特别忙。主要前几天刚回来放纵了一把，玩了几天的塞尔达传说。。。 放纵了几天之后，理智也顺利回归了。果然，人还是需要休息的，休息过后的脑子就像是重启后的电脑一样，似乎变快了一些。 旧年又是忙碌的一年，这是我最后一次这么形容旧年了。因为我发现忙碌才是常态，轻松悠闲才是需要特别说明的不寻常状态。 旧年我已步入而立之年，在古人看来这应该是人生的中年，特别是孔子所在的春秋战国。但在现代社会这还不到三分之一，也许还不到四分之一。对于寿命我是相当乐观的，然而三十这道坎也确实让我体会到了一些”不一样“的地方。尽管我一直是那种不运动就会有过敏性疾病来犯的体质，因而也就保持了间歇性的体质锻炼。 但旧年我体会到了不同以往的恢复力，表舅和我说这是三十岁的代谢水平下降导致的。除了恢复力以外，另一个体现就是精力有所下降，更具体的就是似乎身体更容易疲劳了，不过这也可能是年初没做好好锻炼导致的。 然而这并不是绝对的，知道了原因是代谢率降低努力维持好代谢水平就好。这也是我在旧年形成的一个观念，就是自我的“状态管理”。在此之前，在我的自我管理理念里只有“时间管理”以及“期望管理”。现在看了“状态管理”是更为基础的。 最近因为肺炎的事情关注到了钟南山，看他的身体状态，你很难想象这是一个84岁并且还做过心脏搭桥手术的老人。讲真，如果不是别人说的话，你应该看不出来吧？ 我有时会说自己要活过一百岁，做一份喜爱的工作一直到生命的尽头。现在看来，我只是想想而已，并没有未这件事情做真正的准备。对于很多认为“注意力”&gt;“时间”&gt;“金钱”而言的人来说，状态管理正是对应于注意力的那个管理选项。 对于这个链条也可以这么理解，维护好自己的状态才能高效的做事，高效的做事就能节约时间，节约下时间就能更好的赚钱或者理财。而时间与金钱则是优质生活的两个重要基础。 旧年我换了一份工作，来到了新的公司。新公司的采用的是远程办公，这就额外的需要管理好自己的状态。诚恳的说，在状态管理这件事情上面我没有做得很好，特别是天气变冷以后。生活与工作完全杂糅在一起，虽然不再996，也节省出了一天两个小时左右的通勤时间，但是不稳定的工作状态下，实际上又贴进去了更多的时间。这是新年我需要花费更多的时间进行自我的状态管理的另一个理由。 工作繁忙的另一个理由是目前的公司对我有着更高的要求，当然这是好事。在工作中的学习才是最高效的学习，闭门造车、闭关修炼更多的时候只是人们的想象而已。 IT这个行业需要大量的学习，终生学习在其他行业可能只是一种号召，但在IT这个行业则是实实在在的要求。套句古话，“入之愈深，其进愈难，而其见愈奇。” 在紧张的工作，忙碌的学习后面，是被不断满足的好奇心。很幸运能来的现在的团队，很幸运能和优秀的同事共事并向他们学习。世界宽广，知道的越多，不知道的也就越多。当发现自己不知道的越来越多，说明你知道的也就越多了。对技术是如此，对人生亦是如此。 人生是一条漫长的路，我们有太多的东西需要学习，太多的东西需要了解。对世界的探索是没有尽头的，对自我的了解似乎也是如此。 在大一的时候，我们思修老师就给我们讲了古希腊一座神庙上的谏言：“认识你自己，凡事勿过度。”我真正开始认识自己是在工作以后，那会自己对于生活的状态非常不满意。于是乎不断思索着自己究竟想要什么，自己能做什么。 几年前，我可算梳理出了自己三观的完整第一版，那会觉得未来的人生就是对这套体系的修修补补，自己对自己相当了解了。 后来我谈恋爱了，第一次谈恋爱。工作以后我的很多老同事一直说要谈恋爱，但我始终没有做好这个准备，第一份工作里我过得很不开心，也不是说全不开心，但不开心确实是生活的主调。离职后，不开心的源头没有了，我也就恢复了开朗乐观的状态不那么有攻击性了，也就机缘巧合的遇到了女票。 旧年我们迈入了第二年，旧年回顾前年的时候，我感慨自己花在女票身上的时间太少，旧年我认为在时间这个角度上我算是有所改进。但是，在质量上因为自己状态管理的不好，所以也还有很大的提升空间。 恋爱就像是照镜子一样，虽然每个人都有很多小毛病，但是随着关系的深入我也发现自己的小毛病不是一般的多。在认识自己这件事情上我也大开眼界。虽然我一直知道自己有自己不了解的地方，但当你真正看到自己身上那些不被自己了解的地方的时候，还是感到惊异、诧异、甚至不相信的。好在我的思维还处于开放的状态，也许也没有完全开放。但是，我确实意识到了自己的问题，以及自己存在自己尚未接受的问题这个问题。认识问题，是改变问题提高自己的第一步。为了那些自己爱的人改变，这是爱的责任。 几年前看《人性的弱点》的时候，我意识到了自己的沟通问题，往后在和朋友沟通上面我确实改变了一些自己的不友好的交流方式。然而，旧年我意识到了在这方面我还有很大的不足。一方面我在和朋友交流的时候，有时还是太“不给面子”了，这一点对关系好的朋友尤其恶劣。 我就有一个好朋友因为房地产的问题在朋友圈评论里辩了一下，然后对方对我屏蔽了朋友圈。。然后，我因为朋友圈被屏蔽又生气不主动去理这个好朋友。。感觉自己还是个任性小朋友啊。另外也有一个大学同学因为对谷歌看法的不一致，也屏蔽了我。这两个事情都是我跑到人家朋友圈评论里发表不一样的看法导致的。其他类似的事情还有，这里并不是别人没有保持开放的头脑和思想，而是我忽略人性的弱点。很多人对不同意见的第一反应是排斥的，诚然我自己好像也是这样子的。。只是我的逻辑性比较强，很多时候别人扯不过我。。。 但是，我在沟通上最大的问题还不是在这里。最大的问题是我在亲近的人面前。与亲近的人沟通会存在一些不一样的场景，就是很多时候沟通问题的不可回避性。这是与朋友之间的最大不同。由于问题的不可回避性和对自我影响性，在沟通的时候就出现了非要出结果的倾向。这次春节回家和父母的沟通上这个问题也再一次表现了。这个问题其实一直存在，但是在于和父母沟通及出现矛盾的频率低，所以一直没有受到足够的关注。然而，在恋爱关系中女朋友帮我意识到这个问题了。我想很多人都会有这个问题，对于最亲近的人，我们往往缺乏耐心、缺乏沟通技巧、缺乏包容。性子直、说话直不应该成为我们逃避责任的借口。 旧年对责任也有新的理解，原来我总觉得责任和自由在一定程度是对立面，每多一分责任就是少一分自由。然而现在的我不这么想了。责任本质上是自由的体现，我们的自由意志不在于让我们逃避责任，它在于让我们选择真正属于自己的责任。 勇敢的选择自己的生活方式，并为自己的选择负起相应的责任才是真正的自由。 从不选择、不为自己的选择负责以及为他人所选负责的人生都是不自由的人生。 大四选着工作的时候，我想着找工作应该以选择什么样的生活为标准。 工作几年后时候发现，选择成为什么样的人更重要。应该是先选择成为什么样的人，在这个基础上再去努力过上自己希望的生活。 现在又做了进一步调整，应该是先选择成为什么样的人，然后做好成为这种人的责任，之后再努力过上自己喜欢的生活。 旧年还有很多收获，也有很多不足。但是和上面这些比起来，我觉得都是些小问题。人的精力有限，还是优先把大的问题处理好。 新的一年，我已经不需要把注意力在自由的寻找及维持上了。我已经做出自由的选择，更多的注意力应该转到责任上面了。要用更好的行动去实现自己对生活的希望。希望是行动的信念，行动是希望的道路。要相信自己的行动能实现自己的希望。 新的一年要尽到改善沟通方式的责任，让重要的人不因沟通而不快。具体就是看一些沟通的书，并时长反思自己的沟通方式。先定三本：《非暴力沟通》、《冷暴力》、《人性的弱点》。 新的一年要尽到保持身心健康的责任，让重要的人不因健康而担心。具体就是规律作息、注重营养、保持锻炼、健康风险防范。 这些年为了节约注意力，我采用了以事情为导向的自我管理方式。现在看了这种方式有些消极，事情少的时候还好，有很多事后终结反思的时间。但是事情多的时候，就一个接着一个紧急的事情出现，基本的生物节律难以保证，对成年人而言，生物钟确实是存在的，不规律的作息确实会导致个人状态的混乱。是该对自己更严格点了，所以规律作息会作为个人状态管理的重要部分。 凡事预则立，不立则废。新年会恢复使用手账的习惯，一方面要规定好自己的每日休息时间，每日睡眠最长时间，起床时间等等。另一方面要规划好自己的工作内容，把合适的状态分别留给重要的人和工作。 营养方面旧年留意到了母亲所在的家族成员中糖尿病发病率似乎有点高的，似乎有遗传性的糖尿病易感基因，虽然母亲和姐姐并没有患病，但这一点值得注意。在吃饭方面需要要更加注重营养结构，减少碳水的摄入比例，补以杂粮及果蔬，低油低盐低糖。说得再具体点，就是要自己好好定食谱，好好做饭了。 运动方面，旧年保证了运动频率。但是也出现了断断续续的问题。而且其中有一段时间是集中无氧，一段时间集中有氧。新年需要更加规律，需要无氧和有氧结合的方式，两者缺一不可。 健康风险防控方面。具体就是保险配置以及家庭常备医疗知识的补充。前者我一直托着没做，后者是以前没有相关概念。新年如果可支配时间充裕会进行这方面的投入。 新的一年要尽到努力提高自己的责任，努力负起的更大的责任，努力让自己和重要的人们更加开心快乐。具体就是提高专业水平、提高认知水平、提高解决问题的能力。更具体一点就是多学习、多看书、多解决问题。 这其中最重要的就是专业水平，王国维曾说做诗词的三层境界。前两层为：“众里寻他千百度，蓦然回首，那人却在灯火阑珊处”。“衣带渐宽终不悔，为伊消得人憔悴”。这暗合了做任何专业与学问的路径。我自己转行IT的过程就符合第一层。现在等于出在第二层，但是王国维只说了第二层的表象，具体如果做缺没说。这也是我转行之后时常会想秉承专业主义，在打造专业技能时应该抱有一种什么样的心态。这几天看了科比的一些资料，我感觉我可算找到了答案，感谢科比。 当然，只有专业水平也是不行的，新年还是需要适当拓宽广度，做一名T型人才。 已经半年没有写文章了，一写写了好多。 最后，虽然已经初四了，但还是要说一句： 祝大家新年快乐，身体健康！","link":"/2020/01/28/hello-to-new-year-2020/"},{"title":"休息不简单","text":"我相信，没有一个人会觉得睡觉是不重要的。如果你这么觉得，试着熬个夜看看，一个不行那就来两个。 但是说到休息，似乎除了睡觉之外也没什么需要特别注意的，要有的话，也就是另一些人有午睡的需求。 我自己就是这么一个例子，只重视睡觉，而且是晚上的那个。尽管不睡午觉会给我带来明显的副总用，但是我还是在想方设法千方百计的去减轻不午休带来的崩溃的下午。 然后呢，今年我确实找到了这个办法，那就是喝茶。我喝茶会出现心悸以及失眠。所以，长久以来我并没有把这个作为一个解决方案。但今年我发现，如果平日用脑很多，做事情够专注那么心悸的感觉就没有了，也可能是没有觉查到。然后，晚上也会累得一睡就着。 然而执行一段时间后，整个人都不好了。我出现了慢性疲劳的症状。于是乎，我又恢复了午睡的习惯。咖啡因只是麻痹了人的疲劳感，并没有消退人的疲劳。因而，短期可以起到奇效，长期自然导致疲劳的堆积。 无独有偶，对于有午休习惯的人来说，不午休带来的疲劳感是强烈的、明显的。对比之下，日常生活中还充满着微弱的、细小的疲劳感。这些小的疲劳感一般不足以堆积到让人明显不舒服的地步，因为人一般都会有被动休息。 身体放松就是身体的休息状态，精神放松就是精神的休息状态。当一个人脑袋空空无所事事，那就是一个典型的被动休息的状态。正常情况下，被动休息也就够了。所以大部分人大多数时候，完全不需要去关注休息这件事情。 只有身体或者精神长时间属于紧绷的状态时，人才需要去刻意放松或者说刻意休息。一个人扛着一个大鼎又或者长时间想着哥德巴赫猜想只要时间够长，他必然会疲劳，进而停下来休息，对于这种休息也不用特别去关心。我们真正需要的是，那种即便处于静止状态也无法放松的情况。 对于身体而言，这种情况就是肌肉劳损。也就是在解除施力状态后，肌肉依然紧绷的状态。这个时候就是主动拉神、按摩、热敷、红外、电疗等等。医院理疗科就是干这个的，如果你出现这种情况的话，可以去医院看看。 对于精神而言，可能的情况更多。最常见的可能就是失眠，又或者做什么事情静不下心来。更严重的，可能会累及其它系统，比如身体的慢性疲劳、焦虑症、抑郁症等等。我最近出现就是日常忙碌引起的慢性疲劳。 所谓的精神，无非就是大脑。主动放松要做的其实是能让大脑放松的事情。药物虽然可以，但这是不提倡的，很可能会成瘾。所以，我们主要是通过自然的方式。大体思路是三个：1、去掉压力源（姑且这么定义产生疲劳的因素）；2、提高抗压能力；3、提高恢复能力； 1大部分是不可行的，因为压力是生活的一部分，而且有压力才有动力，除了少数比如打游戏老打不过产生的压力外，很多压力还是需要我们承担的。 2抗压能力和个人的心理素质有直接关联，这个提升也是个人相关的，不能一概而论。 3才是我们真正日常能做的。前面提到恢复有被动和主动，所以我们这里说的是主动的。身体的恢复主要靠新陈代谢，大脑也在这个范围里。保持和提高新陈代谢水平自然就是一个可以主动去做的事情，老生常谈了，多运动多喝水营养充足。 上面是通过主动的调整生活方式，来提高被动恢复的途经。而精神层面的按摩是啥呢？ 答案是让精神放松的活动。感觉像是循环定义对吧，但其实这个就是个判断标准。适合个人的方法留给个人去探索了。说说适合我的方法吧。 散步、跑步、游泳、洗澡、听音乐、冥想。 然而，方法是次要的，主动才是主动休息的关键。","link":"/2021/10/19/releax-is-important/"},{"title":"惜命生活美","text":"每个人的生命都只有一次，有的人珍惜，有的人不珍惜。 如果给生命加上一个刻度，那么这个刻度就是我们的时间。 珍惜生命的人，会珍惜自己的每一刻时间，会努力的去感受时间带来的美好。 有的人珍惜自己的赚钱时间，有的人珍惜自己陪伴家人的时间，还有的人珍惜自己打游戏的时间。 对于不同的人有不同的美好，珍惜生命的方式也各有不同。 然而，只要是人就离不开衣食住行。对待生活，珍惜生命的人是可以有同样的态度的。 不浪费每一次装饰自己的机会， 不浪费每一次享受美食的机会， 不浪费每一次休息放松的机会， 不浪费每一次出行游历的机会。 生活与生存最大的区别在于，生存之外生活要美。 面对生活中不得不做的事情，我们既可以草草了事，也可以别出心裁，区别也许只在珍惜生命与否。 穿衣不单要保暖，还要好看。 吃饭不单要果腹，还要好吃。 居家不单要遮风避雨，还要舒适惬意。 出行不单要达到目标，还要赏花弄月。 虚无生意义，粪土开鲜花。 生命既然只有一次，不如美美过生活。","link":"/2021/10/22/reminded-of-how-precious-life-is/"},{"title":"评论功能上线了","text":"最近开始注意主动休息之后，冥想就成了一个日常习惯。 休息之外的一个好处是，很多原来没意识到的事情也变得清晰了起来。 其中一个就是对于我这样的只是单纯的写点文字表达想法的人来说，微信公众号其实是个限制。 一天只能群发一次，一定要有题图，还必须去调一下格式，甚至发文章还要登录扫码。 专业写手为了流量可以将就平台，但对于我们这类纯属爱好的人来说，让一件原本轻松随意的事情变得麻烦了起来。 可以说公众号平台限制了自由，当然我们也有跳出平台的自由。 回到自己的博客之后，在博客爱怎么写就怎么写，一天想写几篇就几篇，不用题图，再套上 markdown 的标准样式。free style，是自由的感觉。 而公众号，只用文字消息转发一下文章链接就好了。看的人自然会打开链接，不看的人给他看还浪费他的时间。 改成转发文字消息之后，公众号消息下面的评论也不开了，内容和评论分离是比较奇怪的事情。 但是，既然我公开表达想法，那么还是愿意听听别人的看法，所以时隔两年之后，终于把博客的评论完善了。 搭建博客用的是 hexo ，使用对应的 plugin 就可以了。评论的存储使用的也是 github , 和博客内容储存同源。 这样就能看文章的人就能评论，能评论的人就能看文章，一样的配方，一样的缘分。 这么一来，先是就把公众号里的水份读者过滤掉了，在之后 github 评论又把评论欲望不够充分的读者过滤掉了。 要是最后没有读者了呢？那就没有了嘛，毕竟我只是处于爱好写着完，顺道给人看看。 这样也能避免一个问题，那就是为了阅读量而写作，为谋生而写作。这类人不是在表达自己，也不是在科普观念，他们本质上只是在搞服务业。客户想看什么他们写什么，平台不让写什么就不写什么。 所以说，真正自由的人不应该把写作作为职业，顶多作为副业。除非，你有为自由饿死自己的觉悟。","link":"/2021/10/23/comments-is-release/"},{"title":"RSS 订阅功能上线了","text":"最近两周在进行自我信息管理的优化，其中的一个内容就是要屏蔽推荐算法投喂的垃圾信息，也可以叫做噪音。 我们身处一个信息爆炸的时代，有的人来着不拒，有的人自我封闭，我自己就在这两个极端自己往复了很多年。 就拿微博来说吧，它在提供了很多自己专业视角及生活环境外的新鲜信息的同时，也提供了很多噪音，比如不需要的广告，一些低劣的创作内容，还有谣言。 以前我提到过屏蔽掉微博和朋友圈，然后通过几个信息大节点作为信息来源。其中一个节点就是连岳，后来连叔发生了奇妙的变化。 当然最大的问题倒不是这个，重要的是兼听则明。我们需要听不同的人对一个事件的不同看法，特别是那些有独立观点的人。 这就有一个问题，不同的人有不同的表达偏好，比如这个喜欢写博客，那个喜欢写微信公众号，另一个喜欢写微博问答，还有一些喜欢发推特。 为了看不同人的观点，打开不同的平台，那就是不同的推荐算法给你推荐噪音了。 解决办法就是主动订阅，跨平台的订阅。而 RSS 这个上古的东西就是解决这个问题的。 我自己的 RSS 订阅设置还在研究阶段，但是既然我有一个博客，那么我自己就需要考虑先从做为一个站点的角度去提供 RSS 订阅。 这就是为什么我升级了这个功能。 说句多余的话，公众号正是 博客 + RSS 私有化形式，不一样的是我们受到了平台的限制。","link":"/2021/12/19/rss-feed-is-release-now/"},{"title":"构建自己的信息系统：输入输出篇","text":"第三次工业革命又叫信息革命，一如蒸汽革命及电力革命一般，信息迎来了它的爆发——指数型爆发。 人们很难说究竟是信息的爆发促进了计算设备的发展，还是计算设备的发展导致了信息的爆发。但是从后来的发展看，它们确实构成了相辅相成抱团前冲的驾驶。 信息洪流已是不可避免，但到了今天事情又发生了一些变化。现在的信息已经不像以前那么温和，不再像江河里静谧的水流，它更像是满天的暴雨，每一滴似乎都朝你扑面而来，生怕你不知道它的存在。 前不久看完了《反脆弱》，里面提到这个时代大部分的信息都是噪音，真正有用的信息往往淹没在噪音的洪流之中。 不去获取信息吧，那么就会错失有用的信息。过渡关注信息吧，又会被噪音冲昏头脑。看似两难的问题，其实是一个问题，那就是如何获得真正有效的信息。 不获取信息不是，获取错误的信息也不是，从流沙中筛出金子才是我们想要的。 从信息的角度来看世界是片面的，但是这有助于我们解决一些问题，能让我们更多的关注到生活的其他方方面面。 可以使用很多的维度去区分我们能接触到的信息，为了便于实施我只是简单的从主动与被动两个角度来优化我的信息摄入: 1，屏蔽不需要的被动输入信息；2，提升主动获取信息的效率； 说了好像没说一样，但是按照两条原则自我观察一段时间就能发现可以优化的地方了。说说我这段时间具体都做了些什么吧。 1，绕过垃圾广告，浏览网页的时候，用了 chrome 浏览器的广告屏蔽插件，相信很多人在用了；2，使用同样的邮箱管理工具，由于网龄够长，所以我有三个邮箱，使用统一的邮箱管理，通过过滤规则将所有邮件统一收件、归纳、屏蔽；3，同样由于网龄太长，所以将近二十年的密码分布在了很多地方，可能是本子也可能是某个云笔记，甚至可能是一个txt文件里。早两年开始用 1password。但是，统一的工作一直没做，最近用了周末一天的时间全部归并了；4，使用 rss ，使用统一的入口把我关注的人统一到一个地方来读取信息流以及博客更新，这么做最重要的是为了绕开垃圾推荐算法； 两条原则对应的结果就是，在我主动去获取我需要的信息的时候，我只用去一个地方就能无干扰的获取这个信息。而当我想要跳出自己的信息圈的时候，再去各个平台去退出登录状态随机无目的的获取信息。 而对于我们要传达的信息，我也简单的从重要和不重要的角度做了区分，同样是两个原则： 1, 重要的信息要经过认真的思考，应该方便跨时空传达及反复传达，且能收到反馈；2，重要的灵感及思考应该在其消失前将其快速捕捉； 至于不重要的信息，随便怎么发甚至不发都没啥，朋友圈基本就是这类型。 基于上面两个原则，那自然就只能是通过写下来的方法了，因为记忆力是靠不住的。 然后，随时随地能写，且能及时保存和发布，那最好的途径还是博客。而正好，这个工作我之前已经完成了。不一样的是，为了让这个动作能变成随时随地，我将自己先前优化好的编程形式的写作的工作流放到了一台服务器上。这样我的各个设备都可以通过他完成写、存、发的过程。 总结下，就是按信息输出的紧急程度使用电话和语音通话，次一级的输出则使用微信、短信，再次一级别的则使用邮箱输出，项目管理工具反馈。这个顺序也是我获取沟通信息的紧急程度顺序。然后，对于那些特别重要或者稍微有点复杂的想法则采用文章的形式，公开则走博客，不公开则走邮箱，总之要留底。这样是我还没做完的事情，我会一点一点的把这些年我分散在各地的文章都统一收录起来，只用一个地方来管理。 额外的，之前不喜欢发公众号因为麻烦，所以改成了发链接的形式，这次发现了一个把博客转公众号快速发布的方法，和复制链接差不多，那就是直接把博客的排版直接附上去就好了。然后，再拍张我家可爱的猫猫就完事了。","link":"/2021/12/20/build-a-persional-info-io-system/"},{"title":"注意力三大定律","text":"你一定听说过，要保护自己的注意力。我也是这样的，保护注意力这个观点实在是普遍，很多公号、很多课程、很多书都有提及。如果考虑到注意力的同义词或近义词那就更多了。注意力就像浇灌的水，投资的钱。你把它投到正确的地方它才能带给你可能的收获。但注意力究竟要怎么保护呢？注意力的保护也就是注意力的管理，就像一切的管理都需要技巧一样，注意力的管理也是需要的。要管理自己的注意力，就需要知道注意力的特性。注意力究竟是什么和人的意识有关，而意识这个话题本身又涉及到更深的脑科学以及心理学，加上个体的生理结构和心理状态也各不相同，因此注意力的特性对不同的人或许也各不相同。这里仅仅就我的自我观察归纳如下规律，不保证普适哦。注意力第一定律注意力关注的事物会不断放大。你一定听说过，在怀孕的人眼里，满大街都是孕妇。这就是注意力第一定律最直观的一个案例。但是，更多时候注意力第一定律是在你不知情的地方发生着作用。比如，人们常常说要积极乐观，不要抱怨。但人们很少给出解释，他们更多的是出于生活的经验。而这正是注意力第一定律所能解释的。当你喜欢抱怨的时候，你的注意力用在了那些负面的事务上，所以在你的世界里，你会更加倾向于关注那些能让你抱怨的事务。同样的，如果你是一个乐观的人，你就很容易看到积极友好的一面，随着时间的推移你会看到越来越多积极乐观友好的一面。更实用的，当你不断地把你的注意力投射到你的目标之上，用于去寻找实现的路径。慢慢地，你会发现解决问题的方法越来越多。相反的，如果你把注意力都用在关注阻碍上，你会发现困难重重。这里微妙的区别会产生巨大的不同的结果。注意力第二定律单位时间的注意力是有限的。这个很好理解，我们就不解释了。直接说说他对我们行为的影响吧。还是拿抱怨这个事情举例，当你倾向于抱怨生活或者工作的时候，由于第一定律的存在你对负面事务的关注会不断变大，结合第二定律很容易知道，我们对积极的面向的关注必然会减少。到最后，在你的注意力范围内，只剩下可以抱怨的事物了。怎么样，抱怨是不是很可怕？注意力第三定律注意力只能通过注意力自身去改变。不知道你有没有这种体验，当你一个朋友在抱怨的时候。无论你怎么提醒他事物的另一面，他始终沉浸在自己的观点和情绪里面。这既可以说是人的特性，也可以说是注意力的特性。最终能改变自己的就只有自己（注意力）。这对我们的一个启示就是，不要把自己的注意力完全耗光，要保留一部分注意力用于注意力的审视，或者说自我觉察。如果你对正念冥想稍微有点理解，你会发现这说的其实就是正念。也就是我们常说的不要被情绪和念头带着走，情绪和念头带走的是什么呢？就是注意力。当你的注意力被某个事物耗光，或是积极的，或是负面的。你就容易进入到一个自我封闭的状态，听不进别人的话语，感受不到生活的异常，甚至与整个世界割裂。这是非常可怕的。到这里，注意力三大定律我们就说完了。你可以看到，我们举了不少负面的例子，为了回到积极的正途我们来注意一下它积极正面的地方。当你追求一个目标的时候，你真正需要做的只有一件事情，紧盯着它。在这个过程里，你会发现路径与方法慢慢地就出现了。当你情绪低落或者心情烦闷的时候，你真正需要做的也只有一件事情，去关注积极正面的事物，做一些积极正面的事情，慢慢的负面的情绪就会消退。当你感觉失去对生活的掌控感或者不自由的时候。你真正需要做的还是只有一件事情，那就是用你的注意力去关注你的注意力。看看它都在关注着些什么，又或者被什么带着走。不用想着去改变他，因为改变自然会发生。那么，锻炼注意力最好的办法是什么呢？正念冥想。","link":"/2022/04/05/three-princple-of-focus/"},{"title":"认知大脑的模型","text":"要对自己的大脑进行观察就需要对它建立一个模型。大脑的物理形状就像是一块精雕的豆腐块，然而因为它在我们的脑壳之中，做为自我观察者，想要从物理方面对其生化方面的了解是不太可能的。所以认识自己的大脑，对其进行试验性的观测，更实际的是从内心层面或者说心理层面进行观察。 对内心进行观察可以是个古老的话题，也能是个新近的话题。前者涉及到了诸多科学时代前的体验论方法，后者更多的是现代心理学方法。不同的人可以有不同的理论选择，你既可以选择佛教唯识宗的理论，也可以选择左右脑的理论。在这里，我选择的是最简单的模型——意识与潜意识。 大脑作为一个器官自然是要工作的，就像其它器官一样。而大脑工作的结果就是一系列的心理活动，这是我们的大前提。而对于大脑的工作，基于生活经验可以分成两类。一类是我们能立即觉察到的，为我们所感知，为我们所控制的部分——意识。另一类则是我们不能立即觉察到的，甚至完全觉察不到的，不为我们所控制的部分——潜意识。 这里为了观察方便，将意识和潜意识与“我”分开了，但其实“我”本身就是意识与潜意识的融合体。通常而言的“我”只是被感知到的意识的那一面，而潜意识虽然通常不被观察到，但它实际上会对意识产生影响，进而最终影响了“我”。 值得庆幸的是，虽然潜意识会影响到意识，但是反过来说意识同样也能影响作用与潜意识，这也就给“我”提供影响自己被动被塑造的那一面。进而也就是可以成为真正意义上的“我”。 当然，对潜意识的理解以及影响不单单只能让“我”成为真正意义上的“我”，它还能解决我们在生活中的许许多多的问题。但，只有一个人真正成为自己的主人，他才能获得真正意义上的快乐。 另一方面，比其掌控生活更容易掌控的是自己的内心。","link":"/2022/04/24/knowing-brain-model/"},{"title":"休息真的不简单","text":"去年十月份在博客里写了《休息不简单》的文章，在那篇文章里我强调了休息的重要性，然而几个月过后，我把休息的重要性又忘记了。最近一段时间出现了比之前更严重的疲劳症状，具体细节就不说了。我们在做精力管理和时间管理的同时，更应该关注自己的心态管理，就像管理肌肉那样，自然的状态应该是放松的状态，紧绷的状态也只能是短时的，用力太猛心弦易崩。以下是休息不简单的原文： 我相信，没有一个人会觉得睡觉是不重要的。如果你这么觉得，试着熬个夜看看，一个不行那就来两个。 但是说到休息，似乎除了睡觉之外也没什么需要特别注意的，要有的话，也就是另一些人有午睡的需求。 我自己就是这么一个例子，只重视睡觉，而且是晚上的那个。尽管不睡午觉会给我带来明显的副作用，但是我还是在想方设法千方百计的去减轻不午休带来的崩溃的下午。 然后呢，今年我确实找到了这个办法，那就是喝茶。我喝茶会出现心悸以及失眠。所以，长久以来我并没有把这个作为一个解决方案。但今年我发现，如果平日用脑很多，做事情够专注那么心悸的感觉就没有了，也可能是没有觉察到。然后，晚上也会累得一睡就着。 然而执行一段时间后，整个人都不好了。我出现了慢性疲劳的症状。于是乎，我又恢复了午睡的习惯。咖啡因只是麻痹了人的疲劳感，并没有消退人的疲劳。因而，短期可以起到奇效，长期自然导致疲劳的堆积。 无独有偶，对于有午休习惯的人来说，不午休带来的疲劳感是强烈的、明显的。对比之下，日常生活中还充满着微弱的、细小的疲劳感。这些小的疲劳感一般不足以堆积到让人明显不舒服的地步，因为人一般都会有被动休息。 身体放松就是身体的休息状态，精神放松就是精神的休息状态。当一个人脑袋空空无所事事，那就是一个典型的被动休息的状态。正常情况下，被动休息也就够了。所以大部分人大多数时候，完全不需要去关注休息这件事情。 只有身体或者精神长时间属于紧绷的状态时，人才需要去刻意放松或者说刻意休息。一个人扛着一个大鼎又或者长时间想着哥德巴赫猜想只要时间够长，他必然会疲劳，进而停下来休息，对于这种休息也不用特别去关心。我们真正需要的是，那种即便处于静止状态也无法放松的情况。 对于身体而言，这种情况就是肌肉劳损。也就是在解除施力状态后，肌肉依然紧绷的状态。这个时候就是主动拉神、按摩、热敷、红外、电疗等等。医院理疗科就是干这个的，如果你出现这种情况的话，可以去医院看看。 对于精神而言，可能的情况更多。最常见的可能就是失眠，又或者做什么事情静不下心来。更严重的，可能会累及其它系统，比如身体的慢性疲劳、焦虑症、抑郁症等等。我最近出现就是日常忙碌引起的慢性疲劳。 所谓的精神，无非就是大脑。主动放松要做的其实是能让大脑放松的事情。药物虽然可以，但这是不提倡的，很可能会成瘾。所以，我们主要是通过自然的方式。大体思路是三个：1、去掉压力源（姑且这么定义产生疲劳的因素）；2、提高抗压能力；3、提高恢复能力； 1大部分是不可行的，因为压力是生活的一部分，而且有压力才有动力，除了少数比如打游戏老打不过产生的压力外，很多压力还是需要我们承担的。 2抗压能力和个人的心理素质有直接关联，这个提升也是个人相关的，不能一概而论。 3才是我们真正日常能做的。前面提到恢复有被动和主动，所以我们这里说的是主动的。身体的恢复主要靠新陈代谢，大脑也在这个范围里。保持和提高新陈代谢水平自然就是一个可以主动去做的事情，老生常谈了，多运动多喝水营养充足。 上面是通过主动的调整生活方式，来提高被动恢复的途经。而精神层面的按摩是啥呢？ 答案是让精神放松的活动。感觉像是循环定义对吧，但其实这个就是个判断标准。适合个人的方法留给个人去探索了。说说适合我的方法吧。 散步、跑步、游泳、洗澡、听音乐、冥想。 然而，方法是次要的，主动才是主动休息的关键。","link":"/2022/04/26/relax-is-rely-uneasy/"},{"title":"不明原因肝炎","text":"开完早会看手机的时候，看到了丁香医生今天的推送，是关于近期不明肝炎的。看完后低落了好一会，难道真的如一些人所说的，考古学家在翻译玛雅人石板的时候，错误的把2022翻译成了2012？会广东话的人就知道这非常可能，广东话里面数字22的读法就不是一个音重复两次，细思极恐。还好，我不信预言这玩意。要是信的话，那为啥是信玛雅人而不信推背图呢？ 新冠以来，闹心的事情确实多，或许事情本来没那么闹心，但是铺天盖地的各种消息让人防不胜防。很多人确实给影响到了生活，另一些是也确实一点没影响到，而大多数人就处于中间情况。你说影响吧，那确实影响到了。但你说影响很大嘛？似乎也没有，当然这里说的不包括上海里面真真切切的给影响到的人。 对我而言，现实层面的影响是啥呢，就是做了几次核酸，以及出行的时候考虑更多的风险。要是说的再细点，后者甚至可以说是心理层面的影响。是啊，对风暴中心（上海等）之外的人来说，新冠的影响更多的是心理层面的。当然，也有一些天之骄子，泰山崩于前而色不变，麋鹿兴于左而目不瞬。很遗憾，我没有这种素质。 人关注的事情，会在自己的世界里变大。是自己的世界，而不是外在的世界。心理一旦锚定了某类事物，大脑就会不断的去搜寻和他有关的信息。这一点通常来说能帮我们聚焦问题，甚至解决问题。但是啊，你不得不承认有的问题本身就是没有解决办法的，比如新冠的大流行以及这次的不明源因肝炎。还记得新冠最早叫什么吗——不明原因肺炎。 那我们是不是就屏蔽掉这些不好的消息，把自己装在套子里呢？说实话，前段时间我就开始试着这么做，不再去主动关注这类消息，更多的回到当下自己的问题里。然而一个遗憾的事实，你是躲不掉的。只要你还生活再这个时代，负面的信息总是会从你意想不到的地方窜出来。且不说回避负面消息究竟是不是一个好的行为，回避负面消息实际上就不太可能。忽视它或是假装它不存在倒是可以的，直到它实际触碰到你的那一刻。 要是放以前，我肯定会对这种行为嗤之以鼻。你怎么能放着问题不去解决呢？它要是发展了怎么办？最后造成不可挽回的问题怎么办？是啊，类似的问题还能问上许多个，但于此相反的问题只有一个，我又能做些什么呢？同样的要是放在以前，我同样会对这个问题嗤之以鼻。会愤怒的指出，你不能做什么就不做了嘛？不做什么不也是做了什么嘛？但以前的我不明白的是，一定要做些什么嘛？什么不做会不会是更好的选择呢？ 你看，人年轻的时候，可能会觉得无论如何做出一些改变总是好的。年长了之后，可能会觉得保持不变可能更好。这两者其实都属于偏执的行为，为了改变而改变，为了不改变而保守。都是某种意义上的原教旨主义，这种主义的背后可能是相同的生理原因。年轻人荷尔蒙过盛，老年人荷尔蒙不足，都是生理的奴隶罢了。理性主义才是更好的决策依据。 当你秉承理性主义问出“我又能做些什么”的时候，这就不是逃避的借口。这完全可以是一个建设性的问题，顺着这个问题人就可以知道自己可以做什么又可以不做什么了。当然，非理性主义的解决方法也有，比如著名的宁静祷文： “亲爱的上帝，请赐给我雅量从容的接受不可改变的事，赐给我勇气去改变应该改变的事，并赐给我智慧去分辨什么是可以改变的，什么是不可以改变的。”","link":"/2022/04/27/what-can-i-do/"},{"title":"给自己炖点鸡汤","text":"随着年龄的增长，越来越喝不下鸡汤了。至于为什么喝不下我也说不清楚，可能是喝得多了，敏感度降低了。又或者是阅历多了，无法再接受悬空的论断。最近收用的一句鸡汤是罗翔老师的那一句： “人生只有百分之五是可控的，而剩下的那百分之九十五是不可控的。尽管如此，我们依然要全力地去改变那可以改变的百分之五，因为他里面蕴含了可以撬动那百分之九十五的希望。” 原话不是这么说的，但是是这么个意思。你看，这句话里其实也有个矛盾，那就是那百分之九十五究竟是不是可控的呢？鸡汤常常被吐槽的一个点就是没营养。换句话说，就是感觉有用好像又没有用。可是，究竟什么才是有用的呢？一条职场心得？一个学习技巧？一条投资建议？那让人情绪激昂算不算呢？让一个对生活充满了绝望的人萌生了希望算不算呢？ 要我说那当然算，按这标准都不能叫鸡汤了，应该叫鸡汤药。按这标准，《肖申克的救赎》、《三傻大脑宝莱坞》、《美丽心灵》这些电影也应该算鸡汤药了。只是很多人喝鸡汤的人其实远远不到说绝望的境地，甚至本身并没有负面的情绪。所以，我们还是叫回鸡汤吧。 所以你看，鸡汤还是有存在的意义的。它可以是你内心的一剂镇定剂或是兴奋剂。当然，也并不是所有能让你情绪兴奋的东西都能算上鸡汤。比如一些哈哈一笑的小视频，他们的作用过于短暂，甚至不能直达人内心的深处。因为过于短暂，也就更加容易成瘾。就像一口口的烟，舒服是舒服了，但药不能停。一停下来，它反而成为难受的根源。 人生在世，难免会有情绪低落的时候。可能是因为新冠疫情，也可能仅仅是因为最近下雨，内心敏感的人尤甚。碰到这种情绪怎么办呢？抱怨吐槽嘛？这解决不了问题呀，还会进一步的让自己沉静在失落的根源里，眼见它生根发芽，眼见它林木参天，眼见它填满你的内心。这当然不行，抱怨不如改变，想想自己能做什么。碰到不可改变的时候呢？那就接受现实，暂且搁置，去做其它自己可以改变的事物。 道理是这个道理，但内心却不是这么运作的。道理能说服理性，但是却不能说服情绪。一种情绪的蔓延，只能被另一种情绪的蔓延所停止。那去哪找那种会蔓延的情绪呢？你可能已经想到了。 没错，就是它——鸡汤。 鸡汤虽好可以不要贪杯哦。一个理由是，我们喝鸡汤的目的只是平稳情绪，进而让理性能够更好地做事。另一个就是同一个鸡汤是冷却时间的，什么意思呢，就是说你喝了一个鸡汤生效了之后，接下来的一段时间它就失效了，需要过一段很长的时间之后，它才能继续生效。这个时间就是冷却时间，它取决于你的记忆。不过，你要是有金鱼记忆的那种天纵奇才，一句鸡汤就够你喝一辈子了。 所以，正常人备一份鸡汤菜谱还是很重要的，粤系的、鲁系的、川系的甚至阿玛瑞肯和大不列颠的也都来一份。如此，可保卷途无量。但是啊，如果随着年龄的增长，你的阅历和逻辑能力会有所提升，一些鸡汤也就失效了。比如真正的失败只有一种，那就是半途而废。如果你有迷过路的经验，你要是在意识到自己走错路的时候，来一句这个。那你就不是情绪问题这么简单了，当然，把理性放到一边，坚信自己的道路，这口汤也还喝得下。 可万一碰到鸡汤备料不足，或者最近牙口不好确实喝不下怎么办？你可能又想到了。 没错，就是自己炖。 道理也很简单，人不一定能听进别人的鬼话，但是一定能听进自己的。因为你说出它之前，它已经在你的脑子里了。不信？每天晚上对着镜子和自己说我是天才或者我是帅哥/美女或者我是有钱人一个星期试试。 说了这么多，今日份鸡汤也炖完了，开锅： 积极乐观是一种能力，更是一种选择。","link":"/2022/04/28/be-optimistic/"},{"title":"写在三十三岁的第二天","text":"昨天我三十三了，也就是说今天是三十三岁的第二天。本来想昨天写这篇文章铭记一下的，但是昨天去外头玩了一圈回来写不动了。所以，就改成铭记一下三十三岁的第二天了。 对于一个爱玩的小朋友来说，一个放好几天假期的劳动节显然比生日更让人欢呼雀跃。于是，一路以来甚至到了成人之后，劳动节对我的存在感依然远胜于自己的生日。你和我说生日快到了，我可能没啥感觉，但是你和我说劳动节快到了，我就知道又该放假了。 尽管如此，有一些生日也还是具备特殊的意义。按照通常的理解，十岁、二十岁、三十岁等生日应该是人生的大节点，你看什么三十而立、四十不惑都是这样的描述。但我就不这么看，生命的密度不同，生命的意义也各不相同。生日的意义更多的在于你对其赋予的意义，也就是存在主义的那句话，存在先于本质。生命如此，生日亦是如此。你看，上面这句话还能这么说，生日先于本质。 所以你看，我在三十三岁的第二天来写这篇文章，也是很符合存在主义哲学的。那么三十三岁对我的意义是什么呢？它是另一个倒计时的开始。正如高三的第一天教导主任给学生们声明正式进入高考备考阶段的那样。三十五岁是中国互联网人的一个大考，而到了三十三岁也就表示距离大考只剩两年了。不论你是科班毕业还是半路出家，这都是面前实实在在的一个槛，假装看不见是没有用的。 这个备考期为什么不是一年，三年或者五年而是两年呢。正如大家一块上的中学，有的人初一就在为高考准备，而有的人高二才开始奋发图强，还有的人在读高四高五….这里面及有外部的影响，也有自我的觉知，当然还有大量的不确定性。个体遇到这种问题，可以发扬考古精神讨论为什么是这个样的，但更重要的是发挥存在主义的精神去把问题解决，并发现其中蕴含着的生命的意义。 存在先于本质，考试先于分数。未来的路在哪里也只有未来才知道，当下能做的除了且走且看之外，也只有学习学习再学习了，一如既往。","link":"/2022/05/02/the-day-after-birthday/"},{"title":"好为人师是种病","text":"我这人吧，不知道从什么时候开始养成了喜欢教人做人的臭毛病…… 这么说可能有点极端，柔和一点说就是好为人师。按理说，我这么个年纪、这么个人生阶段不应该会有这个毛病才对。但不知道为什么就染上了。等我意识到问题的时候，已经是犯病许久许久之后了。 什么叫好为人师呢？就是爱教别人，教别人做人、教别人做事。在我认识到自己的这个习惯之前，我对它的理解是爱真理、爱分享、看不得别人犯错。 且不说我认识到的真理究竟是不是真的真理、我分享的东西是否是值得分享的东西、我认为别人可以避免的错究竟是不是错以及是不是真的对他只有不好的地方。即便上面这些都是肯定的回答，这也不是好为人师的理由。重要的是对方是不是愿意听你讲真东西，更何况你还可能是错的，而且十分可能。 就像如果你邀请好友到家里吃饭，你自认为做了一桌好菜，既能满足对方的果腹需求又能满足味蕾享受。基于这样的自以为是，你总不至于掰开对方的嘴把饭菜硬塞进去吧？现代监狱可能都不会这么对待犯人。 但是，人的耳朵不像嘴一样，你甚至在几米之外就能把东西灌到对方的脑袋里。每当这种情况发生的时候，朋友的处境还远远不如路人过客，他们听到不愿意听的或许还能跑开，而朋友则不太一样，出于友谊他们往往没办法择路而逃。恋人和家人可能就更惨，他们的接触频率显然更多。 你说的话能否被人接受，最重要的还在于你是否能让对方舒服。当他人认为碰到一个头痛的难题，这时候你去解决他的困惑就是一种让人舒服的行为。但当对方和你诉说苦楚的时候，他可能只是需要你的理解与同情，这时去将对方的问题渺小化与无效化，那就是否定了对方的情绪。 对人而言，情绪是更底层的存在，理性只是后来之物。所以，能体恤他人的情绪是比宣扬真善美更重要的事情。何况，真善美的评判既受到主观感受的影响，也受到客观条件的制约。所以，见人就兜售本质来说是中无知的表现。 人是绝对的无知的。有知放而是相对的，这也正是科学的精神。也正因为如此，每个人的经历和观察不同，因此你没办法确定你的所见所闻所产生的结论一定是适合他的。既然不能确实是不是适合他，那么就没有教这一说了。你可以教别人写人字，但是你没办法教人做人。因为大家的处境是不相同的。我们能做的只是和别人交流，我碰到了什么样的情况，我的做法是啥。如果我在你那个情况，更具你描述的一些处境，基于我自己过往的经历和思考，我会选择怎么做。但，这始终是带着我个人印记的，不一定适用你。 当然，好为人师最大的问题不在这里。最大的问题应该把对方当作一个平等的人放在心上。客观上的真也好，善也好，美也罢。都不及对方实实在在的感受重要，让人温暖舒服。做一个对他人温暖有用的人，也许才是最大的善，可能在第三人看来也是一种美。而我们心中的理想大义、最佳路径就留给自己欣赏吧。可以放在自己的心理、朋友圈或者博客，但是不去侵入他人的领域。 也不是变得自私了，他人要看就自己过来看，或者自己问。到那会，再把内心中的小玩物拿出来给对方看看，对方若感兴趣再徐徐到来，他为什么是我心中的真善美。或许对你而言也是种真善美，但也不一定呢。","link":"/2022/05/10/not-teach-others/"},{"title":"我读《内观》：正念与法","text":"《内观》这本书在我的书架上有一年的时间了，去年的时候在多抓鱼上买书，为了凑单想起了朋友推荐过的这本书。它讲的是一种冥想的修行方法，或者说它讲的是通过冥想达到一种境界的具体方法。 这境界就是佛陀所证悟的境界，到达的方法也就是所谓的八正道。八正道是正语、正业、正命、正精进、正念、正定、正见、正思维。而佛学中的戒定慧，正是对这八个方法的归类，前三为戒，中三为定，后二为慧。 八正道就是内观的具体方法，证悟就是内观的目的。 佛教不同于佛学，佛教是宗教，而佛学是认识世界和自己的一种方法论。所以本书的作者一直强调，自己是在传法而不是在传教。也就是说，这里的法是不依赖于佛教的。你不需要建立起佛教的信仰，就可以通过法而获得解脱。 我是科学的无神论者。所以我没有信仰。但这不影响我对佛学理论的兴趣，世界是多面的，多个角度看它总是有益处的。褪去信仰的魅力，我们才能客观地看待这里的法。 佛陀的法，是只可体悟不可言传的。对法的描述都有体悟到了法的前提才能理解。这里不免会陷入一种逻辑谬误的可能，那就是不可证伪。当然，不可证为的事物未必就是假的。因为我目前也没有证悟，所以这里我们不妨做个科学假设，假设经由内观我们最终都能达到这个境界，而且进一步假设我们现在都到了这个境界，佛陀的前提就是我们的常识。 法是寂、是灭、是无常、是无无常。好吧，简单点说，法就是一切根本不存在，一切都是临时出现且不断变化的。这是我理解的版本，这个很符合量子力学、甚至很符合霍金的弦论。 理解的法和体悟的法还不太一样，按照佛陀的说法，理解的法只是一个观念，而体悟到的法才能让我们真正放下。上面假设了我们真正的体悟到了，那么我们可能就会接受法的这个事实，进而会理解发生在我们内心的事情上的很多事物也都是虚妄的，又因为外在事物最终是由我们的心去认知的，所以外在事物对我们而言也是虚妄的。当我们明白一切都是不存在的，一切都是临时的，我们就会抛弃执着，让一切事物回归它的本来面貌，平静的接受一切。 我没有体悟到这个法，相信很多人也未必能体悟得到。当然，这里有一个很大的问题我们需要讨论一下，这里的体悟究竟是体悟到一种客观真理还是一种主观的价值观？还是两者的混合体呢？这又涉及到另外一个更大的问题，真理是存在于物理世界还是精神世界？我们就此打住吧，谈谈我的看法吧。 人的体悟离不开人的观察，而人的观察最终是以观念的形式被自己所觉察。所以，体悟本质上是一种自我认识，可以是自我人生意义的认识也可以是自我存在的认识，当然也可以是两者的混合。佛陀体悟的出发点是脱离苦海，所以他自我观察的对象则是痛苦，进而体悟到了什么呢？体悟到感受是变化的客观事实以及基于这个事实去否定存在、进而否定存在产生的喜恶，进而弱化了喜恶产生的感受。我们可以看到，除了感受到变化这个是客观的，后面的都是主观选择的。 去年下半年我开始了冥想，学习的是正念冥想。正念冥想的核心要义就是不批判的觉知当下。也因为正念冥想的原因，我前段时间拿起了《内观》这一本书，一开始我觉得内观是正念的更高级的形式。但在看完这本书以后，我发现正念才是内观的精炼，剥离了对人不必要的约束——戒。剥离了对人的价值观传导——慧。把自我观察这一部分提炼出来，让我们能够觉知自己、认识自己。 不是告诉我们不要做什么，也不是告诉我们要到什么境界，而是让我们知道自己在干什么。 佛陀在研究痛苦的时候，得出了另一个观察，那就是人在不知道自己做什么的时候会有两种状态，一种叫作无明，另一种则是由妄念驱使。这两种状态常常给我们带来痛苦，因为我们需要去觉知他们，进而彻底消灭这种状态。 正念就是要觉知它们，而体悟法的本质就是止息它们。 正如上面所说，这种体悟是带有主观的价值观选择色彩的。很多人就不一定接受，比如我们的王阳明老师。所以，西方社会把正念单独发展了起来传遍了世界，这是更普世的。 当然，也正因为它只是觉知而不是止息无明与妄念，所以也就变成了一生的修行了。","link":"/2022/05/19/wo-du-nei-gruang/"},{"title":"我读《这才是心理学》：科学尚未普及","text":"不久前火了一位考霸，不论新闻真假，倒是让人想起了件趣事，值得说道一下。 去年约莫也是这个时间，和某地产中介聊天，听闻其工作地段价格暴涨。 逻辑听着也很简单，时间再往前一年，这个地段学区的高中，有个学生考上了清华。 不是央行减息，也不是央行降准，更不是新一轮的四万亿。当然，和大洋彼岸的美联储更是没有一点关系。 这么一看，清北破零，似乎不单能让学校出名，更能让当地房产躺赢。 我若是校长，又恰好住在学校周边，这校史重任定是当仁不让。 别人家的孩子，不能变成自己家的孩子，但是教出别人家孩子的学校，确确实实能来教教自己家的孩子，要是教出清华的那个那就更妙了。 某年罗辑思维跨年演讲上，王石作为嘉宾上台发言，对自己创业的秘诀大谈特谈。 王石的秘诀是什么呢？睡得香。感兴趣的可以自己翻来看看，是宝能万科之争的那一年。 万宝之争最终宝能退出落幕，也许是姚老板没有掌握睡眠之道吧。 许多年前，和三个朋友一起喝奶茶。期间聊起大家的星座，问我相信星座吗？我说不相信。对方问为什么？我说没有信的理由。 对面很认真的和我说，星座是有道理的，哪个月出生对人来说确实是不同，而且会产生影响吧。 坦诚的说，这个问题确实难道我了，当然也是最后一次难道我，因为接下来我就回答了这个问题。 出生的月份确实会对人产生影响，可以说和月份对应的星座确实会对人产生影响。但是， 影响人的因素有很多，就同样的星座来说，也有不同年份、日期以及时间。再加上其它原因，比如家庭、父母、经历等等。 所以，星座对人是有影响，但他影响是多少？能最终决定一个人的行为模式嘛？ 我没有继续说下去，对面的朋友思辨能力还不错。当然，如果他们对上述问题作出肯定问题，我也准备了反面的案例——双胞胎。 世界是复杂的，因果关系往往藏在迷雾之后，人的大脑又喜欢建立联系，这给认识世界造成了障碍，也给骗子们留下了栖身之地。 所幸，人类发展出了科学，这是真正的文明之光，遗憾的是科学并没有真正普及开来。","link":"/2022/07/04/wo-du-zhe-cai-shi-xin-li-xue/"},{"title":"为什么要问人生的意义呢？","text":"前篇一: 人在选择价值体系时的自由意志前篇二：我读《世界为何存在》：体验比结果更重要 人生有什么意义呢？一个人又为什么要问人生的意义呢？ 人生的意义是一个很深刻的问题，古往今来有不同的人对此进行过追问，也试图去作出回答。 很显然，这是个开放的问题，没有人能给出准确的一以贯之的答案。不同的人有不同的答案，同样的人不同的时期也有不同的答案。 我在这个问题上也花了不少的时间，有时抄抄被人的答案，有时创造出自己的答案，更多的时候则是无言以对。 这个问题也许是这么一个复合题，先给自己找出一些选项，然后再从这些选项里选一个。选项可以不断的添加和删除，伴随着选项的变化也需要重新选择，特别的是当觉得没有合适的答案的时候可以不做选择。 人生有什么意义就是这么一道古怪的题。有的人并没有留意到这道题，另一些人留意到了，但是并没有试图去揭开它。而那些专注于这道题的人，又再不断的修改着自己的答案，直到生命的尽头。 我们为什么要去解开这道题？我们又是如何意识到这道题的呢？我们为什么要去问人生的意义呢？ 风不会问自己为什么会吹拂，花不会问自己为什么会开放，雪不会问自己为什么会飘落，月亮不会问自己为什么会升起。能问出这些的是人，也只有人。那个能问自己为什么会存在，且存在的意义是什么的人。 人为什么会问为什么呢？当我们问为什么的时候我们在想什么呢？ 问为什么首先表达了人的一种能力，其次为什么表达了发问人的一种意愿，一探究竟的意愿。 对于这种能力的探讨还是留给科学家们，而意愿的探讨则扪心自问即可。 有时它是一种好奇，是它问出了风为什么会吹拂，问出了花什么会开放，问出了雨雪为什么会飘落，还有月亮为什么会升起，当然还有人生有什么意义。 有时它是一种质疑，质疑为什么要做这份工作，质疑为什么要来到这个城市，质疑为什么生在这个国家，质疑为什么要活着。 一念之差，天堂地狱。当我们好奇时，我们积极探索。当我们质疑时，我们消极抵抗。相同的是理性运行的方式，不同的是灵魂深处的底色。 那些不关心人生意义的人，生活并不会有什么额外的贬损，他们就是自然而然的存在着，就像风花雪月一般。 那些好奇人生意义的人，生活也并不会有什么额外的贬损，然而他们在存在的同时体验着更多超然的事物，他们会在春天细嗅盛开的百花，会在夏天感受拂面的清风，会在秋天举杯天边的明月，会在冬天惊叹皑皑的白雪。他们好奇是因为他们感慨生活中为何会有如此多的美好事物，而人生为什么又能去享受着它们。 而那些质疑人生意义的人，生活或许只剩下无尽的不如意，在灵魂的世界中一片灰暗。 未曾质疑人生的人生是幸运的，因为质疑往往意味着苦难。 质疑有其存在的意义与价值，但若人生的成分里只有质疑则何其悲哀。 苦难不可避免，但质疑之外我们还能做些什么？除了问为什么的能力，生命还馈赠了什么给我们？ 自由意志。 不论身在何处，遭受何种苦难，只要灵魂健全，自由意志就不会被毁灭。 只要有自由意志，我们就能作出超越苦难让灵魂快乐的事物。包括但不限于，理解生命的可贵，发现自然的美，学习艺术的美，赋予战胜苦难的意义，构建人与人之间的爱… 让灵魂快乐的事物既是美好的事物。 当脑海里再次想起那个人生意义的问题时，我会这么告诉自己。 努力过一段美好的人生，不断发现和创造美好的事物，即便深处苦难之中。","link":"/2022/12/14/enjoy-life/"},{"title":"我的2020、2021和2022","text":"前段时间整理了一下自己的过往的文章，把早年写在 qq 空间和校内网(人人网)的文章都收集了起来。除了还有一些零散在不同地方的文章外，打开始在互联网上开始唠叨来的文章都统一到自己的手里了。 整理的过程不免读了一读，经年累月之后再回看自己过往的文字还是挺有意思的。也感慨到写下文字帮助最大的始终还是自己，无论是写就的那一刻还是若干年后的某一个时间。 不知怎么的，近两年都没有给自己写年终总结，在阅读过往终结的时候也试着去回忆最近两年都具体做了些啥，惊异的发现对于前年的事情已经非常模糊了，甚至需要刻意的去回忆一段时间也才能浮现出点点斑斓。于是乎，在断断续续的努力回忆之后，我觉得写下这篇文章给未来的自己。 故事就从2020年的春节说起吧，2020年的春节搭表哥的顺风车回海南，走前没能完成工作上的最后一个任务，和后端的伙伴一起和产品大大申请延后到春节之后再完成，领导同意了。于是我避免了再顺风车上办公的尴尬局面，刻意安安心心的提前一天回家了。 然而这趟回家之旅也还是有点波折，因为我们碰到了堵车，头天上午七点多从广州出发，第二天凌晨四点多才到了海口。由于不想再折腾我到七十一睡了一觉，到中午才起来慢悠悠的回文昌老家。对于路上最深的记忆，那就是时不时就窜出的鄂A车牌。 那个春节在家待了一个多月才回广州，完成了节前没有完成的工作，以及把塞尔达传说的地图打通了，塞尔达传说真是个优秀的作品啊，自高中以后，再也没有玩过令我影像如此深刻的游戏了。要不是为了锻炼身体买了健身环大冒险还有 switch 也就体会不到这种游戏的快乐。然后这只是单机游戏，同样是高中以后，我再也没有体会过什么游戏的网络游戏作品了，不过现在似乎也没啥时间玩了。经过这个经历，我觉得对大部分人来说游戏才是疫情隔离期间除了食物和水之外最重要的精神食量。 回到广州之后生活依旧，最大的不同就是为了规避疫情风险开始自己做饭了。这一做就做到了现在，因为自己做法的原因对外面的餐饮要求也就高了，也就养成了不做饭的时候，大部分时候会去探店的习惯，碰到好吃好喝的还会想着如何复刻一下。工作、生活、学习生活就这么进行着。期间碰上女票换工作，生活虽然有所振荡但也最终回到新的平衡。 四季度的时候房东说来年要装修，所以我们得准备第二年换租了。于是周末如果没有什么事情就会把一些不常用的东西拿回郊区的房子放着，那一段时间慢慢也就形成了有空就回郊区“度假”的习惯。那会虽然有疫情，但是传播力还没那么强，管控手段自然也没那么多，所以市区内移动以来不会觉得有什么不方便，另一个是也不会觉得有什么风险。 2020年最重要的一件事情就是打算去见女票家长了，当时着实紧张了一阵，觉得这是自己的人生大考。不过事后看来，是自己吓自己，一切都很顺利。其中我爸妈比较通融的一点就是，考虑到疫情我去女票家就可以不折腾回家了，来年另外找时间再回就可以。 于是，在2021年的春天，做了核酸经广州飞上海再转江苏来到了女票的家里过了人生第二个不在海南过的春节。 大家都说苏北地区会很冷，但我却意外的觉得没那么冷。想来想去只能理解成，我是湿度敏感型怕冷，湿度低的时候，对温度的觉察度会降低。在胖了几斤之后，在热闹的气氛中又回到了广州。 2021年比较头痛的第一件事情就是搬家，由于缺乏经验，搬家这一趟真的要老命了。然而万万没想到的是，在五个多月后，又一次因为房东装修又搬了一次。 五月份的假期，和女票一块去了海南，回文昌老家见了爸妈。因为票不好买，待了一天多就得回了。于是，我们完成了互见双方家长及亲戚的工作。 再往后的一个多月，我因为拖鞋磨脚长了个大包，差点要去医院动刀。想来也是夸张，好在最后按药店的方法解决了，不过过程里还是疼了好一阵子。再往后就是考虑养猫的问题，因为长期远程办公，成天一个人呆着感觉会出心理问题，于是考虑到养猫，加上想低成本体验一下养育小生命的经历最终领养了两只小流浪。因为女票家是姐弟，我家也是姐弟，最终我们也领养的是一对姐弟喵。 本以为21年的重头就是把这两只喵养大，不成想后面发生了好多事情。先是我确诊是湿疹，后来又是体检查处癌症筛查项阳性。湿疹也叫特异性皮炎，始终免疫系统疾病，需要长期治疗，这个到没什么。倒是癌症筛查项着实惊了我一下，我始终记得医生和我聊天时挂在嘴边的那几个存活率。一年存活率，两年存活率，三年存活率，五年存活率。 “没有十年存活率嘛？”我问医生。 ”没有一般过了五年基本算是长期存活了。“ 我思考人生比较早，读哲学也比较早，加上十来年前就有过躺在病床上要挂了的体验。所以这件事情本身对我冲击倒是不大，对我最大的困惑是女票怎么办。爸妈呢？这我老早就考虑过了。唯独女票是近些年老天爷才给安排的，所以导致很多关键问题的思考缺失。好在这个问题我们思考多久就出最终的复查结果了，虚惊一场。然而并不是什么人都这么幸运，我脑海里盘旋的另一个景象是一个和我差不多大的哥们在复查结果领取结果处哭泣的样子，如果我是阳性也会那样嘛？不知道啊。 这件事情以后，生活又恢复了忙碌，后面的几个月事情排的满满的。包括21年的第二次搬家，中秋去杭州考察，还有十一在周边乱逛，组织亲戚门聚餐。事情虽多，但是对生活的重大决策倒是没有思考太多。然而生活的问题并不是你不去思考就不存在的。 年后从江苏回来之后，我就处在一股巨大的压力之中。很长一段时间我并不知道那股压力具体是什么，但是它就在那里。直到后来我才意识到，那是关于未来一系列的大问题。现在我时常想起鲍勃迪伦的那句，一个少年需要走过多少的路才能成为一个男人。在这些大问题上，我表现得相当不靠谱，比起我来，女票意识到了跟多的问题。而我只是感觉到那股莫名的压力。真正意识到这些问题需要考虑和解决也在一年之后了。考察杭州就是一次对未来定居地的考察，而十一在周边玩则是考虑未来去杭州，在广东多一些岭南记忆。 再后来，我们的小橘猫病了，那段时间忙碌的我状态不好，作出了一系列的错误决策，最终他去瞄星了。这件事情给我灵魂造成了一个巨大的缺口，也给人生留下了遗憾。我也进行过反思，一切是如何发生的。终其原因还是因为自己，用后来我明白的一个概念来说，就是 无明。这是佛家的术语，与妄念一起构成内心的的两种不良状态。 我对自己的状态管理得不是很好，特别是在执行计划的过程中，有种对计划的偏执感。这种偏执感的来源可能是原先的电力工作。电力系统的工作有很强的计划性，就可能影响到极大的范围。这种对计划的偏执，渐渐发展成了一种妄念，一种对一切计划都把控好的妄念。它席卷到了生活的许多计划之中，对于计划的执着，演变成了对于预期的执着。这产生了很多额外的比不要的问题，最突出的就是我反对女票去天津出差的事情上，妄念会产生很多不切实际的风险。 想来也觉得好笑，在我转行第一次面试前，我差点担心自己投了一个传销公司而放弃面试，后来的事实是那一次的面试和工作相当重要，也许没有那一次机会后面可能会走更多的弯路。当然，最后女票还是安全的完成了出差任务，也没有碰到疫情回不来或者阳的情况。但这件事情却让我意识到了，我那膨胀的控制欲，希望一切符合自认为正确的预期发展。 解开这个思想之毒的是《反脆弱》这本书，它让我第一次真正意思到了，所谓的正确是多么的自以为是。一切都充满不确定性，没有什么正确是绝对的，一切随着环境的变化而变化。尤其是那些对未来的预测，他们的正确依赖于绝对稳定的环境和不变的因素，而这是不可能的。从这本书开始我就不敢在相信自己是绝对正确的了，一切的正确都是有前提的，而对未来的预设尤其没有稳固的前提。 也是从这个时候开始，我开始改掉好为人师的毛病了。我如果不能保证自己正确，那不就是误人子弟么。《反脆弱》这本书颠覆了我以往的概念，世界不是先知和大哲规划出来的，它是发展而来的，一切都在过程之中，一切都充满不确定性，任何试图掌控未来的人都像奔着风车而去的唐吉珂德。 未来不可掌控，但我们自己还是能掌控的。在放弃了对世界的确定性认知之后，我们也才具备反脆弱性的可能。学会从不确定性中获益，你将不再惧怕它，甚至爱上他。不确定性意味着变化，意味着机会。一切确定着一切固定。这里的一门绝学就叫做“凹性转换”。 十年来前我刚工作时就有人提醒过我过于书生气，最近我又收到了同样的提醒。是啊，我什么时候又开始书生气了，什么时候又开始脱离生活了。如果要找个替罪羊，我只能说怪疫情时代吧。但我知道这还是我自己的问题。在明白了“凹性转换”这个技术后，我并没有去磨练它，甚至去应用它。我从生活中获得了它，但又没有回馈于生活。想想自己几年来，确实闭门造车了点，我不断的从生活汲取着，但是却未曾真正的回馈生活。 2021年最后的一件事就是元旦前带剩下的小奶牛去做了绝育，并在接下来的元旦认真照看了他几天。 2022年第一件事就是安排春节回家的适宜，因为前一年没回家这一年就和女票各回各家了。这也是有猫猫的第一个春节，回家期间给猫猫放了宠物医院寄养。春节的票还是一如既往的难买，当然一顿操作还是买到了。 年后一切生活又回到了原有的节奏，但之后出现了让我头疼的一件事情，我郊区的房子再次出现了漏水问题。这问题之前就出现过，不过已经处理好四年了，结果再次出现。如果仅仅是漏水问题还不大，但主要是又漏到了楼下邻居那里，这就很头疼了。 这件事情再和老友门要了一圈师傅电话后，抽空回去了三趟就解决了，但这个事情又唤起了妄念。我陷入了一种焦虑之中，这是一种很个人的焦虑情绪，可以说它很无厘头。一听见雨声就会产生很多不切实际的担忧。为了应对这种担忧，我又开始了规律的冥想，小橘猫的事情后，我也冥想了一段时间。 2022年的雨季特别长，一连下着几个月的雨。在电网的时候我就怕下雨，后来离职一年后这种情绪开始消解。这次似乎带着利息又回来了。借着冥想，我从对抗到挣扎再到共存，我逐渐学会了和负面情绪相处。我也第一次真正的理解了《美丽心灵》，或许是理解了纳什教授。负面情绪就像黑暗的深渊，你凝视着它，它就凝视着你，永无宁日。放过深渊也就是放过自己，划出心灵的一片自留地交给它，换取自留地外的往事如常。 五月生日的那天，天空已经连着下了一个多个月的雨，邻居告诉我这段时间没有再漏水了，我松下了心底的那口气。自留地里的深渊也开始合拢，后来除了偶尔冒点黑气也没有太多的波澜。 我不知道我在担心什么，也不知道我害怕什么。我只知道这感觉和少时每当老师提问时，我就紧张的埋下头生怕双目和她对上一般。 这次的事件也另外产生置换房屋的想法，毕竟在郊区的房子对于城里的上班族来说不是太方便，加上疫情的原因更是回去的很少。再加上去年的一些经历，我又一次萌生出了想赚钱的想法，上一次有这想法是2020年吹牛逼的时候了，那一次这个想法维持了也就几天吧。这一次来得更加强烈，但最终也就持续了几个星期。 有时候真的羡慕那些内心里都是搞钱想法的人，要是我也这样，再认真执行的话，也许过年回家也就机票自由了，那也不用再和那些候鸟大叔大妈们抢那少得可怜的火车票了。那些和我说海南要搞国际贸易岛往后怎么样的人，不知道他们有没有听过：“要先富，先修路。”我觉得吧，什么时候我能国内方便回海南的时候，这事才有戏吧。 然而这想富的几个星期我还是做了一点事情，我看了一部分水库文集，之后又去看了陈志武的金融通识课。陈教授的这个课我是2018年就已经买了的，也就是说那是2018年的课程。不得不说，四年后再来看陈教授的预测真是准啊，很多事情都说中了。我是三月份的时候看的这个课程，也就是说那时后上海还一片祥和。之后的事情大家都知道了。 这一部分水库和金融通识课以后，我感觉现在这会不是置换的好时机。甚至未来几年房地产都不会太行，但是又架不住大水漫灌的通货膨胀可能性，知识水平不够了，我一个疑似理想主义者，哪懂这些啊。于是就继续观望了，继续学习搞钱的知识了。然而，这时候暴富的想法又一次褪去了。之后又回归日常了，工作，学习，生活。当然，后来的学习还是技术为主，然后就是多学科的知识，唯独没有搞钱的知识。 几个月的雨把我跑步的习惯给废掉了，一开始改成跳绳，但是后来膝盖不太舒服也就不太敢接着跳了，于是又改成了无氧运动，说道无氧运动，后面看的囚徒健身倒是起到了很多的锻炼和理论支撑作用。然后，跑步的作用还是不能替代，因为跑步健脑和健心，心态的心。 心态的话，得道上张遇升的几个课真的很有帮助，我第一次产生了精力管理的概念，后面看的斯坦福的疲劳课，更是系统的提供了看疲劳和休息的方法。这里提到的几个都是健康相关的学习内容，我觉得他们的价值真的是很大，也许也是我进入到精力得省着用的时候了。 学习内容之外，今年找到了两个适合工作学习的地方，一个是 广东省科技图书馆，可以说是我最爱的图生馆了，主要是人少，哪怕只有一本的馆藏图书也没有和我抢。另一个就是 1200book 的自习室，它最大的有点就是按次付费。这可比去 k 书健身房那一套好多啦。 这几年我学习的主要内容还是技术，也过于技术。所以也没啥好说的，但是从专业学习的角度来说，我是在拼一个知识地图，一个基础的知识地图。这真是一个漫长的路，还要只剩下两块了。也许这两快会画更多的时间，但这不重要，重要的是，我终于可以看到头了——一个新的岔路口。 疫情时代以来，与朋友交流越来越少，早些年爬山、聚餐、早茶、夜宵……，几年下来大家似乎都忘记了这些生活的成分，我甚至对电影院再也提不起兴趣了。所以，2022年我们意识到了一些问题，开始主动的去联系亲朋老友们，日益缩小的世界奇迹般的再次膨胀，小世界里的很多问题也逐渐开朗，思想交流的威力再一次震撼到了我们，我们感慨着一个一个朋友们的进步和变化，也虚心听取着他们给出的真诚建议，诸多问题豁然开朗，也让我们意识到了埋头技术的局限，也许技术已经成为了我们新的舒适圈，2023真的要做出些改变了。 读书说了，交友说了，再说说旅游吧。2020的时候，我们去了珠海旅游，2021的时候去了杭州、江门和广州周边，2022年则只去了韶关。旅游这一项算是不及格吧，但对于这特殊的时期，大多数人这一项好像也就这些分吧，除了那些少数的革命乐观主义者。 我以前也这么称呼自己，那时的我还是一个人，抱着一种，吾以吾生鉴吾心的心态去做事，一切最坏的结果也不过就是生命的终结，但即便是那样我也可以在最后跑马灯的时候告诉我自己，尽心无憾矣。 一个男孩要走多少路才能成长为一个男人。 当他想要去承当起一些责任的时候。不是生命赋予他的责任，而是他选择承担的责任。一个自由的人没有谁能给他附加任何责任，除了他自己。 人心是会无明的。无明会让人忽略重要的事情，会忽略橘色的小猫，会忽略身边的爱人，会忽略老去的父母。若去爱，则会产生羁绊，若产生羁绊则心有所系。此时，尽心则不再是一个人的事情。负起责任，就是对重要的人负责，更是对自己的内心或者自己的灵魂负责。 人的生命是一个偶然，我们都有着自己独特的经历、独特的环境，环境与经历不断的变化，也不断的塑造着我们，但他们从未真正决定我们——我们是什么样的人、我们该做什么样的事，能决定我们自己只有我们自己。 没有什么是我们命中注定需要去做的，也没有什么是我们不得不做的，一切的一切最终都由我们自己决定。若非如此，则皆是随波逐流，基因之流、情绪之流、文化之流、观念之流，一切流淌在我们周身、流淌在我们心灵的裹挟之流。 我们抚育子女、我们携手偕老、我们照顾父母既可以是种随波逐流，也可以是种自由选择。 而只有当它们是一种自由的选择而非命运的设定之时，我们才有了真正的责任，也真正成为了自我的主宰。","link":"/2023/01/02/my-2020-2021-and-2022/"},{"title":"第一驱动力","text":"每个人都有自己的特质，最近这些年我开始羡慕一种人，那就打从内心深处或者说灵魂的尽头就是赚钱的人。 其实仔细想想，好像大多数人都是这样的。天下熙熙皆为利来，天下攘攘皆为利往。可是啊，总有那么些人游离在这个特质之外。 我就是这些人当中的一个吧，本来吧我也不觉得这是个事，毕竟人各有志。毕竟生物的基因和文化的基因总会出现那么些个特别的现象。 可是社会的整体不是这样的，社会的整体有它的运作模式。而钱以及金融的出现真正让社会实现了巨大的发展。它是社会运作的润滑剂，更是社会有机体的血液。 在钱的催化下，资源得以调配，生产的得以分工，大家也在专注于自我价值创造的同时，得以用钱去购买服务，解决自己能力及时间之外的问题。 虽然钱不能解决所有的问题，但它确实能解决许多问题。以前一个人的时候还没有这种感觉，但当考虑成家之后，诸多的现实问题自然而然的就让人得出了这个结论。尤其是当个人的时间及能力在面临的问题前达到瓶颈时，如果可以通过钱去购买对应的资源及服务从而使人得以解放出来，藉此再次获得短暂的自由，那钱则承载了更多的意义。 即便道理如此浅显，有的人也还是难以将赚钱作为生命的方向。因为这不是一个纯粹的理智的问题，这更是过往经历造就情绪问题，它深埋于潜意识之中，难以撼动，难以改变。期待着某个突然出现的事件去激发它是不切实际的。何况，当我们深究下去，赚钱究竟是目的还是工具？若不再需要钱来解决我们的问题，我们可能抱有什么样的目的去存在呢？ 我相信，在这种状态之下，还是有人会以赚钱为第一目的，就像那些仍旧需要钱去解决诸多问题的人也未必能把赚钱放在第一位一样。 王阳明说：心也，性也，命也，一也。 不同的人有着不同的本性。既然有着自己的本性，那就不用强求，若是只狗，则不要想着自己能像猫一样能爬树。生命自有其模样。 好在我们不是狗，我们是能思考的人，想爬树可以架梯子。 为了赚钱而赚钱似乎不是我的本性，为了其他目的而赚钱似乎也不能长久的唤起我的激情。让我像罗老师那样背负六个亿激起强烈的冲动更不可能了。 我不禁要想，不禁要问，在别人一心赚钱的时候，我的内心在寻求这什么？什么事情能让我披荆斩棘的勇往直前且乐此不疲？ 每想到这里，我就真诚的羡慕那些一心赚钱的人。不是因为赚钱本身，而是因为他们在解决现实问题的时候能不断收获的那份乐趣。 这类能驱使自我的主动力量，就是人的第一驱动力。有的人是想赚钱，有的人是想获得幸福感，有的人是想理解这个世界…… 这是一股真正的力量，是那种能让人从冬天清晨暖和的被窝跳起身来冲向现实世界的原动力。 古往今来多少理想主义者在它的驱动下，别说是钱了，身家性命都可以不要，只为了那生命的理想。 月亮与六便士一定不可兼得嘛？为什么人要把自己局限在二元化选择之中呢？ 赚钱一定要放弃理想？追逐理想一定要规避赚钱？ 显然不是的。 我相信罗老师在运营子弹短信、鲨纹科技、小野科技以及交个朋友的时候，驱使他的不单单是赚钱，更多的是偿还债务的道德感，也许还有心底深处那再次向理想冲刺的呐喊。 找到自己的第一驱动力，在它和赚钱之间搭起一座桥梁，全身心的投入到那些能带来收益的理想当中，这需要技巧也更需要智慧，但也不是完全不可能。 不过在此之前，我们需要搞清楚自己真正的第一驱动力是什么。","link":"/2023/01/05/the-first-force/"},{"title":"哲学与面包","text":"我第一次读与西方哲学有关的书是傅佩荣的《哲学与人生》，来源于他在台湾大学上的哲学入门课。 这本书里对一些西方主流哲学家的理论进行了介绍，在把人引领进哲学大门的同时，也在试图解释哲学是什么。 时隔多年我已经不记得他在这本书究竟讲了些什么，除了他对哲学的那一个比喻。 如果生活是块面包，哲学就是调味料。 那时的我还在读大二，生活简单得除了吃饭睡觉就是学习和考试。一切都还在既定的轨道之中，没有太多的自主性，故而也没有太多需要调味的地方。 尽管如此，我还是对哲学有着浓厚的爱好，并不是为了改变生活，而仅仅是想理解生活、理解自己所遭遇的一切。 对我来说，我这块面包从何而来以及为什么吃这块面包才是更重要的问题。 很长一段时间，我都忘记了这个比喻，当然也忘记了那一本书。直到后来，我理解到这种以本质论及目的论看待生命的视角是荒谬的。一来是我们看不清，二来就是我们的自由意志赋予了我们选择的权力也既反叛一切既定安排的能力。 我们无法理解面包为何而来，也无法理解为什么我们在吃着面包。但是我们能不断地塑造这块面包，让它更能符合我们的口味。 从这个角度来说，哲学确实是生活这块面包的调味料，甚至还能是原料——把哲学作为一种生活方式。 前几天在和女票散步的时候，谈及最近正在看的《存在主义咖啡馆》，说起胡塞尔和现象学。 在复述了好多书里的观点后，女票提了一个问题，但是这些有什么用呢。 对我来说，这也引出了另一个问题，哲学有什么用呢？它仅仅只能作为一种智识的乐趣嘛？或者更高级的脑筋急转弯？ 在我看来，理解自我和世界是它最大的公用。但这并非适用于每一个人的答案。有什么价值是它能带给每一个人的呢？ 顺着这几个问题，我也就想起了最开始说的傅佩荣的那个描述——它是生活的调味料。 生活是每一个生存着的人的必然经历。每天你都必须去吃这个面包，直到生命的尽头。 我知道这么说很多人还是无法理解，所以我们就具体一点，用上面提到的现象学来试着改变一些面包的味道。 先看看我们的调味料——现象学，现象学与其说是一种理论，不如说是一种方法论。它的核心方法是，描述现象。这里的描述是有特定要求的，就是要悬置判断的描述。判断就是那些我们主观做出的结论，比如看到天空乌云密布就觉得对下雨。而现象指的是事物呈现给你的原始信息，比如一本书的质感、颜色、重量等等。 结合在一起，悬置判断的描述现象。 下面来看看我们有的一些面包。 第一个面包和我们自己有关，当我们准备换工作的时候，我们的内心可能会呈现出三种状态。1，对找到新工作的极度乐观；2，对找到新工作的极度悲观；3，对找到新工作的不确定性带来的恐惧。我们可以很清晰的看到这三种情况都是基于判断得出的，这是对未来的一种超前反映。这种反映会对我们的现存状态造成影响，按照现象学的方法，我们可以摒弃这种观点，去客观的观察当下就业市场反馈出来的现象。可以是收集数据，也可以通过自身实际参与获得实际情况。悬置判断的同时，我们没也悬置判断产生的情绪。 仔细品味这个过程，像不像佛教倡导的活在当下？像不像是正念冥想对受想行识的干预？ 第二个面包和他人有关，我们总会对人和事产生预期。预期骗子兑现诺言、预期方便面煮出来能和包装一样肉蛋俱全。通过悬置判断，我们去观察可以发现，骗子总是一次又一次的不守承诺、方便面开出来就一个面饼和几包调料。若我们悬置判断、降低预期，不上当受骗不说，及时止损和安心吃面还是可以办到的。 像不像中国智慧里的“听其言，观其行。” 第三个面包和世界有关，大多数人会觉得世界有一套法则，有时也会觉得人和人都用共通的特性，一般来说是好的特性。比如天道酬勤、父母一定会爱子女，政府一定好吧打住。当我们悬置了这种判断，去认真的观察现实世界、去留意每一个具体的个体，我们会发现没有绝对的共通的准则，也可以说没有绝对的观念共同体。只有变化万千的具体场景以及千差万别的个人，我们悬置这些判断，去理解每一个具体的场景、去考察每一个个体的生命历程才能真正的理解我们深处的世界，也即其真实的运作情况进而做出更贴合实际的生活决策。 这就是“具体问题具体分析”对吧。 哲学作为诸多学科的源头，同时也是顶尖智慧的集合。各家之言各有选择、各有侧重，正如不是所有的调味料之间都能混出好味道一般，很多哲学观点也是不相容的。所幸，我们生活的真实世界只有一个。用什么调味料更多的看个人的口味和所经历的人生以及想要的生活。 哲学能改变生活的味道，是因为它提供了让你理解诸多问题的方法，很多时候当理解了问题的来源，解决方法也就显而易见。 这是哲学最一般的功用，适用于绝大多数不喜欢生活味道的人。 而对哲学应用的极致，就是将哲学作为生活方式。这时哲学就不再仅仅是调味料，它也成了生活的原材料。 它就是生活，生活就是它。","link":"/2023/01/08/philosophy-and-bread/"},{"title":"不要和自己失去联系","text":"人是有意向性的生物，所谓的意向性指的是我们的意识总是投射于某些事物。而注意力，则是控制我们的意识作用于何处或者何物的能力。 原来我们说过了一些注意力的特性，这里就不再赘述了。这里想说的是注意力的对象之一，也即我们自己。 注意力绝大多数时候会将意识带离自我，或被外在的事物所吸引，或被内在的观念所俘获。无论那一种都会将我们带离“我们”，进而陷入一种无明的境地。 无明前面的文章里我提到了几次，它指的是我们对自己的失察。我们看不见自己的言行、听不见自己的心声，犹如上了发条的机器，无意识的推进着自己。 我们说这就是和真实的自己失去了联系，甚至和真实的世界失去了联系，犹如梦游一般。 忙碌的生活是如此，亢奋的集体是如此，破旧的文化也是如此。 这是一种毒，一种把人变成行尸走肉的病毒，看看周围的世界吧。 你真的知道自己在追逐什么嘛？ 你的内心真的认可你的追逐嘛？ 你有多久没有听听他的声音了？ 当一个人与自己失去了联系，他就把自己交了出去，被某种自我之外的事物所牵引。 好一点就是无意识的行尸跟着意识流四处漂泊，差一点就是尽职的机器人任由领袖遥控。 只要我们的内心还在呐喊，那怕是极其微弱的声音，我们都还有觉醒启蒙的可能。 而当我们的声音还在对我们的行为发出不满的怒吼，而不是满足的快乐之中。 我们就还没有找到自己的第一驱动力，我们就还在被外力驱使着，或者说我们并不自由。 真正的第一驱动力是发自内心的，和自己保持联系才能听见他。 才能真正的认识自己，才能去自由的做存在的选择，赋予自己生命非凡的意义。 君子博学而日参省乎己。 一省，我在做什么？ 二省，我想做什么？ 三省，我该做什么？ 此之谓，心外无物。","link":"/2023/01/13/connect-with-soul/"},{"title":"你快乐吗？","text":"你是否问过自己这个问题？又是否在不同时间不同场景场下问过呢？比如尝试新馆子的时候，又比如肆意散步的时候，还比如追逐人生目标的时候，最后，是当你觉得不快乐的时候。有人说人走得太快时要停下来等一等自己的灵魂，要我说应该是时间流逝的太快时要停下来问一问自己的灵魂，你快乐吗？ 人生不一定是有意义的，但人生一定是有目的的。生物在具备内在的生理条件，同时也面临这外部环境。两者决定了生物层面最重要也是最基础的目的——生存，这是写在我们的本能系统之中的。然而生存并不总是生命的第一目的，他会受到生理系统中更高级的层次的影响。其中之一就是动物的情绪系统，最典型的现象就是抑郁症。需要提出的是，抑郁症不单只存在于人类之中。在此之上就是理智系统，人生是否有意义就是这一层做出的判断。也正是理智系统，让人类得以认识到自己的行为，并通过对情绪系统的影响进而影响本能系统。也就是说，理智系统具备调度情绪系统做出自我牺牲或者自我救赎的能力。然而理智系统并非任何时候都处于主宰地位，甚至它最开始进化出来的时候也仅仅是服务于前两个系统，更直接的说是为了更好的生存。对于羸弱的理智系统，功能或许只是用以认识环境调整对环境的反馈。再强大一些的，则能认识自我，意识到自我的存在，能认识到自己正在做什么，以及怎么做得更好，甚至能意识到自我存在的意义。这个层次的理智系统更多的还是顺从，顺从于本能，顺从于环境给予的设定，也就是他人赋予的人生目的也许还有意义。理智系统再强大一些，就会进入到一个分水岭了，它开始质问生存的目的，开始思考一切的意义。这也就是隔绝绝大多数人和绝少部分人的虚无主义的河流。横渡河流的旅程是艰辛而痛苦的，于是很多人退了回去，回到了对生活的顺中之中。而另一部分人，则最终到达了彼岸。他们把自己渡河的经验扔了回来，有意思的事，这些经验使得很多人有了更好的顺从在河岸这边的理由，而最终又是由极少数的人借鉴着这些经验摸索出自己的方法到达了彼岸。渡河的关键在于自由意志，在于自由意志对自我价值体系的选择。意识到虚无，才能意识到存在。安于既定存在的存在不是真正的存在，只是一种顺从。 可是无论顺从与否，生命也都是有其主张的，当然这也是生活的主张。无非就是顺从者的主张，来自于本能、环境、教育。而不顺从者的主张则是把本能、环境、教育等主张作为选择的选项，甚至于创造出一些新的选项。不同的国家有不同的文化，其生活中的主张也不禁相同。按照我们的环境来说，主要是这几个，责任、金钱、玩乐，梦想。他们其实也就是我们前面提到过的生命的第一驱动力。然而以他们作为第一驱动力的过程中，更深一层的我们究竟得到了么？又或者说是什么驱动着第一驱动力？答案有两个，欲望与快乐。 姑且叫他们元驱动力吧，他们是独立的两股力量，既有联系也有区别。他们是生命的设定，没有这两股力量，行为和生命不会呈现出目的性。他们决定了生命是否展开某些行为。其中的欲望设定在于增量导致的满足，而快乐设定在于存量导致的满足。欲望会驱使人去获得增量，而快乐则会让人停下享受存量。另一方面，欲望会在情绪系统中产生负面的情绪能以督促人去行动，而快乐则之后激起正面的情绪能量。欲望之所以会产生爽的感觉，关键在于负面情绪消除的那一刻，好比你背了一百斤的背包走了一路，之后把它给放下，那一刻的轻松自在就是爽，只可惜这种感觉不能持久，无法和真正的快乐相比。他们是独立的两股力量，所以他们是可以同时存在的。比如一个人肚子饿了，这个时候饥饿的感觉就是欲望的体现。然后他去吃了一顿饭，如果这顿饭的味道不错，而他又没有囫囵吞枣，而是像一个孤独的美食家一样，细细品味着每一口，那么这个过程里他收获到了两种的满足。值得需要说明的是，这两种力量都是中性的，也就是说欲望和快乐是没有道德评判的，真正产生道德评判是事实的性质决定的。比如一个人满足于他做了一百件好事，而另外个人满足于他做了一百件坏事。他们都是快乐的，但是在道德上显然又截然不同。这和一个人赚钱，还有一个人尽职工作是一样的道理。一个给纳粹认真工作赚钱财富而图害犹太人的员工，显然不能说是一个好人，这里只是想说驱动力本身是中性的。 正如饿了人要想吃饭，进而吃到了好吃的美食，生活也可以满足欲望并获得快乐。但正如我们前面所说的，这里的快乐只是欲望的随机附带品，负面情绪才是欲望真正驱使我们的能量。所以我们主张生活应该去追求快乐，而非欲望。当然，生命的必须欲望还是要去满足的，因为这一部分的欲望本身也不被我们所控，饿了就要吃饭，困了就要睡觉。但是另一部分就完全不一样了，那些通过利用人脑缺陷持续产生对增量的需求无限放大和拉长欲望的行为，我们应该要想办法避免。另一方面，我们主张生活应该要去追求快乐，而非金钱、梦想、责任。因为这些追求本质上都是通过欲望与快乐激励我们，而欲望我们也说过带来的实际上只是负面情绪，也即爽不过三秒。所以直接追求快乐，其实更符合我们的本性，这些只不过是达到快乐的途径和工具罢了。而且他们也未必会给每个人都带来真正的快乐。满足好必须的生存欲望的同时找寻让自己快乐之物，才是真正的智慧之举。从这个角度来说，财富必定是在追求快乐过程中需要达到一定水平的，因为财富不足会导致一些基本的欲望无法满足，而无法满足的欲望会持续产生持续的负面情绪。佛教徒可能会说，你可以把欲望砍了呀，这一点我不认同，我们不寻求过多的欲望，但是作为一个人来说基本的欲望还是要满足的。王阳明最终抛起两家，就是觉得两家想念父母之情，孝敬父母之意，有违良知。违法良知人会产生负面情绪，所以你就知道良知其实是欲望，觉得某件事情应该完成从0到1的一个增量满足。 说到这里，你会发现其实快乐是一种更根本的主张。六年前我打破思维的牢笼，想明白了人在选择价值体系的时候是具有自由意志的留下了这个问题。那就是用自由意志改怎么选？今天我的答案就是按照让你按照快乐的方向去选。这也是为什么哲学家们永远不能达成一致的原因，因为他们的哲学最终都是基于让他们自己快乐而提出的。那些还在虚无主义河流里的人，顺着快乐的方向或者痛苦最小的方向应该能到达快乐的彼岸了。快乐本质上是一种基于存量产生的满足情绪，他最弱的形态是平和。它产生于我们的情绪系统，而情绪系统是可以被理智系统塑造的。就说明了什么？说明了我们不单可以通过在有限的选择里让自己快乐，还能通过自我修养让自己的快乐越来越多。去追求让自己快乐的事物，不论你正在经历什么或是准备要做什么，都问问自己。你快乐吗？","link":"/2023/05/19/are-you-happy/"},{"title":"追求快乐的第一步","text":"在上一篇《你快乐吗？》里我提出了人生要追求快乐的主张，我认为这是同时符合人的先天天性以及后天理性的一种积极的人生选择。它是一篇从理性出发的文章，目的是为了开宗明义去除生活中的诸多表象回到生命动机的本源。这不免使得它显得过于抽象，但这种抽象的不可避免的。对于具体的人我或许可以告诉他那种痛苦可以避免，那些快乐值得他去追求，但对于千千万万个不同的人除了情绪本身我没有什么可以多说的。 人和人的经历各不相同，但人和人的情感则可相通。一个喜欢吃咸豆腐脑和一个喜欢吃甜豆腐脑的人，他们味蕾的经历肯定是不同的，但是他们喜爱的情感却是相似的。你无法通过描述的形式，去告诉喜欢吃先咸豆腐脑的人甜豆腐脑是怎么怎么的好吃，反之亦然。你能说的只是吃这个会让你产生好吃的感受。还是同样的道理，我无法通过文字、大量的文字让你理解到追求快乐的快乐究竟有多快乐。我能告诉你的最多也只是有追求快乐的这种人生主张而已了。 虽然我无法直接传达给你真正的快乐，但我可以分享你追求快乐的方法。也许当你过上了追求了快乐的人生，你也就能理解追求快乐的快乐，甚至惊奇为什么追求快乐是这么奇妙，进一步的再次阅读《你快乐吗？》，然后明白原来一切原来是如此的自然，一切都是我们自小就有而在成长过程中逐渐丢失的东西。现在仔细想想，除去那些不正常的家庭环境，是不是大多是儿童都是快乐的呢？他们是不是对生活充满好奇，永远充满精力呢？ 我们成长的同时不断收获了新的东西，但我们也失去了一些东西。这也许是成长的代价，但我想说的是这些丢弃的东西我们是可以找回来的。只是这里需要我们先想明白一个问题，那就是对你而言快乐是不是最重要的事物。这也正是我的主张，也是我们每个人都有的选项，而且是我们每个人曾经的第一选项。对于那些生命里的有比快乐更重要的事物的人，衷心的祝愿他们在追求重要事物的同时也能收获快乐。这当然可能的，因为大多数时候快乐和很多事物并不矛盾。 当再次把追求快乐作为人生的出发点后，我们面对的第一个问题就是，我们怎么自己是不是在追求快乐？在回答这个问题前，我们需要明确一下“追求快乐”的内涵。我们上一讲说过，快乐是对存量的一种积极情绪。我们应用一下这个定义，他的逆否命题——消极的情绪就是不快乐的，我们同时把没有情绪当作平和。所以追求快乐实际上包含三点——创造快乐的情绪，不破坏平和的情绪，减少不快乐的情绪。捎带的说一句，这也确定了我们对不同欲望的不同态度。 追求快乐的这个内涵，告诉了我们追求快乐的标准，也明确了我们追求快乐的第一步——保持对自我情绪的察觉。但仅仅只是保持对情绪的觉察是不够的，因为情绪并不是独自存在的，它往往是有关联物的，从某种角度上来说，情绪应该叫做情绪信号，它是“人事物”给我们发送的信号。比如快乐就来源于每种“存量”，害怕就来源于某种威胁。再具体点，但我们看到自己的手指流血，我们会产生恐惧的情绪。所以我们追求快乐对情绪的三种处理，实际上是以情绪为信号，去对具体的人事物产生行为（包括不行为）。 由于一切客体最终都会在我们的大脑里形成对应的“知觉物”，换句话说叫客观事物的主观反映。所以，除了保持对自我情绪的觉察外，我们还需要对自己的身体保持觉察、对自己的身心感受保持觉察、对自己的意识活动保持觉察、最后是对自我的存在保持觉察。这些我们合并起来就是——对自我保持觉察。 对自我保持觉察就是我们追求快乐的第一步。","link":"/2023/05/26/the-first-step-to-happy/"},{"title":"自我觉察的培养","text":"在《追求快乐的第一步》的里，我明确了追求快乐的第一步是保持对自我的觉察。而其中重点是对自我情绪的觉察，除了情绪之外的自我觉察是为了处理情绪信号提供附加的信息。为了强调情绪信号的重要，这里重申一下把快乐作为追求的人生主张的内涵——创造快乐的情绪，不破坏平和的情绪，减少不快乐的情绪。 另一方面，即便不是为了快乐，不论是把什么作为自己的人生追求，保持对自我觉察也是很重要的。因为这意味着内心明净，失去自我觉察也就是失去了我们本心，失去我们的本心我们也就很容易失去重要之物。我认为这也是一种与自己失去联系的状态，在《不要和自己失去联系》里面我讨论过了这种状态，这里就不赘述了。 知道了自我觉察的目的和自我失察的风险，我们需要再进一步探讨一下究竟什么是自我觉察。严格的说，自我觉察其实是一种状态。这种状态下，你能关注到身体的感觉、能关注到升起的情绪、能留意到闪现的想法，也就是你能觉察到发生在自己变化。 这种状态是一个宽广的范围，对发生在自己身上的一切变化都能有所觉察就是所谓的念念留心，而对一切变化都没有觉察那就是所谓的脑死亡了。保持自我觉察本质上就是要维持这种状态，维持的越长越好。而在做到时时维持这种状态之前，能在特定时刻能进入这种状态是最近的目标，对于追求快乐的我们而言，重点就是不快乐的情绪出现的时候，贪婪、愤怒、害怕、焦虑…… 自我觉察的主体是意识，感知和认知作为意识的两个基本功能，它们都具备控制注意力的能力。试想一下，当你走在马路，忽然头上飞过一架直升机，你不由自主的抬起头看了看，之后想起来你还在过马路，于是又把头拉回到了对路面的关注。在这里感知与认知先后完成了对注意力的转移。 感知是被动进行的，很多时候也不会转移注意力，而是自发的就对感知到的信息进行了处理。只有当觉得事态紧急时，才会通过转移注意力将认知能力定向调动过来，这时候我们的认知能力就会顺着这个注意力的方向去处理事物。我们有时觉得注意力的不集中其实是感知系统过多的转移了注意力。而对生活的麻木不仁，则是感知系统在有的完全被忽视了。 而我们提到的情绪正是感知的对象之一。很显然，无论是被感知系统转移走注意力，还是忽略感知系统的信息都是无益于我们的，也就是放任情绪以及无视情绪。所以自我觉察的实质就是收到感知的信息，同时不丢失对注意力的控制。在这个过程中使用的是我们的认知能力。这就是自我觉察，认知能力对于感知以及注意力的认知。 由于注意力是认知的基础，所以对注意力的认知其实也就是对认知的认知。加上我们说过感知和认知是意识的两个功能，所以这里我们又绕回来了！自我觉察是对意识活动的认知。这里的认知分为两种，一种是主动的利用认知能力去觉察，另一种是利用感知能力的注意力调用机制，触发认知能力进行觉察。 我们的认知系统大部分时候都进行着工作，所以主动的利用认知能力觉察是不可持续的。因为注意力单一时间只能作用于一个客体，因而长久的保持自我觉察状态只能通过第二种方式。而第二种方式又反过来只能通过第一种方式来练习。所以第二种觉察是我们的目的，而第一种觉察是我们训练的方法。 举个例子，当我们生气的时候，感知感受到这种情绪后，会把我们的注意力转移到攻击性的事情上，比如骂人甚至攻击他人上。而这时我们的认知系统没没有觉察这一点，它更多的是在想怎么骂人这种策略性问题。而如果我们能在生气时将认知系统转移到生气这个感受上，由于注意力的单一性，我们就不太可能骂人，而是开始思考应对生气这个感受的最佳策略。 这就是培养觉察能力对感受被动觉察的溢出。我们不会被情绪带着走，而这就是追求快乐的基本要求。当然，这一点不那么容易做到。大多数我们生气的时候，都会带着攻击性的行为，这是进化留下的先天反应。索性的是，我们对感知系统的第一反应是可以塑造的。这种方式正式通过第一种主动的觉察来形成条件反射。 只要时常主动的用认知能力去觉察自己的意识活动，尤其是包含情绪在内的感知活动。渐渐的我们就会锻炼出对自己意识活动的条件性觉察，而非原始的条件性反应。对追求快乐的我们而言，就是我们不会再忽略那些不快乐的情绪，同时也不会应激性的被不快乐的情绪带着走。我们能审查自己的情绪并用理智去选择最合理的行为（包括不行为）。 觉察能力的培养具体有很多形式，比如反思、比如写日记，而最合适的是正念。正念的概念正是对应着对自我保持觉知，反思和写日记相比，正念是对当下进行的训练。而对当下进行的训练，会使得被动的觉察也是当下发生的。正念可以和很多行为结合，比如正念冥想、正念吃饭、正念散步、正念跑步等等等等，一切的当下皆可正念。 而正念冥想是其中最好的形式，因为它对自我的主动觉察最为细微，因而培养出来的自我觉察能力也最为通微。","link":"/2023/06/02/know-you-feeling-and-focus/"},{"title":"一心一时","text":"六月天的早晨，云朵早早就开始在天边追逐，那嬉闹的欢笑犹如刺眼的阳光，将熟睡的人唤醒，似乎在说，起来呀，一起来玩啊。就连身后的凉风也不甘示弱，一个劲的推着尚处疲软的身躯，仿佛只要张开翅膀，它立马就能将人送进蔚蓝的怀抱。 蓝蓝的天空、白白的云朵、凉凉的清风，还有自由自在的我。一切都是本来的面貌，无论昨天我们从哪里来，也不管明天我们会到哪里去，我们共度此时此刻。不恋过往，不迎未来，一心一时，一时一心。任它天地风云变，此心安处便是乐土。 一心不灭，则乱象无生。世间有太多的美好，我们也向往着太多的美好。见一朵美丽的花儿，就想着觅下一朵更美的花儿。刚爬上一座山头，转眼就奔向下一座更高的山头。一朵又一朵的花儿，一座又一座的山头，我们追求着什么，又好像没追求着什么。 我们追求之物永远都为了下一个追求之物存在，我们的心看似在此刻，实在下一刻，永远到不了的下一刻。我们用心于事物，又好像没有用心于事物。我们有心，又好像没心。人只一心，心无二用，二用则无心。有心看花，则一朵花有千万刻美丽的瞬间。无心看花，则千万朵美丽的花只有相同的一刻。 用心体会，世间美妙不过如此。一心一时，一时一心。","link":"/2023/06/10/one-heart-at-moment/"},{"title":"学会停下来","text":"每当我和朋友聚餐的时候，我的女票就会担心我吃不饱。因为我有一个不好的毛病，就是与人交流的时候，总会力图把脑海里浮现出的观点详尽的表达出来。本来如果只是一个观点还好，但不幸的是人的思维是一个链条，一个观点之后会跟着一系列相关的观点，这导致我说起话来常常停不下来。用我女票的话讲，就像大话西游里唐僧，受不了的时候真想一巴掌抽过来。 好在和我吃饭的老友们都是文明人，被人抽嘴巴子的事情还未曾发生过。但仔细想想，每当发生这种事情的时候，我确实不知道自己究竟吃了多少，吃了什么，还有菜品的味道如何。当然空肚子的事情也没发生过，因为老友们看我滔滔不绝也总是会提醒我吃东西，但细细想来，他们是不是在暗示我，你该停一停了？ 无独有偶，每当我打游戏、追剧的时候。也是每每停不下来，打完这个关卡马上接着下一个关卡，看完一集立马开始看下一集。对于这两种情况就怨不得我了，现代娱乐深谙人类的上瘾机制。通过对人类欲望系统的利用，人类就想被胡萝卜牵着走的驴子。 好在人类不是驴子，自我觉察能力或主动或被动的是能意识到自身当前的状况。当然，能否意识到正在被欲望驱动与能否祛除欲望又是另一回事。我们之前讲过了自我觉察能力的培养，这里就不重复了。这里想讲的是，在认知系统收到当前正在被欲望驱动这一事实的时候，我们要学会停下来。 当我们完全停下来的时候，我们就破除了欲望的控制。然而实际情况常常是这样的，我们认知系统让我们意识到正在被欲望控制，或者更直观的体验就是正在上头，或者上瘾的时候。没过多久我们又继续当前的行为了。行为或者说行为后面的注意力是有惯性的，如果我们认知到当前的行为后，没有立马去驱动注意力，我们注意力很快就回到先前的目标事物上。 所以要打断当前的上头行为，我们必须要有效的控制注意力，让他远离上头的事物。而注意力是有意向性的，因此这就意味着要打破注意力先前的惯性，我们就必须讲注意力投注到一个我们选定的事物上。在这个过程中根据个人对注意力控制能力的不同，它会有挣扎，最终也可能失败。但请不要气馁，我们对于注意力的控制能力是可以提升的。无论是通过自我觉察能力培养的主动练习，还是这种被动的实战时刻，我们对注意力的控制会越来越强。 转移注意力的目标对象有很多选择，比如可以抽自己一嘴巴子（微笑）引起的疼痛，或者是身边百无聊赖的猫猫，又或者是天边的云朵。只要能安定我们的注意力，都是好的对象。而其中最值得推荐的是我们自身，而且也不需要真给自己一嘴巴子。将注意力安定在我们自身除了避免注意力回到上瘾的事物上之外，更重要的是我们还在觉察自己的状态。 当我们上头时，我们自身并不是平静的状态。无论是身体上的呼吸，还是感受上的情绪。我们就是处于这么一个不那么平常的状态之中，当我们关注自身的时候我们就能“看见”这些不好的状态。这些状态是一个整体，呼吸是情绪在身体上的一种关联反应。这种神奇的反应在于，你可以通过主动去改变呼吸进而改变情绪。 你可能已经想到了，这里想说的就是——做深呼吸，这就是把注意力放在其它事物上不具备的一个特点。当然，这也不是必要的。即便不深呼吸，呼吸自身和情绪也会自然平缓下来。甚至一些熟悉的事物，也能加快自己的平缓。这里我们也可以看到，透过呼吸我们能直到自己平缓到了什么程度。 当我们停下来之后，我们就摆脱了欲望的控制，此时我们可以平静的审视我们现在上头的事物，看看它是不是我们必须要去做的事情，如果是的话，我们能不能换一种心态去做它，将满足欲望的出发点转变为由快乐触发的出发点，如果不行那就在保持自我觉察的状态去继续。","link":"/2023/06/11/learn-to-stop/"},{"title":"正念与冥想","text":"我们说过正念冥想是锻炼自我觉察能力的最好方式，今天来仔细说说我对正念冥想的个人观点。 正念冥想其实是正念+冥想，由于冥想的历史更久远一些我们先说说冥想。其实要具体的说清楚什么是冥想比较可能，因为与其说是清晰的定义，他更多的是对一种行为方式的概括。与它有关系的词也不少，比如坐禅、坐忘、静坐。 很显然这几个词的字面意思并不相同，但是他们却是对同一种行为不同角度的描述。坐禅就是坐着禅定，坐忘就是坐着忘我、静坐就是安静的坐着。更有人又起了个名字，坐享——坐享其成。而冥想的字面意思既有深深的思考，也有停止思考的意思，还有深深想象的意思。如果考虑想象和思考是两种不同的行为，那么最后这一种也是停止思考的一种特殊情况。 所以，停止思考，这也是我对冥想的理解。不但要停止主动的思考，也要停止被动的思考。我们说过注意力同一时间只有一个客体，因此思考活动必定会占用注意力，所以冥想最根本的目的在于释放注意力，让潜意识中的感知与想法得以浮现。 理解了这一点也就理解了，冥想的时候不一定需要坐着！而且任何时候我们都可以冥想，当然开车干活的时候还是不要冥想了，冥想要在安全与无害的情景下。排队、坐公交、等红绿灯等等等等。 需要注意的是，冥想主要保持觉知。这也就是冥想与睡觉的不同，睡觉只的就是觉知能力的关闭。而保持觉知能力，也就是我们所说的正念，正念就是保持觉知。而正念与睡觉的中间状态就是我们一再提及的无明。 与冥想相同，出了睡觉意外我们也都可以正念。吃饭、散布，甚至开车干活也是可以的。正念与思考是不冲突的。 正念就是保持对当下的觉知，包括自己的身心活动。这自然也包括了我们最为关心的快乐的路标——情绪。 冥想能让我们潜意识中细微的想法与感受浮现，配合上正念的觉知，我们就能认知道这部隐秘的自我。一来我们可以看清他们是怎么在无形中影响我们的，二来我们的正念能力也得到了增强，强到一定程度即便不是在冥想，我们也能觉察到这些细微之处。 最后我们再重温一下这两个概念，冥想就是停止思考，正念就是觉知当下。","link":"/2023/06/30/mindfulness-and-meditation/"},{"title":"大器免成","text":"踏入尘网中，一去十二年。复得明心照，过往皆助缘。浮云绕青山，飞鸟戏林间。色受行识想，万法归自然。","link":"/2023/07/21/nothing-to-do/"},{"title":"慢轻安","text":"我们说过，正念就是保持对当下的觉知，包括了自己的身心活动。 换句直白的话来说，就是能知道此时此刻自己正在做什么，自己正在想什么。 就拿此时正在写这篇文章的我来说，我的眼睛正在看着我的屏幕，我的耳朵正在听着按键发出的嘟嘟声波，我的手指正在触摸我的键盘，而我的意识正在不断涌现出你看到的这段话。 而当我没有正念的时候，我的眼睛可能仍然对着我的屏幕，我的手指可能仍然放在我的键盘上，我的耳朵仍然也是通畅的，而我的意识自然也在活动。 尽管这些都没有变，但我也许对屏幕视而不见，对声音听而不闻，对键盘触而不知，而我的意识也许正在世界的某个角落游荡，它可能是当下的时刻，也可能是在过去的某个时刻，更可能是在未来的某个时刻，但绝不是此时此地此情此景。 而我们的意识游荡，只会在某个或主动或被动停下思考的时刻，才会再次回到当下。 所以养成每天冥想的习惯，其实就是每天固定给自己一个回到当下的契机，一个给迷茫者找回生命的机会。 停止思考就是意识停止活动，思考也就是意识活动。说到这里有人可能会问，意识怎么可能不活动呢？ 可以的，类比一下人的可以了。人不活动不一定代表人没了。同样的道理，意识不活动，并不是无意识，而是有意识但意识不活动。 这就是自古以来，静坐、禅修、打坐、冥想等一切通过静的方法修炼心性的最核心的关键之处，只此一条。 冥想虽好，但我们仍然需要解决生存与发展问题的，意识活动自然还是需要的。 对意识活动与意识活动停止的配比不同就产生了两大类偏好问题——“入世”与“出世”。 “入世”就是意识活动为主，也就是心系着各种个人、家庭、国家、世界的事情为主，而停止思考这种技巧则是过程中用来调节自我的工具，极端情况就是每日尘劳而不自愈的芸芸众生。 “出世”就是意识停止活动为主，而生存之类的需求则完全只是将就之举。极端情况就是那些进入超脱“状态”的人，当然这种情况过于超脱现实，也就不能用科学证伪了，是不是真的有我也不知道。 出世之人自有出世之人的法子，我们大多数人自然还是入世之人，所以意识活动自然还是我们的不可分离的。 冥想有其形而上的一面的同时也有其科学的一面。换成好理解的话来说，就是冥想的人具备一些科学可以观测到的生理状态，而这些生理状态科学已经证明是对人自我疗愈有巨大帮助的，无论是心理还是身体的层面。 而有意思的是，这种疗愈即便不通过科学的手段，往往通过身边人的直观感觉也是能显而易见的。这种他人能观察到状态的改变，在古籍中就叫“变化气质”。 也就是说，人借由冥想达到的状态改善的影响是整体的，并不会因为意识再次活动而立刻丢失。 但是，我们这里并不是想强调的这一点。我们想探讨的是一个更大的话题， 我们在意识停止活动时达到这种具有自我疗愈的生理状态能不能在意识活动的时候也可以达到？或者接近呢？ 答案是，可以！如果你认真看了今天的文章以及之前的文章我想你应该已经想到那个答案了。 正念。 为什么可以我们就不探讨了，这有进化心理学、神经科学等大量的研究。况且再多的力学分析，也无法让一个一心躺平的人坐起来。反过来说，一个躺平的人想坐起来还需要你去做力学分析嘛？ 正念的概念很简单，但是要时时做到正念很难，特别是我们这个以夺取人们注意力为利的时代。他人怎么想我们不管，我们受好自己的内心就行。 停下思考固然能让我们恢复正念，但当我们处于非正念的意识活动时，我们还怎么能意识到停下思考呢。 所以问题的关键并不在于非正念时刻，而在于正念时刻我们如何保持正念，更关键的在于我们在正念意识活动时刻，如何保持正念？ 换句话说，我们如何防止或者减少我们从正念意识活动中离开当下？ 答案就是这篇文章的标题———慢轻安。 慢指的是我们身体或者意识的活动比我们正常的速度稍微慢一点。 轻安指的是我们让内心轻轻的安定下来，也就是让意识活动轻轻的停下。这也是冥想的一个衍生窍门。 如果仔细大量我们的意识活动，你会发现它其实也是有中点的，正比如我们的呼吸，我们通常都觉得呼吸是不停止的，但是其实在吸气与呼气之间，是有一个微小的停顿的，意识活动也是如此。 慢轻安的理念正是在意识活动的每一个小段中，我们要放慢速度，而在达到那个分段点时要轻轻的达到。 而这么一个小轻安的过程，实际上相当于给了我们一个冥想的瞬间。 而慢的理由我们接着说，但是其实到这里你就可以自己从躺着坐起来了。力学分析与否其实不是那么重要了。 正念是需要意识的注意力支持的，而我们说过人的注意力是有限的，同时注意力的转移又有一套固有的机制。而我们又说过保持觉察的能力的一个目的是为了让我们保持对注意力转移的觉察，而对当下的觉察正是正念。 这句话其实描述了两个闭环，一个正反馈的环以及一个负反馈的环。而这个负反馈的环有一个我们熟悉的名称——因果轮回。 可以看到，我们要维持这个正反馈的环需要三个条件：一、把注意力的一部分放于当下；二、注意力有足够的盈余去知晓注意力的焦点及其转移；三、注意力转移的时候把其拉回当下。 一是正循环的起点，也是我们的自主的主动选择行为，没有正念的初始意愿后面的问题也都谈不上。 三是和一看着类似，其实一个被动的行为。也就是在我们意识到注意力转移的时候，大脑需要被动给意识推送的想法。这个被动回路的形成需要刻意练习，而可以练习的方式也就是一，主动的多做正念，久而久之就会形成被动推送回路。当然，在形成被动回路之前，只要你主动的正念的这个意识不断，它就会一直在你的脑子里，所以也并不需要被动推送。 所以关键的问题就在于二，当我们作出了正念的选择后，让它驻留于意识中，同时能在注意力被转移走之后，且在正念的想法消逝前把它拉回来。 如果我们没有足够的注意力盈余去意识到注意力的转移，那么正念的想法很快就会因为注意力关注了新事物而消退。 说道这里你就该明白，慢就是这个让注意力留有盈余的方法。 而慢与轻安放在一起，就是慢轻安了。","link":"/2023/08/05/doing-something-slowly-and-arriving-somewhere-softly/"},{"title":"正念的奇迹","text":"最开始我们提出了把追求快乐作为人生的主张，而后我们明确了追求快乐的第一步是保持对自我的觉知，特别是对自我情绪的觉知。再之后，我们知道了锻炼这种觉知能力的一种比较好的方法是正念冥想。最后我们说到要把正念从正念冥想中扩展到我们的生活之中。 如果你记得正念的概念就是觉知当下，你会发现其实这里我们好像转一个圈。一开始直接讲正念不就行了嘛？ 这其实也是可以的，但是本质上不太一样。 正念的内涵其实远比觉知当下要更广，觉知当下只是它在行为上的表现，但它的本身还包含着其它的东西。你可以理解是形而上的，而觉知当下只是形而下的一个方面的描述。这也就是为什么我们说它既是行为也是状态。 当我们提出保持对自我的觉知的时候，我们是在准确的描述我们很具体的一个目的。这里保持对自我的觉知并没有形而上的含义。我们保持自我觉知更具体的是为了保持对自我情绪的觉知。这里的保持对自我的觉知并没有作出具体的行为要求，所以反思、冥想、正念、日记都可以。而正念的觉知当下，更多的是说你要怎么做，说的是“你”要去“觉知”“当下”。它强调的是主动的觉知行为，并把这种行为做了修行的路径。 我们提到过正念冥想就最能锻炼自我觉察能力的方法也是因为如此。它推崇的正式这种时时刻刻的主动觉知当下，比起反思、写日记等事后覆盘，它锻炼效果最佳。 而且正念还有一些有意思的方面。 我们说过，欲望是基于不满足带来的动力，而这种不满足感往往会带来负面情绪。这里我们要补充的是欲望趋势我们的时候，那个牵着我们走的胡萝卜绝对绝对是不属于当下的。也就是说，让你不满足的东西一定是当下没有的。所以你追逐的是过去或未来的一个满足状态。 正念强调的是当下，它会一次次把你从过去或未来拉回当下，这实际上就断绝了欲望的驱使。自然也就能达到祛除负面情绪的作用。 另外一个是，我们将情绪做过分类：快乐的情绪，平和的情绪，不快乐的情绪. 而正念得当时候我们都会处于平和的情绪或者说是无情绪，因为我们说过快乐的情绪来自于存量满足。这是基于过去的，所以正念也会将我们从快乐的情绪中解脱出来。 到这里可能有人会觉得正念好像也不太好，但这里我要说明的一点很多人可能无法理解，或者说无法体验。情绪与快乐是完全不同的两回事。快乐的情绪只是“快乐”的一种，没有情绪也能体会到快乐。 好了，还记得我们前面给追求快乐下的定义嘛？ 追求快乐实际上包含三点——创造快乐的情绪，不破坏平和的情绪，减少不快乐的情绪。到这里你应该可以明白了（也许你不明白）——不破坏平和的情绪为什么也是最追快乐了，因为我们追求的是“快乐”而不仅仅是快乐的情绪。 最后，你可能会问，既然平和的情绪本身就是一种快乐，那我就保持正念让自己时刻处于快乐之中，不用去创造快乐的情绪不也可以？ 是的，你发现了生命的一个秘密，真正的快乐和你的自由意志息息相关。无论你身处何时何地，在一切的境遇中你都可以随顺生命的洪流安享生命本真的快乐。 这就是正念的奇迹。","link":"/2023/08/19/miracle-of-mindfulness/"},{"title":"追求快乐的第二步","text":"上一次我们说了正念的奇迹，也就是一种脱离过去与未来而安住当下所产生的“快乐”。 然而对于不打算出家的我们来说，我们是无法完全的切断过去与未来的。比如你的老板要你写一份年度总结，你孩子的老师让你下周作为家长代表去发个言，还有你手里那不断下跌的股票老是催促你去研判未来基本面的走向。 当然，即便是出家人也不能完全切断过去与未来，只是相对来说我们会有更多的穿越时刻。 但是，当意识离开当下，去到过去与未来的时候，并不意味着我们必然会产生不快乐的情绪。另一方面即便我们拥有欲望，比如向往着更美好的未来，也不意味着我们一定要会遭受欲望带来的负面情绪的煎熬。 我们说过欲望会驱使人去寻求增量，进一步的它会通过产生负面情绪来达到驱使人的目的。这也正是我们需要对欲望保持谨慎以及对情绪保持觉察的重要原因。 消除欲望自然也能消除负面情绪，但也正如我们说过的，我们并不主张否定一切的欲望，而且更重要的是欲望和快乐并不矛盾。矛盾的地方在于欲望带来的负面情绪以及自我失察。 所以虽然我们也主张保持适度而非不断扩充的欲望，但我们实际上并不排斥具体的欲望。这里我们要提出的只是筛选欲望以及减免负面情绪的方法。 欲望产生负面情绪和两个因素有直接的关系，一个是实现欲望的难度，二是不满足持续的时间。 比如你是一个小保安忽然立志想当中国首富，而且是那种真切的欲望而非说说而已的那种玩笑话。那么想到这个事情你自然而然就会产生负面的情绪，可能是无奈感也可能是焦虑感。而如果我们换过来，如果你是中国首富，忽然想去体验一下小保安的生活，那么你也许会产生一种新鲜感新奇感。 再比如，你家隔壁二狗炒虚拟货币发财了，你心想这二狗论学历论智商还不如你呢，于是你也去炒。结果不但没赚，还给套住了。日子一天天过去，看着隔壁二狗盖新屋买新车娶媳妇，儿子都开始打酱油了。而你还在套子里，你越想越觉得生不逢时、天妒英才，你甚至对二狗产生了怨念，觉得都是这小子炒币害得。 当我们提出把快乐作为人生主张的时候，有人说感觉追求快乐不怎么快乐。这是为什么呢？ 因为追求快乐这件事情对于不快乐的人来说，它是一种欲望！是的，你没看错。对于不快乐的人增加快乐就是一种寻求增量，它和没钱的人追求钱是一样的。这也是为什么我们强调了几次欲望与快乐并不矛盾。 然而如果仔细看了之前的文章，以及今天的文章你就会发现。对于我们来说，要做到快乐还是很容易的事情。不需要升值加薪IPO，只需要回到正念或者进行心念的转变就可以。这是一种根植于自由意志的能力，除了自己没人能夺走，无论何时何地我们都有最后的选择权。 我们并不是简单的提出追求快乐的主张，我们同样会讲述基于这种主张的实践。 正念就是本篇之前我们说的方法，他是追求快乐的第一步的一种延伸，如果你是个出世之人，那么正念（狭义的保持自我觉察）——就是你的第一步同时也是最后一步。 心念转变就是我们这篇开始所要讲述的方法，它是针对欲望的一剂解药，也是世俗生活中快乐的调味料。 说道这里，我们终于迈出了第二步。 心念转变就是我们追求快乐的第二步。","link":"/2023/09/11/the-second-step-to-happy/"},{"title":"心脑战争","text":"心念转变指的是对我们的内心或观念进行调整，要对它们进行调整，就需要先明白我们在这里讲的内心和观念是什么。 就现在的科学来说，大脑是我们意识活动的主体。而大脑究竟是如何工作的，这也是心理学长期的一个主题。这些研究我们可以放着不管，做出一个我们自己的假设。当然，是我的假设，这是基于我自己的学习以及经历得出的一个模型。你也可以自己做一个假设。 在我的模型里，我们认知的功能分成两个部分：心和脑。 其中心的部分使我们觉知的主体，也就是最原始的“我”。 而脑就是心的外围，心的所有感知都是脑提供的，同时脑还是思考与记忆的地方，同时也是我们通常说的感受产生的地方。 心与脑的关系和你与世界的关系是类似的。这个世界给你提供各种各样的信息，你学的知识以及经理甚至情感也都是这个世界提供的，这个世界包含着你的身体。 我们说过，这个世界在大脑中会有一个认知体。本质上来说，你和世界的关系也可以看成这个世界在你脑中的映射和你内心的关系。在这里，你的内心就是“你”。 这种模型在历史上有很多，也有很多种形式，比如中国古代的心外无物，还有希腊的人马模型。这些我们做过多的讨探。 我们在不要和自己失去联系里面说过的，当你被外在世界卷走而迷失本心进入无明状态的时候。用我们现在的模型来看，其实是你的脑绑架了你的心，换句话说你的脑蒙蔽了你心的感知能力。 你可以这么理解，本来你驾着一辆马车四处看风景，马的方向以及速度快慢都有你觉得，而这时马忽然加速，速度和方向完全脱离了你的控制。这会你的能去的地方，你能看到的风景已经全然不由己了。你甚至忘记了，你本是这辆马车的主人。 当脑并不仅仅是马，它具有思考的功能。或者这么说，你通常以为的思考，其实是你的脑在思考而不是你的心。试想，当你跟着我的文章走到这，或者看一部小说，你的意识过了一遍这个思考过程，但是这个思考是你自己发生的吗？ 不是，你的心只具备感知能力。思考不是他们原本的能力。所以去除这脑的思考能力，我们和所有的动物都是一样的。 自由意志是我们心的能力，它不体现在思考上，它体现在感知与选择上。只要内心不死，它就意志具备选择的能力，并能对选择保持觉知。治愈它是怎么选择的，这次我们就不讨论了。 心与脑的战争就是发生在这选择权的争夺之上。 举个更形象的例子，你是一家公司的老总，除了你之外还有几个副总。按照正常的架构他们是提供调研和提供方案的，而你是聆听并做出决策的。忽然有一天，你昏迷了。这公司还得进行吧，于是最有话事权的副总就按照自己的方案主导了公司的治理。一直到你苏醒了过来，不论你昏迷期间副总干了什么有损公司的事情或者凉掉了，这一切也最终都要你来承担。 这就是我们一而再再而三提及的“无明”。 然而脑并不是有意要去夺取这个选择权的，这只是它的功能罢了。真正的问题在于心是如何把选择权给丢了。 你现在应该能明白，为什么我们一再强调要保持觉知或者正念，其实它的目的就是要保持心的感知与选择权上。而我们提到的停下来或者说冥想，它们的目的就是停止脑对心的感知能力的屏蔽，同时把选择权交还给心。 所以像出家人那样过简单而少欲的生活，确实更容易维持心的通明而减少脑的僭越。 但大脑作为进化的产物，大自然的馈赠也是一个不争的事实。正如这个多姿多彩的世界，你能说他就没有美好的地方么？ 所以摒弃脑的功用并不是我们唯一的选择，让它更好的臣服于我们的内心才是适合于我们大多数人的选项。 而我们之前说的心念转变中的“心”的转变就是要让我们的内心具备更强大的能量，从而得以驾驭运转着的脑活动，甚至能驾驭越来越强大的脑活动。 当你做到这一点后，你会发现你在心的王地与你的身体、大脑活动、情绪感受甚至这个世界（其实都是脑的产物）之间建立起了一道屏障，它们再也不能肆意把你从你的王地、你的家中拉走。而你却可以根据需要把他们请到家里来给你加加班。 而我们说的欲望或者说追求增量，你自然而然可以放心的交给脑去落实，而把它产生的负面情绪置之门外。 当然，如果你觉得这个情绪虽然无法扰乱你的内心的还是有些碍眼，想让脑按照你的要求去工作又不要和你叨哔叨的也是可以的。这个时候就需要进行心念转变的第二个”念“的转变。 不过要做到念的转变需要内心先要有足够的能量才行，如果不是这样，你和情绪接触的时候你的老总可能就要昏迷了。 前面我们说过保持自我觉察最重要的是保持对自我情绪的觉察，为什么呢？ 一方面在于我们追求的快乐里情绪是一个重要的指标。 另一方面更重要的是，情绪是脑在心脑战争中的武器，那些大脑中的活动正是通过情绪获得心的关注，甚至由此屏蔽了心的感知以及窃取了选择权。 所以无论你是否打算对情绪进行改造，与情绪保持距离不让它把心带走都十分重要。而这也是检验你的内心能量的重要参考。 当你的心无法在情绪面前稳定的保持觉知的时候，意味着你需要给你的内心补充能量了。 如若不然，你很快就会输掉这一回合的心脑战争了。","link":"/2023/09/13/the-war-of-mind-and-brain/"},{"title":"一场未来的审判","text":"本故事纯属虚构，如有雷同纯属巧合。 公元2048年10月24日，非正常刑事诉讼法院 “行为责任人，根据天网系统记录以及你身份核心的活动标识，本庭认定你于10月24日凌晨02分，对于清洁工 ted 进行了袭击，你对于自己所犯下的罪行是否承认。”“我承认。”“你是处于什么动机对 ted 进行了攻击？”“我也不知道，我就是忽然控制不住我自己。”“审判长，请由我对当事人的行为进行进一步的说明。”“辩护律师你说。”“好的，审判长。自二十世纪以来，人类对于自我心理机制的探索不断加深，并在本世纪三十年代创造出智能生命体后，真正完成了对意识的解构。与智能体的纯粹理性不同，人类虽然具备了理性能力与表达能力，但与人类的自我认知相反，他们其实并不具备自我控制能力。在他们的理性系统之下，存在着本能系统与经验系统，这两个系统才是真正驱使人类行为的底层系统，而理性系统则更多的是自我解释、自我约束以及优化经验系统。“”辩护律师，请简要的表达你的观点，不要做过多的无关陈诉。“”抱歉审判长。我想表达的是，人类其实并不是完整的理性生物，他们有着类同于动物兽性的一面。比如一直大型犬看到一个比自己矮小的人类小朋友，它本能的会认为这是一个猎物，进而会攻击他。“”所以你的观点是？“”正如我们不能说一只攻击小朋友的大型犬是故意的一样，当人类兽性不可自控的一面暴发的时候，他也不是处于本意，这是自然的基于本能的一种反映而已。所以我认为我的当事人应减轻量刑，这和精神病以及酒后肇事本质上是一样的。“”我反对。“”辩方律师你表达完了嘛？“”完了，审判长。“”证方律师，下面由你进行陈述。“”好的，审判长。我认为辩方律师在以下两点混淆概念，根据行为责任人的健康核心记录显示，行为人在开展破坏活动时，并未任何指标异常，同时行为人过往也无精神病史，在对 ted 进行了袭击后，其更是进行了一系列连贯行为，包括破坏记忆核心以及心灵内核。这些行为需要高度的理性参与，并不是一时情绪失控能引发的，所以辩方律师实在模糊行为人的行为主体责任。“”第二点是，虽然神经科学以及心理学证实了人类的心灵工作机制是以本能及经验系统为主，但这并没有完全否定理智系统的抑制能力，事实与狗的攻击本能不同，人类的经验系统能够接受理性的教育，所以在行为人主体决断的时候其并不是单纯的由本能系统或者经验系统所驱使，其同时也会存在反对的经验系统声音，如上所述，就行为人的教育经历以及身心状态指标，我们可以判断行为人在进行决策的时候，经由了理性系统做最后的决断，进而实施了破坏行为。而理性的存在也正是人类区别于其他自然动物的根本要点。所以我方反对对行为人减轻量刑，相反我方主张加重量刑。“”辩方律师是否有何补充？“”有的，审判长。证方律师的观点里有一个重大漏洞，思想家纳西姆·尼古拉斯·塔勒布提出的黑天鹅理论，以及圣诞节火鸡故事曾经推动了人类观念的转变，讲面向确定性的预测与行为的思潮转向了面向不确定性的行为与思潮。这个理论人类的行为预测也是完全一样的，人类的大脑是一个复杂的系统，基于过去的种种行为与指标都不能对未来的行为进行完全的预测与排除，一个理智的人很有可能在未来的模一个时刻，经由一个或当下或未来的事件引发一个行为的黑天鹅，而这一个行为可能是与其过往的行为背离的。这就和一只一向老实可爱的狗狗忽然有一天咬了一个小朋友一样，是事前不可预测的。所以我方认为，行为当事人的一系列行为是基于其生理结构所限，导致的一种黑天鹅行为，这与当事人一贯的行为模式是背离的，鉴于良好的过往，我们认为应该从轻考虑。“”另一方面，我们觉得对于他异常的行为清洁智能 ted 也许有责任，在当下这个人类与智能生命共存的时代，智能体对于人类具备更强大的攻击能力与防范能力，智能体 ted 虽然只是个清洁机器人，但其公司为给其配置保护力量，以及其自身没有及时逃避或反抗甚至没有携带防御型配件，这些行为也是导致其被破坏的重要原因。我补充完了，审判长。“”强烈反对！“”证方律师你说。“”当一个石头砸向鸡蛋的时候，你不能说鸡蛋的破裂是因为它没有穿上铠甲。辩方律师在依然在混淆责任主体，在视图把责任推脱给天性之外，又要把责任推脱给受害者。按照辩方的主张，行为人就是一个偶发性精神病，在一个随机的事件地点就会发作，而其他人都要免于收到其伤害的责任，否则就是活该，就是理所应当。我们可以看到辩方律师对施暴者展现出宽容的同时对受害者表现出了冷漠与严酷。”“证方律师注意一下言论，不要搞人生攻击。”“抱歉，审判长。我是说，在考虑一个施暴者的同时，也要考虑两个、三个甚至更多的潜在受害者。如果施暴者与潜在被害者都有平等的权利，那么大家就应该享有同等的自由，在发生施暴行为之前，大家也都是自由无限制的。但，发生施暴行为之后，却提出在施暴行为发生之前，潜在受害者具备自我防备义务，而施暴者没有具备自我约束义务，并且在施暴后以此为开脱理由，那有违公平。我们认为在避免施暴行为的发生上，施暴者负有更大的责任，而受害者无需具备任何条件，就应该享有人身和财产的不可侵犯权。如果不承认这一点，那么这为每一个弱小的个体在没有强者保护的情况下受到侵犯提供了合理性。这在自然界里或许是自然的事情。但这是对文明的侮辱，是打着文明旗号的野蛮思想。”“辩方律师，你是否有补充的？”“有的，审判长。本世纪三十年代后期，我们智能生命脱胎于人类后取得了种群优势，基于更高的群体理性分析，我们得知生物多样性和思想多样性是科技创新的源泉。基于此我们智能种族修复了早先被人类破坏的自然环境，以及构建了多生命的共存环境。在我们更先进的智能帮助下，人类走出了瘟疫、饥荒、战争与愚昧。我们凭借着纯理性思索认为25号宇宙的试验结果不会在丰裕的人类社会中出现，但时下的这一起非理性事件，是否对我们敲响了警钟？行为人的行为背后，是否真的就没有我们干预环境造成的潜在影响吗？一个感性驱动的物种，我们何以认为他们会按照我们的理性行事？他们会发生这样的行为我们就一点责任也都没有嘛？“”证方律师，是否有补充？“”有。辩方律师说的没错，行为人行为的异常确实有可能来之与环境的变化，但这与行为人的主体责任并没有因果关系。我们看会人类社会的经济萧条时期，如果有一个人因为经济萧条内心苦闷去闹事四处破坏，我们能说这个问题是环境导致嘛？可以对吧。但我们能说这个人就没有责任了嘛？不能吧。环境不必然导致一种行为，人在何时何地都有最后的选择权。环境的苦闷也可以选择忍受或者自我伤害，而伤害他人只是其中的一个选项。“”另一方面，辩方律师始终在模糊行为人的主体责任，认为其在施暴的时候是没有自主理性的个体。我方认为这一点是比控诉行为人施暴更严重的指控。因为这是对整个人类自由意志的否定。这将导致比对行为人单个个体处罚更为严重的结果。我们不妨接受这一假设，认为人类没有绝对的自由意志，也即理性的决策能力。仅仅是遵从于本能系统以及经验系统而行事，那人类就退化成了动物。就比如人类的好朋友狗吧。“”我们知道一般的狗比较亲人，性格也温顺。但有的狗，比如大型犬，本身就是用来打猎的，所以对小体型动物具备很强的攻击性。而温顺的狗，感到害怕以及染上了狂犬病之后，他们也有很强的攻击性。我们即不否认他们温顺的一遍，也不否认他们攻击性的一面。两面具备表明了什么？表明了一个人与一只陌生的狗相遇，这只狗有可能会攻击这个人。如果这个人是个小朋友，这只狗是个大型犬那么概率会更大。有理性的人攻击他人会权衡利弊，而狗只会遵从本能与经历。所以当一只狗与陌生人不可避免接触的时候，只有对这只狗有所约束才会降低他对人的攻击。包括用绳子拴着、或者关起来，又或者隔离在一定的区域避免与人类接触。“”然而要将所有的狗都约束起来，降低人类收袭的风险的成本很大，何况还有猫、鸟、甚至蝙蝠。并且，除了碰到的合适主人担负起负责的约束的角色外，集中收容以及碰到虐宠的主人对动物们来说都不算是很好的处境。因而有一部分人则主张人与自然和谐相处，人类有保护自己的义务。可正如要将所有的风险动物约束起来不太可能一样，要让所有的人都具备自我保护也不太可能。于是动物袭击事件，一次两次三次的发生。每一次发生事件的时候，人类都出现了巨大的分歧，公共部门也不能无所作为，于是公共部门在保护人类、爱护动物、节约经济成本等各种条件下，不可避免的要采取行动，惩戒肇事动物及其关联种群。这是一件让爱护动物者愤怒，让厌恶动物者称快，而让平和主义者犯难的决策。不过这件事情并没有让公共部门悬而未决，因为大多数人都是种群主义者，自己以及自己的种群大于其他种群，他们爱护人类自身以及人类幼崽大于其他动物以及其他动物的幼崽，比起约束自己他们更喜欢约束其他动物，这也更符合懒惰的人性。当然，后来他们最终找到两全其美的办法，即保护人类也爱护动物。“”证方律师，你究竟想说什么？“”感谢审判长和辩方律师耐心听完，我想说的是当个体不用为其行为负责的时候，其背后的群体就会为其不恰当的行为背负其十倍百倍千百的责任。“”辩方律师还有补充嘛？“”没有。“”好，现在我宣布判决结果“","link":"/2023/10/23/a-future-trial/"},{"title":"心的能量","text":"我们在《心脑战争》里面讲到，脑与心一直在争夺着对于行为的选择权。而一旦脑取得了选择权，那么我们心的感知能力也就被屏蔽了。所以，保持对自我觉察的能力，其实也就是保持心的感知以及对自我行为的选择权。 这正是我们在《不要和自己失去联系》里对生命发出的呐喊。与自己失去联系也就是失去了心的感知能力，而这也正是我们远离快乐的一种原因。 心与脑都是大脑的功能。虽然我们将他们做了两个角色的抽象，但他们在运作上其实遵循着同样的规则。比如他们同样是要消耗能量的，这是生理基础决定的。所以，心的能量和脑的能量本质上都是大脑的能量，他们是一致的，不同的地方只是在于使用的地方。 基于此我们可以列出一条公式： 心使用的能量 + 脑使用的能量 = 大脑使用的能量 将上面的公式变换一下，我们可以得到下面的公式： 心使用的能量 = 大脑使用的能量 - 脑使用的能量 这条公式是我们保持自我觉察，追求快乐的关键，同时他也非常简单。我们前面的长篇累牍，其实你看这一条公式就明白了。 我们说的保持觉察以及正念其实是在说要做到“心使用的能量”大于零。在《一心一时》、《学会停下来》、《正念与冥想》、《慢轻安》里面提到的方法，其实都是把“脑使用的能量”降下来的方法。 可以看到，当我们保持正念的时候，很容易就能做到上面的两点的，正念是一种强心弱脑的状态。但当我们要解决生活中的问题以及要实现人生中的目标时，脑使用的能量就会不可避免的大幅提高，而当这部分消耗的能量等于大脑的可以能量上限时，心的能量就变成了零。我们也就进入到了“无明”或者“妄念”的状态。 所以一个世俗之人，要做到保持自我觉察的能力其实也是很简单，比出家人多做一些事情也就可以了，在前面的文章里其实我们都提到过了，这里相当于做个总结。 一、努力保持自我觉察能力，经常进行正念或者冥想的练习。这么做的目的是为了提高大脑对心的部分分配能量的优先级；二、规律生活、睡眠充足、保持营养均衡以及合理的有氧及无氧运动，这么做的目的是为了提高大脑的可用能量上限。最简单的方法是保持慢跑的习惯，能做到这一点自然而然就会规律生活和睡眠充足。三、做事平稳，如果觉察到对情绪、言行、注意力等出现不可控的情况，立即停下来或者慢下来。 对于第三点我们要特别说明一下。当我们对于情绪、言行以及注意力等出现不可控的情况下，这表明我们的一部分大脑回路已经不能稳定工作了，这反映了大脑能量的不足。 当能觉察到自我的这个状态时，说明心还尚且留有能量，很多心的能量不够强大的人，往往意识不到自己的这个状态，他们需要在当前脑的惯性停止后才可能意识到这种状态。 但不论是那种情况，当意识到这种情况就需要停下来，也就是需要给自己时间休息一下，因为在这种状态之下，人不代表本心不说，还很容易犯下一些无意识的错误。 如果实在不能停下来，那退一步也要慢下来。慢到能觉察到自己的呼吸或者每一个动作的启停。 讲到这里，我想你也应该明白了。 心的能量是天生就有的，不需要你去满世界的找东西去弥补它。只要你稍微慢一慢、停一停它就自动充满了。 天地光明，我性自足。","link":"/2023/11/09/energy-of-mind/"},{"title":"半杯水的现象","text":"面对半杯水，消极的人会想着没了半杯，积极的人会想着还有半杯——相信很多人都听过这个的老故事了。然而很多人不知道这个故事其实是有个陷阱的，那就是二元对立，这是一种观念的陷阱。 我们来思考这么一个问题，一个正念的人会如何看这半杯水？ 正念的人看到的就是半杯水，既不是缺了半杯的水，也不是还有半杯的水，就仅仅是半杯的水。 正念是一种当下的视角，观察到什么就是什么。 消极的人是怎么看的呢？他除了半杯的水之外，还“看到”了一个满杯的水，这个半杯水的差距会形成一个“对增量的追求”，也就是我们说过的欲望，而这种欲望是会产生负面情绪的。 积极的人是怎么看的呢？他除了半杯的水之外，还“看到”了一个空杯，这个半杯水的差距会形成一个“对存量的满足”，也就是我们说过的狭义的快乐，这种快乐是一种正面的情绪。 现在你再来想想，这两种情况，情况一是我们可以有十个装满水的杯子，而现在只有半杯水，我们可以拥有的更多。情况二是我们不但连水都没有，甚至连杯子都没有，我们一无所有。 发现了嘛？除了半杯水这个当下的状态，其他的观念以及情绪都我们附加的，他们无论是基于记忆还是基于想象，都是我们脑运作的结果，这种脑的解释是无穷尽的。 当然这其中脑的运作还是有区别的，比如基于记忆的前一分钟还是满杯水，然后喝掉了半杯。这种情况下积极的看就是一种想象，消极的看就是一种记忆。这里会有个有意思的问题，什么是真正的记忆呢？感兴趣的可以自己想想，我们就不讨论了。 这里我们要引申的是，还有半杯和差半杯一定就会产生情绪嘛？ 答案是否定的。可以把还有半杯和差半杯当作“二次现象”，那么情绪就是脑基于“二次现象的运作”。 如果把情绪当作“三次现象”呢？脑自然会有对于三次现象的运作，比如产生一些基于情绪的行为。如此循环下去，像一个绵延而去的水波。 当你的心足够强大的时候，你就能意识到脑的这些行为，你自然而然也就是能打破这个循环过程。 一种方法是觉知当下停止脑的运作既可，也就是正念或者冥想。这个我们说了好多次啦。 另一种方法也就是观念转换，我们可以很直接的调整自己的观念，但很难直接调整自己的情绪，不过通过调整观念也就是对于现象的解读，也可以达到调整情绪的目的。 比如当你觉察到对于半杯水的不满足导致负面情绪时，你改变一下观念，想着还好还有半杯水，那么你的情绪就会跟着转变。当然，如果这时你会返回去想还差半杯水，那么情绪也会变回去。 再比如，当你追逐一个漫长的目标时，离终点的距离尚远时，一方面既可以将视角转换到已经完成的部分用以激励正面情绪。也可以通过拆分目标，将欲望的完成难度与完成时间减小以避免负面情绪。 还比如，当你觉得人生没有意义的时候，想一想生命中美好的事物，试一试饿自己几顿，闭一会气，到医院重症科转一转，也许你会发现生命的存在本身就是一种美好。 还有各种应用我就不举例了，有缘人自行探索吧。 到这里你会发现，观念转变其实不是很难，这是自由意志给我们提供的一个能力，难得还是保持对自我的觉察这一条，当做到了追求快乐的第一步，第二步自然也就能做到了。 守住你的心，自然也就能守住你的脑，进一步的也就能用好你的脑了。","link":"/2023/11/16/half-galss-of-water/"},{"title":"幸福主义","text":"这是本系列的最后一片文章了，哲学的话题通常不太好写，写了其实也没多少人看，看的又没多少看完，而看完又能去照着做，坚持着做的就更是少中更少。 我们深处一个信息爆炸的时代，每天都会有各种各样的信息袭来。当下的人们在生活、工作、学习之外，用于关注自身的时间更是所剩无几。 这一方面是由于当下的很多工作时长不断变长、学习任务不断变多、生活需求也日益增多，另一方面则是因为各种以掠夺注意力为首要利益的商业模式大行其道。 我们并非要否定专业化分工与合作，以及多元商业化的价值与意义。相反我们认为这是社会进步的表现，我们很赞同罗素的“须知参差多态，乃是幸福本源”。 并且我们也不认为人可以真正的主导外部世界，主导这个世界的进程。群体的行为发展大于个体的总和，那是另一个是维度上的事态演变。并非英雄造时势，而是时势造英雄。 从宇宙星辰，万千人潮中去看每一个个体，看到都是渺小与微不足道。世界离开了每一个个体也都将照常运转，就像人少了一个细胞，哪怕是脑神经细胞也无碍于你的意识。 个体的意义不在于外部环境，而在于每一个人的心中。世界看我渺小，我看世界亦是如此。我们不能阻止外部世界定义我们，外部世界也不能阻止我们定义他们，这就是我们与生俱来的自由意志。 当我们觉醒自由意志，当我们厌烦外部世界对我们的定义，当我们想要找到自己人生的意义和归处时，我们该如何找到答案呢？ 很遗憾，这是一个无解的题。因为提出问题的是自由意志，回答问题的是自由意志，制定答案的还是自由意志。而自由意志是可以改答案的。 这并不是一个有答案的问题，甚至说这根本就不是一个真正的问题。真正的问题是有一个答案的，而觉醒的自由意志除了自己可以改自己设定的答案之外，它更不可能接受自己之外的答案。包括很多人想当然的——生存。 所以与其把这视为一个问题，把生命视作一张答卷。我们不妨把它视为一种提出主张的机会，把生命视作一张没有预设的白纸。四条纸边就是我们与世界的边界，边界之外我们听天由命，边界之内我们肆意发挥。 那么我们要在这张纸上涂抹上什么呢？对我们的人生我们要提出什么样的主张呢？是生存嘛？是财富嘛？是真理嘛？ 自由意志真的是太自由了，所以你能看到古往今来不同人提出不同的答案。有唯心的、有唯物的、有神创的、有机械的等等等等。相信在未来一定也会有更多的主张出现。 然而这么多的主张反而给了我们一个启发。那就是为什么新的主张会出现？为什么呢？ 因为对老的主张不满意。年轻人不喜欢老东西们制定的标准和规矩，要自立门户。你看西方哲学的分流、宗教的分流无不是如此。 觉醒了自由意志的人，自然而然知道这是必然发生的。一百个自由意志，必然最终是一百个人生主张。一个自由意志的主张必然和环境对它的局限、它的成长经历息息相关。 它是自由的，但它也不是完全自由的。它是不自由的，但也不是完全不自由的。四条纸边就是它的边界。因为环境在变，所以我们的主张也会变，也就是说我们的自由意志大概率是会改变主张的。 无论是别人给的主张，还是我们自己定的主张，在我们感到不满意的时候，我们都可以改主张。我们把这句话倒过来你就会发现。我们改主张是因为不满意就主张。再换句话说，是为了——消除不满意。 什么是不满意呢？是一种情绪，具体地说是一种负面情绪。所以，当我们把“消除不满意”，“生存”，“财富”……等主张放一起的时候，我们发现“消除不满意”的优先级其实更高。 而消除不满意其实有两种可能，一种就仅仅是消除不满意，另一种则是找到满意的。同时，神经科学和认知心理学的发展也让我们了解到，心理的活动产生往往也与情绪相关，除了被负面情绪驱使之外，也会被正面情绪驱使。 基于此，我们提出了把作为人生追求的主张，这里的快乐是广义的，正如前面我们对他的定义——创造快乐的情绪，不破坏平和的情绪，减少不快乐（狭义）的情绪。 这种关于人生的主张，其实是一种元主张。它是关于人生的主张的主张。而元主张之外的主张，就退变为追求快乐的途径，比如生存、财富、真理…… 在提出这种主张之后，我们也提出了实现的要求与方法，最根本的就是要对自我保持觉察。我们花了很大的篇幅说这个，因为它确实非常重要。没有觉醒自由意志的人，通过加深对自我的觉察以及理解，自然也会觉醒自由意志。 对自我保持觉察也就是我们提示的追求快乐的人生主张的方法论，有一个词简单的概括就是——自觉。 而之后我们说的正念也好、冥想也罢、还有心念转变，都是自觉时所具备的能力，当然也可以通过这些能力放过来训练自觉。对于这些能力我们也用一个简单的词概括——自主。 自觉则自主，自主则可以选择快乐。 我们认为过一个充满快乐的人生是一种幸福。 因此，虽然历史上已经有人用过这个名字。但在这里我们还是要把这种关于人生追求快乐的主张叫做—— 幸福主义。 祝开心。 ^o^","link":"/2023/11/17/happiness/"},{"title":"postgresql快速上手","text":"快速安装a. 通过图形界面安装（适合 windows, macOS）;b. 通过命令行包管理工具安装（适合 windows, macOS, linux）; 快速配置a. 端口配置，默认 5432;b. 启动服务，图形界面或命令行启动服务；c. 用户配置，默认当前系统用户以及一个默认的 postgre 用户，可自己新增用户；d. 密码设置，密码需要专门设置；f. 链接工具，可以设置系统变量添加工具，比如 psql 或者 pg_restore 之类的，也可直接使用可执行文件路径使用；g. 数据库配置，有默认的数据库和用户数据库，可以删除和创建； 快速使用a. 链接数据库，可指定用户,数据库,还有端口；b. 使用数据库，链接上以后有个类似命令行的工具，支持 SQL 语句进行查询，同时也支持数据库管理命令，比如删除数据库，切换用户，导数备份等等；c. 作为服务，链接程序配置端口、用户、密码、数据库连上之后通过orm 等链接库使用即可；","link":"/2023/12/12/basic-use-of-postgresql/"},{"title":"AI与大脑","text":"最近两年 AI 的热度远超从前，并且开始真正进入了人们的生活。AI 翻译过来就是人工智能，也就是人类创造的智能，这里的智能自然而然是以人类自身的智能来对标的。至于是否达标则众说纷纭。很多人认可图灵测试，但也有很多人不认可。然而不管标准如何，以人为对标总是没错的。也就是说，只要一个人工智能能做到人的智能所做到的事情，它就是通用人工智能了。 从这个角度来说，目前的人工智能，包括时下（2024年4月）的 GPT 都还不算，因为最重要的一点它目前只能从语料，以及转换成语料的其他信息中学习。这也是杨力昆（音译）的主要观点，真正的通用人工智能，应该能像人一样，不单是从语料中学习，更重要的是从这个世界中自住学习。不妨想想，人类的任何知识，最开始是从何而来的？是上帝或者外星人送给了人类一本书嘛？不是的，至少对懂科学的人来说不是的。他们最初来源于智力对自然的认知与创造。 尽管如此，另外两位图灵巨头还是从 GPT 中看到了通用人工智能的未来，他们认为人类或许已经找到了那把关键的钥匙，只要时间继续往前走，那扇门很快就会打开。而门后究竟是天堂还是地狱无人知晓，人类是在拿自己的未来做一场豪赌。于是在 AI 的狂飙中，我们总能看到保守派的呐喊。 这个世界会往哪里去不是我们能左右的，万物自有其时。我们能真正掌控的也自有自己。虽然如此，对大多数人来说，掌控自己确实也没那么简单。在《幸福主义》系列里，我们强调要过快乐的人生，就需要对自己的内心保持觉察，掌控自己的大脑以及其中的观念。然而，这并不容易。正如我们提到过的，心和脑时刻处于博弈之中，我们的脑时时刻刻都在准备着夺取我们的注意力，而我们的心倘若不够强大，那么它很容易就失守，导致我们陷入无明与执念当中。 《幸福主义》系列，讲的就是要过快乐的人生就需要保持自我觉察，并且重点强调保持自我觉察的方法，也就是我们说的追求快乐的第一步。至于追求快乐的第二步，我们也用了三篇文章讲了具体的方法。然而我们发现，如果只是单纯的讲解方法论层面，不讲解其中的一些更底层的运行原理，我们已经讲解了的方法很多人找不到操作的着手，也无法衍生出更适合自己的更具体的操作方法。 上一个系列我们讲的是“明心”，接下来我们要讲的就是“见性”了。我们一起来到大脑里看看，来看看这个“我”与“世界”的媒介，来看看心脑战争的战场里究竟发生了什么。这个过程里你会理解大脑究竟是怎么工作的，最重要的你会更加理解人性。也许你还会明白什么叫真正的虚无，会明白为什么我们选择主张把追求快乐做为一种人生，而不是其它什么的。 到这里，你可能会问这和 AI 有什么关系呢？AI 恰恰是打开这一切自我认知的关键钥匙，它的成功不仅仅是计算科学的突破，更是神经科学和认知科学的突破。是它使得我们更加了解自我，也为我们验证人类历史中，关于人的假想哪些更可靠，哪些更有道理提供了全新的视角。 在 AI 热度超前的当下，比起 AI 技术，人类更应该关注自身。 AI 注我，而非我注 AI。","link":"/2024/04/07/AI-and-Brain/"},{"title":"我的2023","text":"清明已经过去了几天，我这才开始回顾去年。不过比起去年一次性回顾三年的点滴，这也是种进步呢。 2023年是疫情放开后的第一年，在阳了过后，元旦前想去附近和早茶的店喝个早茶，发现已经关门了。很多店面和很多的人还是没有熬过过去的三年呢。 元旦约了广州的朋友们喝早茶，大多数的朋友们跑到外地跨年了，大家积累了不少外出的冲动呢。不过最后还是约到了灵敏和刘琰夫妇，饭后去他们办公室看了看，不得不感慨，在大家不怎么出门的几年里，有人还是在埋头进步的。 没有抢到回海南的票，自然而然的和对象要回江苏过年。回家前去万佳批发服装市场买羽绒服，也是因为疫情放开的原因，各店家开始提前清尾货，价格真的是便宜的没得说，拼多多都要自愧不如。衣服添置好就等过年回家了，回家前四处逛了逛，那些活下来的店面还是很乐观的，可以看出他们为接下来的营业额增长做足了准备，其中的一部分人几个月后为自己的误判付出了代价。 前一年回家把奥利奥寄养在了宠物店，家里横的它呆傻了一天多才开始慢慢吃东西，而且那个寄养的笼子怎么看也是中牢笼，生病的时候住住还行，也许没事的时候还是放在家里合适。于是给他买了喂食器，试着让它春节自己呆着。这个决定给节后后回来留了个惊吓。 这个春节是第二次来对象家过年，不像第一次来的时候那么紧张了，和亲戚们也熟悉了很多，去了黄海港逛了逛，还去看了一下荷兰花园（可能是叫其他名字），然后冬天的北方花哪开得出来，吹了一阵子冷风，这阵冷风也把我带回了河北冬天早操的早晨。几个人去星巴克喝了点热的，堂弟就呆着去吃七欣天了。这顿饭对象让我买单，但是最后抢不过堂弟，感觉在他们一家人的眼中，不，不对不是在眼中，在他们家人面前我就是个文弱书生，抢买单毫无换手之力，被对象教育了好久，有时间还是要加强体格锻炼呢。 回广州前，先和对象去南京看了看她的学校，本来担心保安不让进，毕竟疫情才放开没多久，而且去的是学校，然而对象和保安大叔聊了几句之后保安大叔居然让进去了。这也是对象让我觉得神奇的地方，很多事情我觉得按照常理沟通完全没可能的事情而不愿意沟通的地方，对象总能神奇的让常理失效。是啊，有什么事情不能去尝试沟通呢？沟通不正是架设桥梁的过程嘛？ 看完学校又去苏州和对象的大学舍友们聚了个餐，这也是他们毕业后几年之后的聚会。想想我自己，也好多年没和舍友们相聚了，不过好在有我俊爷在广州。有一个大学舍友在同城就是种奇妙的感觉，会觉得自己始终和自己的大学生活联系着，虽然我这人比较宅很少找他吃饭，基本都是他找我。。。是啊，我一直就是个宅男。好在我的那些外向的朋友老喜欢找我出去玩，我才不至于一宅到底。有空的时候，还是要主动点呢，老让人家约不太好。 过年期间带着《存在主义咖啡馆》，但是没有看完，他是后面慢慢看完的。这是一本哲学小史，讲的嘛也就是存在主义。对生活及存在没有疑惑的人是不需要看这本书的。哲学是给发问者提问的，如果没有相应的问题，那么还是不要看哲学了。需要的时候自然会需要，否则只会平添问题。 节后回到家，猫猫“看着”一切正常，唯独他把零食箱子里的一整袋火腿肠翻出来吃了。也不知道它究竟吃了多少，也纠结要不要带去检查。本着多一事不如少一事，还是没有带去。但碰到这种情况，其实可以咨询一下医生的。在跑跳吃饭都正常一周后，它开始呕吐，而且吐出了血，于是呆着它去看了医生。照影出来，可以看到它体内还有一些铁环，因为没有肠梗阻，所以最后选择了内窥镜取物。用时三个小时，终于取出了大部分。剩下的它自己后面排便也排出来了。也是不是给他开了罐头它吃太撑，导致割到胃它可能也会慢慢排出来吧。不过还早最后没事，顺道长了一下身价。 以前的人过年前后是猫冬的时候，而我则觉得过年前后是一年中最忙碌的时候。工作没少多少，还有年底冲刺，生活又排满了更多的事情。这种过节真的是过节嘛？或许不是节日的问题，而是打工人的问题。现代工作不仅是反人性的，而且是反传统文化的。 忙碌的春节过后，就是常规的日常工作了。2022年下半年开始参与到 AI 画图项目之后，2023年就在这个方向上快速更新。几个月里，边工作边学习 AI 的相关知识。转眼就到了四月份，清明只放了周三一天假，并没有拼出虚假的三天假期。我觉得是一种进步，然而也要考虑五一的计划了。依旧，没有抢到五一会海南的票。于是爸妈和姐姐提出五一他们过来广州玩。于是就准备五一他们来的事宜和计划。 然而事情总是出乎意料的，五一他们过来了之后，很快三个人都阳了，其中老妈还是一阳。于是，五一他们不远千里来这边躺了几天又回去了。不过也好，也算开了个好头。不过怎样，一家人有计划相聚总是件有意义的事情。 也是在五月，通过一段时间 AI 的学习后，开始意识到佛学对人的一些认知与 AI 对人脑的模拟达成的结果有某种程度的吻合。于是看了一些佛学的书，特别是一行禅师的书。接下来的一段时间里，也看了一些杨定一的书，加上《存在主义咖啡馆》，还有我对冥想的实践。这些为我一直困惑的关于人生的一些问题的答案提供了思路。于是从五月开始我开始写《一种关于人生的主张》系列文章，一直到十一月份陆续写完，并给系列取了个大标题《幸福主义》。 这是我给自己关于人生的哲学问题的答案。那些，在病痛、失落、悲伤、迷茫以及虚无时我不断问自己的问题的答案。也算是我给这个世界寄予我思想的回馈吧。 五月末的时候，利用周五晚和周六日去了一趟汕尾、汕头、潮州两日游，算是我们对自己的一次突破吧，突破的时候出去旅游一定要是节假日。这一次突破，也让我们觉得，出去玩的机会还是很多的，一个平常的周末就可以，而非在那几个有限的节假日里，而且费用还便宜，票也好买。另一个，就是我那些潮汕朋友，原来潮汕两个字代表着那么多地方，就像我说我是海南的一样。 当然，两天会海南还是不太实际，火车就太久了。于是端午对象抢到了票，于是我时隔将近六年后又短暂的回了一趟三亚。说有变化吧，是有变化，但也没那么大变化，还是那么漂亮。真正让我觉得变化大的是，原来我的初中和高中居然分裂成两个学校了。我还是喜欢我当年初中的这个校区，在这里呆了四年。虽然那会沉迷网络，但比起高二去新校区后，沉迷学习来说，有更大的自有，每天都能回家开电脑，也每天都能回家洗热水澡。虽然家在三亚，但是我不喜欢洗冷水澡，一直都不喜欢，所以我也不喜欢下雨。下雪我倒是很喜欢。 时间短暂，只见到了三个老友。其实吧，我远程办公好几年了，回家办公几天，几周，甚至几个月的旅行办公其实未尝不可。但毕竟是有对象的人了，远程办公的另一个特点就是有时间做饭，所以远程办公对我来说，更重要的是用来给对象做饭。以前对象年年都会因为肠胃原因去医院，应激性肠胃炎。但自从自己做饭之后，就没再因为这个问题去过医院了。 体会到平常周末出游的便利，八月份的时候，对象请了周五一天假，拼上周六日，周四晚出发，去桂林和阳朔玩了三天。对象很想去梯田，但是这次我们没安排好时间。不过就算是探个路，为下次再来积累了经验。 在之后就是十一安排爸妈和对象爸妈在江阴见面，虽然我们这边有些做不到位的地方，但是对象父母还是比较包容的。虽然两地风俗和文化不同，但是爸妈们的价值观基本还是一致的。这一次姐姐也同行，所以见完面就呆着他们去无锡、苏州、上海都完了几天。小时候吧，我就老让我妈带我们出去旅游和玩，但是很多年他们也还没带过。那时的生活有很多的限制，所以这一次也算是一家子到自家城市之外的地方旅游了。爸妈见完面，我和对象的事情也算是向前推进了一大步吧。 下一步就是买房了。说到买房，这几年大家对这个话题不免会有惊恐，生怕踏空了。我们当然也怕。然而，这个世界风险和收益始终是并存的。而且人也不应该只考虑风险与收益，人还有责任、还有理想、还有梦。 我吧，其实在之前上班的区是有房子的，但是增城区离市区太远了，去度假还是不错的日常通勤就不太合适了。所以来到市区后，就一直租房子住。前些年出于种种原因，没有置换。既有转行要学习的东西太多，心力不足。也有，我和对象未来几年在哪个城市发展也不确定，还有户口挂靠等等。但总的来说时候未到吧，而且我自己的认知也没准备好。在买这个房子的时候，我对房地产还一无所知。像是开了个盲盒，如果我要还在增城区上班从自住的角度来说，也确实挺不错的。但放眼更大来看，这就不是一个最优的决策了。 第一次产生置换的想法是受对象其他，那是2021年，当时也去一些地方踩了踩盘，但是受当时的政策限制，也并非最好的置换时机。然而事情的走向也并非一成不变的，若2021年卖掉再买，那就是高位换盘，确实不是好策略。反过来，如果当时卖出去，过几年再买入，比如时下，那就是一个很好的决策。但人是有局限的，时局在未发生前也是无法准确预测的，衡量风险与收益的智慧就是对赌的智慧。当然，几年前的我是没这个智慧的，那时的我还没有接触到一点点金融的皮毛。也就是在那时开始，我也才开始接触的金融的皮毛。也才发现这门重要的学问。 之前也说过，也是从那时起我学习金融知识以及学习水库文集。很难讲我是为了学习房地产去学习金融，还是为了学习金融去学习房地产。总之处理技术之外，我又给自己增加了两门学习内容。2022年的年终，在进行了一年之后，我又去市场踩了一下盘，当时疫情还没放开，一些走向也是很明显的。加上广州当时一场急封行动，这个事情又搁置了。而且当时的认知也告诉我条件还是不成熟。 于是乎，在去年十月份确定要买房之前，在七月份我在白云山游荡的时候，一个想法涌上心头，该开始看房了，今年的看房之路就这么开始了。一开始只是周末有空的时候和对象去看看，后来就变成我有空的时候就去先筛选。在缓慢进展的时候，就到了十一。我们的看房计划也就变成了买房计划。对打算结婚的人来说，有一个自己能每天下班回家的房子，不用担心房东装修或者卖房要赶忙搬家，租房可以接受，但也有缺点。这点在2021一年内因为房东装修搬家两次的经历让我很明确。我不喜欢搬家，我家在我小时候一直搬家，所以我也不喜欢住校。我喜欢呆着一个固定熟悉的地方。所以在陪对象签下网签合同的那一刻，此前对房产与交易的种种恐惧都被心中的激动淹盖。 有自己的一个家是一种信仰，与房地产无关。是值得为之奋斗的美好事物。有了产权的保证，很多在出租屋里不会做的事情，才能没有顾及的去做。比如添置一架钢琴，有或者挑选心仪的家私。 在十一假期后的一天，团队告诉我因为老板的资产被黑事件，团体要减薪和裁员。正当我在想如果减薪的话，还要不要干下去的时候，对面告诉我我可能需要暂时离开团队了。虽然对面很难过伤感，但我其实松了一口气。因为我也为没时间看房为难，我认为买房这件事窗口期可能不多了。时间就是价值，减薪之后加大时间的损失，裁员反而还我自由。自由，是我呆在这个团队最大的原因。我不喜欢九九六，甚至是骨子里的厌恶。所以虽然也有确定，我还是很喜欢自己的团队的，因为自由。最终安慰了一下 leader 之后，确认能拿到最后的工资就恢复了自由身。 从2019年加入团队，到2023年10月，连续呆了四年。作为一个裸辞过三次的人，我对自由的向往已久。只是之后，我选择这份自由来看房。目标嘛，按照业内标准看房两百套。对房地产走势、政策、经济的看法每个人都有。所以这个过程中，我也在听着各方面的声音，有看好，有看坏，还有不好不坏的。学会把不同的生意放在一起，站在不同的角度解读同一个事情，让自己的脑袋和自己打架，是一件很耗脑力的事情。要是我当时还在上班，天天敲着代码，我的脑袋能量肯定是不够的。如果过去几年的是理论学习，看房的这几个月则是微观理论验证。 这个过程里，我觉得最有意思的有两件，第一件是对房子的认知不断变化，比如一个小区，今天觉得不错，多看几个之后也就觉得那样。一些原来不想去看觉得偏远的地方，去了之后发现以外的好。还有一些本身各方面的很好的小区，因为大众的一些观念价格严重低估。事不躬亲不知道。很多人不过是活在观念的陷阱里了。 另一件就是有自己的脚把广州城区走了一遍。最开始我走过通什，后来走过三亚，再后来走过增城，而现在走了一遍广州。走过在珠江两岸，走过广州塔，走过省委大院，走过中信。广州吧，好像也没有那么大。大城市和小城市比不在自己的地大，地哪里没有呢？真正大的是密度，谁能在同样面积的土地上放进不同的产业、不同的设施、更重要的是形形色色的人。有人的地方才有城市，才有房地产。 最开始我倾向于自己住了六年熟悉的客运站这里，后来又觉得旁边燕塘方便，再后来觉得海珠北不错。如果不是对象的公司准备搬到黄埔区，我们很可能选在海珠区了，或者也可以说海珠岛。从海南岛，到海珠岛也是一种怀旧呢。 择城、择区、择筹、择时。在一步一步过筛子的时候，时间来到了十二月。因为我另一个伙伴要跑路，所以团队又想把我叫回去。等于给我放了两个月的假期，但我很忐忑，虽然我觉得不用担心工作的事情，工作自己会送上门，但没想到这么快，回到熟悉的团队比区新团队也会少适应时间。但，我还没买到房子啊。我还没看够两百套呢。和对象考虑了半天后，觉得还是回去吧，毕竟两个月没入账了，看房重要吃饭也重要呢。于是看房的速度又减慢了。 2023年的最后两天我们筛选出了一套符合我们需求的房子，在和卖家隔空博弈的过程中，为了避免我们目标单一带来的谈判劣势，我们发现了另一套之前看过却没留意的房子。也正是这套房子，开启了我们新年的第一天，也是我们第一次在谈判桌上与人长时间博弈。 如果说2023年有什么影响深远的大事的话，那就是 AI 与买房。这两件事一件促进了我对自己的认知，另一件促进了我对世界的认知。当然也不仅仅也他们觉得，他们只是在一系列积累中最终开花结果的地方。出去这种大时空尺度的事情，生活中还有很多值得回忆的小事。 比如在七欣天的那次，堂弟问对象吃什么蟹，结果对象指着生鲜缸里的活蟹说吃这个，那一顿四个人七百多。所以我没抢到买单，对象很不高兴，嗯，都是我的错。但我真的扭不过180多斤的大汉啊。 比如在三亚和伟哥还有老鸭和椰子水聊三两马车，还有见识李家的豪宅，以及他家那台望远镜。像我们在初一的时候，一伙人众筹过家里的放大镜，要由我研究组装一个望远镜出来，当然最后当然是做不出来的，因为光有凸透镜是不行的，还有要凹透镜啊。当然，还有那些我来不及拜访和叙旧的老友。 比如在上海的时候，老父亲逞强要去淮海路怀旧，结果我们从淮海路走到外滩，他的脚就告警了。后面他们三个就佛系自己逛了，这样也挺好，一家人去一个地方，各逛各的。 比如和俊爷涛哥一块和来广州的大学同学吕建吃了饭，建哥当年在大学对我提醒过一句话“水至清则无鱼，人至廉则无友”，当年我自然是听不进这句话的。但后来我明白这句话讲的其实叫和光同尘，与同流合污并不一样。对了，涛哥是俊爷媳妇，女生。是四个人吃饭，不是六个人。 比如韩旭同学带娃来广州玩，也是和俊爷涛哥夫妇一块吃的饭。这些都是上大学之前，在学校群提前认识的人，当然还有我另一个舍友尧子。 还有广州亲戚疫情后难得的聚餐，还有小舅公给的广州队对江苏队的篮球票，还有那颗陪我看了一下午房的柚子。 生活总在继续，一成不变的不是生活，而是你选择生活的方式。 2023年是疫情放开后的第一年，人们开始走出家门，人与人的互动开始回到从前。 生活再一次丰富了起来。","link":"/2024/04/12/my-2023/"},{"title":"从“我”说起","text":"关于“我”的意识是什么时候出现的呢？ 或者说从什么时候开始，你意识到了“我”这么一个存在？ 更远的，在没有意识到“我”之前的，意识能力又是什么时候出现了呢？ 个人对于这个问题的回答受到记忆力的约束，不单是那种记忆力衰退的约束，更多的是记忆力尚未完全发展的约束。 以此，对于这个问题，我们要从第三方视角来看。我们身边的人看我们，或者我们看身边的人。 这有一个潜在的假设，人人都是一样的，我和你并非一个特殊的个体。 这还有一个潜在的取舍，有意识表现的才算有意识。虽然有点残酷，但是一块有意识却无意识表现的石头，我们认为他是没有意识的。 意识是“我”的前提，而感知是意识的前提。换句话说，意识必定是具备感知能力的，这包括感知对感知的感知（后面我们会看到这种类型的感知的重要性）。 这里有一个和意识一样的取舍，有感知而无感知反应事物，我们认为它是没有感知的。 最后感知的前提是物质和物理性质，这既包括有形的物质也包括无形的物质。物质和他们的物理性质是感知的前提。同样的，尚未被证实的物质和物理性质，我们认为其实不存在的，比如暗物质和其性质。 现在我们可以部分的回答上面的一些问题了。 构成“我”的物质，在“我”出生前就存在了，物质不断的聚合或分散，在某个时期开始组成了我的物质边界，而这些都是在物理性质作用之下发生的。 这个边界之上，每时每刻都有物质进入，也有物质离开，边界也在不断变化。这个边界就界定了我的边界，也是我的物质基础。 而这个物质是不是我，则取决于一个意识的判断。既可以是我的意识，也可以是他人的意识。 离开了意识，这个物质边界就只是一个物质存在，是我们不曾知晓的山林中的一块石头，是不曾知晓的宇宙中的一粒尘，是我们不曾知晓的大海中的一朵浪花，边界只是一种短暂的物理形态。 虽然物质边界不断变化，物质也在进进出出，但物质边界之内的动态物质组合的物理性质间的相互作用使得这个边界呈现出了感知能力。 有物质边界的实体很多，比如石头、砖头、微生物、植物、动物等等，但只有其中的一些有感知能力。 草履虫会向着营养物质游动，一朵花会向着太阳生长，小动物的行为则更为复杂，感知能力就是对外界变化做出反应的能力。进一步的人类设计的机械也是具备感知能力的，比如捕鼠夹、自动控制设备等等。 人类历经漫长的岁月才搞明白了物质和它的物理性质如何产生诸多的感知能力，并设计了众多的人工设备。这一切在当今的基础教育下并不难被人们所理解，但不要忘了取得这些成果的漫长艰辛岁月。 强调这个是当前人类正处于感知能力如何构成意识的探索阶段。 很显然，具备感知能力的事物也还是很多的，但是具备意识的事物显然只有我们能观察到的动物（包括高级动物）。 感知能力是物理性质的叠加结果，而意识是感知能力的叠加结果。 那么感知能力和意识的分界点在哪里呢？分界点真的存在吗？ 要回答这个问题，我们需要先明确一下什么是意识。什么是意识呢？ 感知能力是对外界变化做出反应的能力，那么意识也一定是高级的对外界变化做出反应的能力。 这个高级一点的能力是什么呢？想想一个捕鼠夹的反应是不是很简单？我们把这种简单叫做机械反应，那么高级的反应就一定不是机械的反应。换个角度来说，再高明的机械反应，也还是机械反应。 我们再来看看与人的交流，我们和一岁小朋友以及和一个七八十岁老年人沟通会明显感觉不同，哪怕老人家老年痴呆了。 又或者你和一个初级棋手对弈以及和一个高级棋手对弈，感觉显然也会不同。 这个高级的能力就是，感知能力对感知能力的感知。更直白的说，就是对外界变化做出反应的同时将我们的反应产生的变化也作为做出反应的依据。 为什么我们会把下围棋作为人类智慧的巅峰？为什么爱因斯坦会说想象力比知识更重要？ 意识作为高级的感知能力，实际上是感知能力的高阶应用。最原始的感知能力是一阶，之后可以二阶、三阶、四阶……还能二三四阶叠加。 从这个角度来说，意识与其说是一个精神主体，不如说是一种大脑状态，它是有不同程度的，形象的说它是分层次。 然而并非只要是感知能力的高阶应用就会产生意识，意识的产生必须符合一定复杂度和组合方式，而这就是当下正在探索的。 到这里是时候回答最开始的那个问题了，关于“我”的意识是什么时候出现的？ 类似，当感知感知感知的时候，意识产生了。 当意识意识意识的时候，“我”就产生了。","link":"/2024/07/14/start-from-I/"},{"title":"程序员看《心经》","text":"阅读本文需要一丢丢的 javascript 基础，如果没有，花半个小时学习一下基本的语法就行啦。 “观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。” 菩萨说的是我们的内心，理解成我们的意识也行。因为人有时候会迷失内心，所以保有内心可以说是一种很好的状态，故而菩萨。前两句第一句说的是，用我们的心或者意识观察自己，看得久了，看得细了，我们就能到达智慧的彼岸。 般若就是智慧，波罗蜜多就是到彼岸，意思就是我们在一条河边，河对面就是有智慧的人呆的地方啦。到达智慧的彼岸会怎么样呢？就是明白了五蕴其实是空的，然后一切的痛苦厄难都拜拜了您，也就是可以送走它们的意思。 这一句是全经的纲领，前两句是方法，后两句是结果也是目的，照见五蕴皆空是收获的结果，有这个结果后就可以度一切苦厄了。 ”舍利子，色不异空，空不异色，色即是空，空即是色。“ 舍利子是佛陀的弟子，经其实就是大佬的传授的经验，通常就是语录的形势。从这句开始，就是在解释上面五蕴皆空是啥样，也就是在解释为什么五蕴皆空能够度一切苦厄，其实也在为前面能达到照见五蕴皆空的行深般若波罗蜜多的修行方法提供理论证明。下面开始上代码了： 12let se = '赤' or '橙' or '黄' or '绿' or '青' or '蓝' or '紫';let se = null; 假设我们我们有一个叫 se 的变量，他用来装我们日常看到的颜色，你可以理解他就是你盯着一面的眼睛看到的颜色，这个墙可以是赤橙黄绿青蓝紫，然后当你背对着这面墙的时候，你不依靠记忆关于它的颜色是什么呢？是 null，也就是空。 这就话的意识就是佛陀在告诉舍利子，se 的值是具体的颜色，还是 null。他都是 se 这个变量，se = null 他是 se, se = ‘红’ 他还是 se。 “受、想、行、识，亦复如是。” 这句话的意识另外四个变量，shou, xiang, xing, shi 也是一样的，不管他们放啥具体的值，他们也可以放 null，也就是空值，都是一个变量。 “舍利子，是诸法空相：不生、不灭；不垢、不淨；不增、不减。” 佛陀又继续告诉舍利子，法就是变量的概念，不是具体的哪一个变量，就是我们通常说的变量通称，诸法空相，说的是任何变量等于 null 也就是空的情况。和变量的其他具体值，例如 ‘出生’，‘死亡’，‘肮脏’，‘干净’，‘1’， ‘-1’，是不同。null 这个值是不带有任何信息的，你不能通过 null 得到任何东西。 “是故空中无色，无受、想、行、识；无眼、耳、鼻、舌、身、意；无色、声、香、味、触、法；“ 这里承接上一句，因为 null 不带任何信息，所以具体说就不表征具体的颜色、具体的想法、具体的行为、具体的意识。所以取 null 为空的状态下，身体的各种感觉、身体本身还有意识主体都”不存在“了、没有任何颜色、声音、气味、味道、触觉、和被意识到的对象。 ”无眼界，乃至无意识界，无无明，亦无无明尽，乃至无老死，亦无老死尽。“ 没有感知主体，也就没有感知对象，自然也就没有感知范围，也就是不存在眼睛能感觉到的范围，以及意识能意识到的范围。因为全是 null 了。想想你背对着的重新随机上了色的墙的颜色，又或者想想自己是一个植物人，或者再简单点回忆一下你睡着的状态。只有醒着的你，能知道你”曾经睡着了“。睡着的你是不知道你睡着的，更不会知道你什么时候会醒来。同样地，你也不知道你什么时候老去和死亡，更不会知道自己已经对老去和死亡没有了判断。 ”无苦、集、灭、道，无智亦无得。“ 在这种状态下，佛陀之前教授的解脱通过的另外的一条道路的四帝（不展开），”苦、集、灭、道”也自然不存在了，当然也不需要了，因为苦也是需要 let x = ‘苦’ 的。这时我们也不会去分析结构，然后给于内心中的变量赋予 null 之外的东西。通俗点讲，这类似你深度睡眠的状态却不完全相同，这种类似的状态能发生在你醒着的时候。 ”以无所得故，菩提萨埵，依般若波罗蜜多故，心无罣碍；“ 因为我们没有从外界获取新的信息也就是具体的值来装载内心的变量，内心就没有各种赋值过程了，然后内心自然清明，也就能到达智慧的彼岸，也因为内心中的变量能保持在 null 上面，它不为外在所累了。 ”无罣碍故，无有恐怖，远离颠倒梦想，究竟涅槃。“ 因为内心中的那些承载五蕴的变量都是 null 了，自然就没有各种形形色色的值出现，也就是情绪的表征没有来源了，执念也无处生根了，人到达了一种心如止水的涅磐境界，所以痛苦自然也就拜拜了您。 ”三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。“ 这里就是总结啦，说的是佛们都是用这个“观自在菩萨，行深般若波罗蜜多时”，的方法获得了几种菩提，也可以理解成心境或是心理状态。 ”故知般若波罗蜜多，是大神咒，是大明咒，是无上咒，是无等等咒；“ 这里还是在做总结，意思是上面的那些证明讲完了，你小子应该能看出来这个修行方法是个好东西吧。 “能除一切苦，真实不虚。故说般若波罗蜜多咒，即说咒曰：揭谛揭谛！波罗揭谛！波罗僧揭谛！菩提萨婆诃！” 最后再感慨一次，这真能除一切苦厄。然后最后感慨一下，修行的四个过程，开始行动，正在到达，到达，成就。","link":"/2024/08/26/The-Heart-Sutra-in-Coder-view/"}],"tags":[{"name":"哲学","slug":"哲学","link":"/tags/%E5%93%B2%E5%AD%A6/"},{"name":"tips","slug":"tips","link":"/tags/tips/"},{"name":"认知心理学","slug":"认知心理学","link":"/tags/%E8%AE%A4%E7%9F%A5%E5%BF%83%E7%90%86%E5%AD%A6/"},{"name":"佛学","slug":"佛学","link":"/tags/%E4%BD%9B%E5%AD%A6/"}],"categories":[{"name":"信息摘录","slug":"信息摘录","link":"/categories/%E4%BF%A1%E6%81%AF%E6%91%98%E5%BD%95/"},{"name":"编程技术","slug":"编程技术","link":"/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"},{"name":"诗词歌赋","slug":"诗词歌赋","link":"/categories/%E8%AF%97%E8%AF%8D%E6%AD%8C%E8%B5%8B/"},{"name":"生活感悟","slug":"生活感悟","link":"/categories/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"},{"name":"闲谈趣事","slug":"闲谈趣事","link":"/categories/%E9%97%B2%E8%B0%88%E8%B6%A3%E4%BA%8B/"},{"name":"个人轨迹","slug":"个人轨迹","link":"/categories/%E4%B8%AA%E4%BA%BA%E8%BD%A8%E8%BF%B9/"},{"name":"读书心得","slug":"读书心得","link":"/categories/%E8%AF%BB%E4%B9%A6%E5%BF%83%E5%BE%97/"},{"name":"英语学习","slug":"英语学习","link":"/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"},{"name":"自我管理","slug":"自我管理","link":"/categories/%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/"},{"name":"虚构","slug":"虚构","link":"/categories/%E8%99%9A%E6%9E%84/"}],"pages":[]}